window.COURSE_DATA = {"language":"en-GB","lastDownload":"2018-10-02T17:19:41+03:00","title":"Python","modules":[{"id":58,"name":"Pre-Course Work","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"i3c9bc738ba013b5b857f7db02a24513e","items":[{"id":2095,"title":"Getting started with Python","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003eWelcome to the exciting world of Python! You are about to embark on a web development journey using Python's object-oriented programming language.\u003c/p\u003e\r\n\u003cp\u003eIn this module, we are going to learn the fundamentals of building web applications using Python and its web frameworks. The web frameworks we will use are Flask and Django, but that will come in a bit later.\u003c/p\u003e\r\n\u003cp\u003eTo start with, we'll focus on the basics of Python as a programming language. Here, we will learn how to install python in our computers, we'll also learn about variables, modules, control flows and loops. Make sure you understand these Python basics, they will help you to easily grasp the more complex concepts that we will encounter in this course.\u003c/p\u003e\r\n\u003cp\u003eLet's get started!\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e","exportId":"getting-started-with-python"},{"id":416,"title":"Weekend: Intro to Python","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eIntroduction To Python\u003c/h2\u003e\r\n\u003cp\u003ePython was created in the late 1980's by Guido Van Rossum as a hobby project developed over the Christmas holiday. Since then, it has grown into one of the largest, and most extensive programming languages out there.\u003c/p\u003e\r\n\u003cp\u003ePython code is maintained and supported by the Python Software Foundation. Its creator Guido is actively involved in its progress and was given the title Benevolent Dictator For Life.\u003c/p\u003e\r\n\u003cp\u003ePython is a general-purpose programming language. It is used in various fields such as mathematics, agriculture, electronics, and mechanics.\u003c/p\u003e\r\n\u003cp\u003eIt is a \u003cstrong\u003eStrongly Typed\u003c/strong\u003e language- meaning that every object in Python has a definite type associated with it.\u003c/p\u003e\r\n\u003cp\u003eIt is also \u003cstrong\u003eDynamically Typed\u003c/strong\u003e- meaning that no type checking is done prior to running Python code.\u003c/p\u003e\r\n\u003cp\u003ePython is an \u003cstrong\u003eInterpreted Language\u003c/strong\u003e. This means that code \u003cem\u003ecompilation\u003c/em\u003e and \u003cem\u003eexecution\u003c/em\u003e is done at the same time.\u003c/p\u003e\r\n\u003ch3\u003eWhere can we use Python?\u003c/h3\u003e\r\n\u003cp\u003eThe Python language is used in many different fields.\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eWeb Development\u003c/strong\u003e - Python is used to create really dynamic websites using frameworks like \u003cstrong\u003eFlask\u003c/strong\u003e, \u003cstrong\u003eDjango\u003c/strong\u003e, and \u003cstrong\u003ePyramid\u003c/strong\u003e.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eScientific Computing\u003c/strong\u003e - It has several libraries dedicated to it for scientific computing like \u003cstrong\u003enumpy\u003c/strong\u003e, and \u003cstrong\u003eearthpy\u003c/strong\u003e for earth sciences.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eGame Development\u003c/strong\u003e - Python has a gaming library called \u003cstrong\u003epygame\u003c/strong\u003e for creating games that use keyboard and mouse interactions.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eDesktop Applications\u003c/strong\u003e - Python comes with \u003cstrong\u003etkinter\u003c/strong\u003e a graphical user interface library that allows us to create user interfaces for our applications.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eThese are just a few examples of where Python language is applied.\u003c/p\u003e\r\n\u003ch3\u003eWho uses Python?\u003c/h3\u003e\r\n\u003cp\u003eSeveral companies use Python in their day to day runnings. Here is a list of just a few:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eGoogle (YouTube)\u003c/li\u003e\r\n\u003cli\u003eFacebook (Tornado)\u003c/li\u003e\r\n\u003cli\u003eDropbox\u003c/li\u003e\r\n\u003cli\u003eYahoo\u003c/li\u003e\r\n\u003cli\u003eNASA\u003c/li\u003e\r\n\u003cli\u003eIBM\u003c/li\u003e\r\n\u003cli\u003eMozilla\u003c/li\u003e\r\n\u003cli\u003eQuora\u003c/li\u003e\r\n\u003cli\u003eInstagram\u003c/li\u003e\r\n\u003cli\u003eReddit\u003c/li\u003e\r\n\u003cli\u003eDisney\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2\u003eHelpful Resources\u003c/h2\u003e\r\n\u003ch4\u003e\u003ca href=\"https://docs.python.org/3/\"\u003eOfficial Python Documentation\u003c/a\u003e\u003c/h4\u003e\r\n\u003cp\u003eDocumentation for Python's standard library, along with tutorials and guides, are available . The Python documentation might look scary at first, but as we go along you will find it is really easy to understand and a very powerful resource.\u003c/p\u003e\r\n\u003ch4\u003e\u003ca href=\"https://www.google.com\"\u003eGoogle\u003c/a\u003e\u003c/h4\u003e\r\n\u003cp\u003eWhen in doubt, \u003cstrong\u003eGoogle\u003c/strong\u003e it. We will find most of the problems we might encounter in programming have been encountered by other developers as well. Google should be our first line of defense when we encounter an error we have never seen before or for research.\u003c/p\u003e\r\n\u003ch4\u003e\u003ca href=\"https://www.stackoverflow.com\"\u003eStackOverflow\u003c/a\u003e\u003c/h4\u003e\r\n\u003cp\u003eWith a large active community of developers, StackOverflow is the place where we will find ourselves looking for answers to our programming questions. It is a very useful resource to have.\u003c/p\u003e\r\n\u003ch4\u003e\u003ca href=\"https://www.tutorialspoint.com/python3/\"\u003eTutorialspoint\u003c/a\u003e\u003c/h4\u003e\r\n\u003cp\u003eThis is a good resource for quick information, and examples of different concepts in Python.\u003c/p\u003e\r\n\u003ch4\u003e\u003ca href=\"https://learnpythonthehardway.org/python3/\"\u003eLearn Python the Hard Way\u003c/a\u003e\u003c/h4\u003e\r\n\u003cp\u003eThis is really awesome for a hands-on approach to Python. At this site, you will get to learn Python topics and complete exercises on them.\u003c/p\u003e\r\n\u003ch2\u003eInstallations\u003c/h2\u003e\r\n\u003cp\u003eMost Mac and Linux systems have Python pre-installed.\u003c/p\u003e\r\n\u003cp\u003eIn this course we will be using \u003cstrong\u003ePython3\u003c/strong\u003e . This was a major version update from \u003cstrong\u003ePython2\u003c/strong\u003e with new features and syntax changes. Python3 is also the future of Python and is best we learn how to use it.\u003c/p\u003e\r\n\u003ch3\u003eLinux Installation\u003c/h3\u003e\r\n\u003ch4\u003eStep 1: Check if Python3.6 is Installed\u003c/h4\u003e\r\n\u003cp\u003eOpen the terminal and type in \u003ccode\u003epython3.6\u003c/code\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIf you get the following error:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003epython3.6: \u003cspan class=\"nb\"\u003ecommand\u003c/span\u003e not found\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eit means that Python is not installed - follow the next steps in this section for installation instructions.\u003c/p\u003e\r\n\u003cp\u003eThe console may give you a message that Python is not installed, followed by a command that will install it for you. In that case, follow the instructions in the console.\u003c/p\u003e\r\n\u003cp\u003eIf it does not give an error, it means you have \u003ccode\u003epython3.6\u003c/code\u003e installed and you can move on to the \u003cstrong\u003eInstalling Third Party Modules\u003c/strong\u003e section below.\u003c/p\u003e\r\n\u003ch4\u003eStep 2: Install Python3.6\u003c/h4\u003e\r\n\u003cp\u003eOn the terminal copy the following individual commands on your console.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo add-apt-repository ppa:jonathonf/python-3.6\r\n$ sudo apt-get update\r\n$ sudo apt-get install python3.6\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen prompted put in your password and leave the commands to run.\u003c/p\u003e\r\n\u003ch4\u003eStep 3 : Confirm Installation\u003c/h4\u003e\r\n\u003cp\u003eOn the terminal type in \u003ccode\u003epython3.6\u003c/code\u003e. If the output looks like this, it means that Python has installed successfully.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e $ python3.6\r\n\r\nPython \u003cspan class=\"m\"\u003e3\u003c/span\u003e.6.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003edefault, Nov \u003cspan class=\"m\"\u003e17\u003c/span\u003e \u003cspan class=\"m\"\u003e2016\u003c/span\u003e, \u003cspan class=\"m\"\u003e17\u003c/span\u003e:05:23\u003cspan class=\"o\"\u003e)\u003c/span\u003e \r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eGCC \u003cspan class=\"m\"\u003e5\u003c/span\u003e.4.0 \u003cspan class=\"m\"\u003e20160609\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e on linux\r\nType \u003cspan class=\"s2\"\u003e\"help\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"copyright\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"credits\"\u003c/span\u003e or \u003cspan class=\"s2\"\u003e\"license\"\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e more information.\r\n\u0026gt;\u0026gt;\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo get out of this interface use the \u003ccode\u003eexit()\u003c/code\u003e function like this:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6\r\n\u0026gt;\u0026gt;\u0026gt;exit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow go to Installing third party modules below.\u003c/p\u003e\r\n\u003ch3\u003eMac Installation\u003c/h3\u003e\r\n\u003ch4\u003eStep 1: Check if Python3.6 is Installed\u003c/h4\u003e\r\n\u003cp\u003eOpen the terminal and type in \u003ccode\u003epython3.6\u003c/code\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIf you get the following error:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003epython3.6: \u003cspan class=\"nb\"\u003ecommand\u003c/span\u003e not found\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eit means that Python is not installed - follow the next steps in this section for installation instructions.\u003c/p\u003e\r\n\u003cp\u003eIf it does not give an error, it means you have \u003ccode\u003epython3.6\u003c/code\u003e installed and you can move on to the \u003cstrong\u003eInstalling Third Party Modules\u003c/strong\u003e section below.\u003c/p\u003e\r\n\u003ch4\u003eStep 2: Download Python3 latest release\u003c/h4\u003e\r\n\u003cp\u003eGo to the \u003ca href=\"https://www.python.org/downloads/\"\u003eDownloads page\u003c/a\u003e on the Python website and download the latest release of Python 3 by clicking the button at the top of the page.\u003c/p\u003e\r\n\u003ch4\u003eStep 3: Install Downloaded File\u003c/h4\u003e\r\n\u003cp\u003eInstall the downloaded file by following the installation instructions that follow.\u003c/p\u003e\r\n\u003ch4\u003eStep 4 : Confirm Installation\u003c/h4\u003e\r\n\u003cp\u003eOn the terminal type in \u003ccode\u003epython3.6\u003c/code\u003e. If the output looks like this, it means that Python has installed successfully.\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003ePython 3.6.0 (default, Nov 17 2016, 17:05:23)\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\u0026gt;\u0026gt;\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eTo get out of this interface use the \u003ccode\u003eexit()\u003c/code\u003e function like this:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e $ python3.6\r\n\r\nPython \u003cspan class=\"m\"\u003e3\u003c/span\u003e.6.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003edefault, Nov \u003cspan class=\"m\"\u003e17\u003c/span\u003e \u003cspan class=\"m\"\u003e2016\u003c/span\u003e, \u003cspan class=\"m\"\u003e17\u003c/span\u003e:05:23\u003cspan class=\"o\"\u003e)\u003c/span\u003e \r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eGCC \u003cspan class=\"m\"\u003e5\u003c/span\u003e.4.0 \u003cspan class=\"m\"\u003e20160609\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e on linux\r\nType \u003cspan class=\"s2\"\u003e\"help\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"copyright\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"credits\"\u003c/span\u003e or \u003cspan class=\"s2\"\u003e\"license\"\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e more information.\r\n\u0026gt;\u0026gt;\u0026gt;exit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eInstalling Third Party Modules\u003c/h3\u003e\r\n\u003cp\u003eOther than the built-in standard library of modules, Python developers have created their own modules to further extend Python's functionality.\u003c/p\u003e\r\n\u003cp\u003eThe best way to install these Python modules is to use Python's \u003cstrong\u003epip\u003c/strong\u003e tool. Pip is a tool for installing and managing Python packages, many of which are found in the \u003ca href=\"https://pypi.python.org/\"\u003ePython Package Index\u003c/a\u003e. It's kind of like a free application store for Python modules.\u003c/p\u003e\r\n\u003ch4\u003eInstalling pip3\u003c/h4\u003e\r\n\u003cp\u003ePip comes installed with Python on Mac when you install Python3.\u003c/p\u003e\r\n\u003cp\u003eFor Linux, run this command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo apt-get install python3-pip \u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAlternatively, if you run into any error using the above command you can use the following:\u003c/p\u003e\r\n\u003cp\u003eThis command downloads the script that we will use to install pip.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThen, using python3.6, we run the downloaded script to install pip.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo python3.6 get-pip.py\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eOnce installations are done, we can move on and start learning some Python.\u003c/p\u003e\r\n\u003c/div\u003e","exportId":"weekend-intro-to-python"},{"id":417,"title":"Weekend: Python Basics","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003ePython Basics\u003c/h2\u003e\r\n\u003ch3\u003ePython shell\u003c/h3\u003e\r\n\u003cp\u003ePython comes with a built-in\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eR-E-P-L\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003etool, (which stands for\u003cspan\u003e \u003c/span\u003e\u003cem\u003eRead Evaluate Print Loop\u003c/em\u003e) called the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ePython shell\u003c/strong\u003e. This is really useful when we want to test out snippets of our code before we put it in the main program.\u003c/p\u003e\r\n\u003cp\u003eTo access the Python shell we open our terminal and type in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epython3.6\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6\r\n\r\nPython \u003cspan class=\"m\"\u003e3\u003c/span\u003e.6.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003edefault, Nov \u003cspan class=\"m\"\u003e17\u003c/span\u003e \u003cspan class=\"m\"\u003e2016\u003c/span\u003e, \u003cspan class=\"m\"\u003e17\u003c/span\u003e:05:23\u003cspan class=\"o\"\u003e)\u003c/span\u003e \r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eGCC \u003cspan class=\"m\"\u003e5\u003c/span\u003e.4.0 \u003cspan class=\"m\"\u003e20160609\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e on linux\r\nType \u003cspan class=\"s2\"\u003e\"help\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"copyright\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"credits\"\u003c/span\u003e or \u003cspan class=\"s2\"\u003e\"license\"\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e more information.\r\n\u0026gt;\u0026gt;\u0026gt; \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe know we are in the shell when we see the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esymbols. We type in \u003cspan\u003e\u003c/span\u003e\u003ccode\u003epython3.6\u003c/code\u003e so that we can tell our machine that we want to use the Python 3.6 interpreter.\u003c/p\u003e\r\n\u003cp\u003eLet us create a simple command that prints out \"\u003cem\u003eHello, Moringa!\u003c/em\u003e\"\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Hello, Moringa!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'Hello, Moringa!'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e\u003ccode\u003eprint()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis a Python function that simply outputs data to a screen. Functions are just bits of code that perform a certain action. We will revisit functions in Python later on.\u003c/p\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'Hello, Moringa!'\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein Python is called a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003estring\u003c/strong\u003e. A string is just a way for Python to represent text.\u003c/p\u003e\r\n\u003ch3\u003eStrings\u003c/h3\u003e\r\n\u003cp\u003eAs we mentioned earlier strings are Python's way to represent textual data.\u003c/p\u003e\r\n\u003cp\u003eThere are several ways to create strings:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'This is a string'\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"This is also a string\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ealso\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn Python, we can create strings with either single quotes (\u003ccode\u003e'\u003c/code\u003e) or double quotes (\u003ccode\u003e\"\u003c/code\u003e) and Python treats them as the same thing.\u003c/p\u003e\r\n\u003cp\u003eWe can also create strings that run in multiple lines:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s2\"\u003e\"\"\"This is a string\u003c/span\u003e\r\n\u003cspan class=\"s2\"\u003e    that spans several \u003c/span\u003e\r\n\u003cspan class=\"s2\"\u003e    lines \u003c/span\u003e\r\n\u003cspan class=\"s2\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ethat\u003c/span\u003e \u003cspan class=\"n\"\u003espans\u003c/span\u003e \u003cspan class=\"n\"\u003eseveral\u003c/span\u003e \r\n    \u003cspan class=\"n\"\u003elines\u003c/span\u003e \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the triple quotes sign (\u003ccode\u003e\"\"\"\u003c/code\u003e) to create multi-line strings.\u003c/p\u003e\r\n\u003cp\u003eWe can also join multiple strings using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e+\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eoperator\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'This is a string '\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s1\"\u003e'this is also a string'\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003ethis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ealso\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThere are also some string\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emethods\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat allow us to perform actions on the string.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'This is a string'\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eupper\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eTHIS\u003c/span\u003e \u003cspan class=\"n\"\u003eIS\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e \u003cspan class=\"n\"\u003eSTRING\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'this is a string'\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecapitalize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'this is a string     '\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estrip\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eupper()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod is used to transform strings to uppercase. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecapitalize()\u003c/code\u003emethod transforms the first letter of the string to a capital letter. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estrip()\u003c/code\u003emethod removes any trailing spaces in a string.\u003c/p\u003e\r\n\u003ch3\u003eNumbers\u003c/h3\u003e\r\n\u003cp\u003eWe can also do some mathematical computations in Python. With dynamic libraries such as\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003enumpy\u003c/strong\u003e, Python is really good at performing mathematical operations.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"c1\"\u003e# addition\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e31\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"c1\"\u003e# subtraction\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e21\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"c1\"\u003e# multiplication\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"c1\"\u003e# division\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e4.0\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"c1\"\u003e# modulus\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Exponential\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e16\u003c/span\u003e \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ePython supports all the basic mathematical operations. Here, we see a new character\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e#\u003c/code\u003e. This\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ehash\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003epound\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003esign is Python's way to create comments. Anything after the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e#\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis ignored by the Python interpreter.\u003c/p\u003e\r\n\u003cp\u003eNotice that when we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e/\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eoperator, Python doesn't return a whole number, but a number with a decimal point. It is referred to as a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003efloat division\u003c/strong\u003e. Decimal point numbers in Python are called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003efloats\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e6.0\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e45\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e5.0\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e \u003cspan class=\"o\"\u003e//\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we see some more examples using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e/\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto get floats. We also see another division operator in Python:\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e//\u003c/code\u003e. This divides the numbers, then rounds down the result and returns a whole number, and is called the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003einteger division\u003c/strong\u003e.\u003c/p\u003e\r\n\u003ch3\u003ePython Basics Exercises\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cstrong\u003eBMI calculator\u003c/strong\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eCreate a program in the Python shell that allows you to calculate the body mass index of the person. This is calculated by dividing a person's weight by their height in meters squared.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cstrong\u003eCar Loans\u003c/strong\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eCreate a program in the Python shell that will calculate how long it would take a person to pay off a car loan of $150,000 if the person only spends 25% of his salary of $15,000 to pay the loan assuming no interest is charged.\u003c/p\u003e\r\n\u003ch2\u003eData Types\u003c/h2\u003e\r\n\u003cp\u003ePython has two main categories of data types,\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003escalar data types\u003c/strong\u003e\u003cspan\u003e, \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ecollections\u003c/strong\u003e.\u003c/p\u003e\r\n\u003ch3\u003e1. Scalar Data Types\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003eScalar data types\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eare data types that can only hold one single value at a time.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/Bcn1WWe.jpg\" alt=\"Scalar Data types Image\"\u003e\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003ccode\u003eint\u003c/code\u003e: whole numbered integers\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003efloat\u003c/code\u003e: integers with decimal points.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003eNone\u003c/code\u003e: represents a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003enull\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eor non-existent value.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003ebool\u003c/code\u003e: represent boolean statements and have only 2 possible values:\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e\n\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003e2. Collections\u003c/h3\u003e\r\n\u003cp\u003eLike the name suggests,\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ecollections\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003estore multiple values.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/j2Dk4Sp.jpg\" alt=\"Collections Data\"\u003e\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003ccode\u003estr\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- This data type is used to represent string values\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003ebyte\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- This data type is used to represent byte strings.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e\u003cstrong\u003eByte strings\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eare similar to strings but have been changed so that they can be stored on the hard drive we will not cover much on them here.\u003cspan\u003e \u003c/span\u003e\u003ca href=\"http://www.diveintopython3.net/strings.html\"\u003eHere is an Interesting article that covers more on Strings and Byte Strings\u003c/a\u003e\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003ccode\u003elist\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- This is a collection used to group related data in an ordered way.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003edict\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- These allow us to create dictionaries which is data that is stored in key-value pairs\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eWe will consider these much more in depth as we go on with the course.\u003c/p\u003e","exportId":"weekend-python-basics"},{"id":418,"title":"Weekend: Python Variables and Modules Import","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003ePython Variables\u003c/h2\u003e\r\n\u003cp\u003eVariables are named references to \u003cstrong\u003eobjects\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eHere is an example of how we create a variable in Python in the Python shell:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create variables by using the assignment operator \u003ccode\u003e=\u003c/code\u003e . Variables do not store any value, but point to where the value is created in the computer's memory.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/ygY7Chc.jpg\" alt=\"Variable referencing\" width=\"582\" height=\"328\"\u003e\u003c/p\u003e\r\n\u003cp\u003eWhen we equate two variables we are referencing the variables to the same value.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/zb1EfxK.jpg\" alt=\"double variable referencing\" width=\"572\" height=\"322\"\u003e\u003c/p\u003e\r\n\u003cp\u003ePython variables can store values from any data type. Since Python is dynamic in nature we do not have to specify what type of data we are storing.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Hello\"\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eHello\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003epie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.1423\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003epie\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e3.1423\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch2\u003ePython Modules\u003c/h2\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/LxjZpFD.jpg\" alt=\"Python Modules\" width=\"565\" height=\"318\"\u003e\u003c/p\u003e\r\n\u003cp\u003eA Python module is a single executable (can be run or launched) Python file.It contains code to do a particular task and has a \u003ccode\u003e.py\u003c/code\u003e extension.\u003c/p\u003e\r\n\u003cp\u003eLet us create this on our desktops. Create a folder and name it \u003cem\u003eMS-Python-Pre-work\u003c/em\u003e. Create a new file and name it \u003cem\u003emodule_test.py\u003c/em\u003e. Open Atom and type in the following:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003emodule_test.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egreeting\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Hello\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eschool\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Moringa\"\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egreeting\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eschool\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo execute this code, navigate to the project folder in the console (where \u003cem\u003emodule_test.py\u003c/em\u003e is located) and run the following command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 module_test.py\r\nHello, Moringa!\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe type in \u003ccode\u003epython3.6\u003c/code\u003e then the name of the file \u003ccode\u003emodule_test.py\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eThe code is immediately executed and we get our output as \u003ccode\u003eHello, Moringa!\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eA Python program is a collection of modules that are linked to perform a particular function.\u003c/p\u003e\r\n\u003ch2\u003eImport\u003c/h2\u003e\r\n\u003cp\u003ePython comes with a lot of pre-written code in form of \u003cstrong\u003emodules\u003c/strong\u003e and \u003cstrong\u003epackages\u003c/strong\u003e.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eA module is a single Python file that contains code to do a particular task.\u003c/li\u003e\r\n\u003cli\u003eA package is made up of one or more modules that are joined to perform a particular task.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eModules and packages belong to Python's standard library. They extend Python's functionality, and it is important to learn how to use them.\u003c/p\u003e\r\n\u003cp\u003eTo use these packages or modules we use the \u003ccode\u003eimport\u003c/code\u003e keyword. Let us create a new Python file and name it \u003cem\u003eexample.py\u003c/em\u003e.\u003c/p\u003e\r\n\u003cp\u003eAdd the following line to the file:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ethis\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let's run the file from the terminal:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAnd this will print to the console:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003eZen\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eby\u003c/span\u003e \u003cspan class=\"n\"\u003eTim\u003c/span\u003e \u003cspan class=\"n\"\u003ePeters\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eBeautiful\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003eugly\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eExplicit\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003eimplicit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSimple\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"nb\"\u003ecomplex\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eComplex\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003ecomplicated\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eFlat\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003enested\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSparse\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003edense\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eReadability\u003c/span\u003e \u003cspan class=\"n\"\u003ecounts\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSpecial\u003c/span\u003e \u003cspan class=\"n\"\u003ecases\u003c/span\u003e \u003cspan class=\"n\"\u003earen\u003c/span\u003e\u003cspan class=\"s1\"\u003e't special enough to break the rules.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003epracticality\u003c/span\u003e \u003cspan class=\"n\"\u003ebeats\u003c/span\u003e \u003cspan class=\"n\"\u003epurity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eErrors\u003c/span\u003e \u003cspan class=\"n\"\u003eshould\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e \u003cspan class=\"k\"\u003epass\u003c/span\u003e \u003cspan class=\"n\"\u003esilently\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eUnless\u003c/span\u003e \u003cspan class=\"n\"\u003eexplicitly\u003c/span\u003e \u003cspan class=\"n\"\u003esilenced\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eface\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003eambiguity\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erefuse\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003etemptation\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eguess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThere\u003c/span\u003e \u003cspan class=\"n\"\u003eshould\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003epreferably\u003c/span\u003e \u003cspan class=\"n\"\u003eonly\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003eobvious\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003edo\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003ethat\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003emay\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003eobvious\u003c/span\u003e \u003cspan class=\"n\"\u003eat\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"n\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003eyou\u003c/span\u003e\u003cspan class=\"s1\"\u003e're Dutch.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eNow\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eoften\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eright\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIf\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ehard\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexplain\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"s1\"\u003e's a bad idea.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIf\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexplain\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"n\"\u003emay\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003egood\u003c/span\u003e \u003cspan class=\"n\"\u003eidea\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eNamespaces\u003c/span\u003e \u003cspan class=\"n\"\u003eare\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"n\"\u003ehonking\u003c/span\u003e \u003cspan class=\"n\"\u003egreat\u003c/span\u003e \u003cspan class=\"n\"\u003eidea\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"n\"\u003elet\u003c/span\u003e\u003cspan class=\"s1\"\u003e's do more of those!\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis is known as the.\u003ccode\u003eZen of Python.\u003c/code\u003eIt doesn't do much, but it is a nice way to show you how to import modules.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003emath\u003c/code\u003e Module\u003c/h3\u003e\r\n\u003cp\u003eLet us look at a more useful module, named \u003ccode\u003emath\u003c/code\u003e. Replace the contents of \u003cem\u003eexample.py\u003c/em\u003e with the following code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003emath\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eceil\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet's run it:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e3\u003c/span\u003e.0\r\n\u003cspan class=\"m\"\u003e3\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere, we import the \u003ccode\u003emath\u003c/code\u003e module. The \u003ccode\u003emath\u003c/code\u003e module comes with a lot of built-in methods, and we've used a couple of them here: the \u003ccode\u003esqrt()\u003c/code\u003e method to find the square root of 9 (3.0), which we represent with the variable \u003ccode\u003ex\u003c/code\u003e; and the \u003ccode\u003eceil()\u003c/code\u003e method to round up \u003ccode\u003ex\u003c/code\u003e (3).\u003c/p\u003e\r\n\u003cp\u003eThe syntax to use when we use module methods is \u003ccode\u003emodule_name.method_name(arguments)\u003c/code\u003e, where \u003ccode\u003emodule_name\u003c/code\u003e is the name of the module (\u003ccode\u003emath\u003c/code\u003e in this case) and \u003ccode\u003emethod_name\u003c/code\u003e is the name of the method (we've used \u003ccode\u003esqrt()\u003c/code\u003e and \u003ccode\u003eciel()\u003c/code\u003e).\u003c/p\u003e\r\n\u003ch4\u003e\n\u003ccode\u003efrom\u003c/code\u003e Keyword\u003c/h4\u003e\r\n\u003cp\u003eYou can also import a module method directly using the keyword \u003ccode\u003efrom\u003c/code\u003e. Try this out in \u003cem\u003eexample.py\u003c/em\u003e:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003emath\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eceil\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eceil\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"mf\"\u003e3.0\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNotice here that the syntax changes: we were able to use \u003ccode\u003esqrt()\u003c/code\u003e and \u003ccode\u003eciel()\u003c/code\u003e without typing \u003ccode\u003emath\u003c/code\u003e first. When we use the \u003ccode\u003efrom\u003c/code\u003e keyword, we can use the method name directly without referencing the module.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003erandom\u003c/code\u003e Module\u003c/h3\u003e\r\n\u003cp\u003eLet us use another fun module called \u003cstrong\u003erandom\u003c/strong\u003e. Replace the contents of \u003cem\u003eexample.py\u003c/em\u003e with the following code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erandom\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# We can generate a random number using the randint method\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003erandom_number\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erandint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erandom_number\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere used the \u003ccode\u003eimport\u003c/code\u003e keyword, to get the random module. From the module we used its \u003ccode\u003erandint()\u003c/code\u003e method and passed in two parameters to define the range of values from which Python will choose a random number (in our example, 0 is the low end of the range and 10 is the high end). When we run the file, it returns a random number, from the range provided by the parameters.\u003c/p\u003e\r\n\u003cp\u003eNow let's run it a few times:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\n$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e0\u003c/span\u003e\r\n$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e7\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe output on your console may look different, but the thing to note here is that it's generating a different value each time we run \u003cem\u003eexample.py\u003c/em\u003e. We have the \u003ccode\u003erandom\u003c/code\u003e module to thank for that.\u003c/p\u003e\r\n\u003ch3\u003eInput Exercise\u003c/h3\u003e\r\n\u003ch4\u003eCircumference Calculation\u003c/h4\u003e\r\n\u003cp\u003eWrite a program that calculates the circumference of a wheel. The formula is C=2πr, where π is the value 3.14 and \u003ccode\u003er\u003c/code\u003e is the radius of the circle.\u003c/p\u003e\r\n\u003cp\u003eTo take this a step further, let the radius of the circle be a random integer generated by the \u003ccode\u003erandom\u003c/code\u003e module.\u003c/p\u003e\r\n\u003c/div\u003e","exportId":"weekend-python-variables-and-modules-import"},{"id":419,"title":"Weekend: Input, sys.argv and Control Flow","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003ePython Variables\u003c/h2\u003e\r\n\u003cp\u003eVariables are named references to \u003cstrong\u003eobjects\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eHere is an example of how we create a variable in Python in the Python shell:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create variables by using the assignment operator \u003ccode\u003e=\u003c/code\u003e . Variables do not store any value, but point to where the value is created in the computer's memory.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/ygY7Chc.jpg\" alt=\"Variable referencing\"\u003e\u003c/p\u003e\r\n\u003cp\u003eWhen we equate two variables we are referencing the variables to the same value.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/zb1EfxK.jpg\" alt=\"double variable referencing\"\u003e\u003c/p\u003e\r\n\u003cp\u003ePython variables can store values from any data type. Since Python is dynamic in nature we do not have to specify what type of data we are storing.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Hello\"\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eHello\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003epie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.1423\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003epie\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e3.1423\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch2\u003ePython Modules\u003c/h2\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/LxjZpFD.jpg\" alt=\"Python Modules\"\u003e\u003c/p\u003e\r\n\u003cp\u003eA Python module is a single executable (can be run or launched) Python file.It contains code to do a particular task and has a \u003ccode\u003e.py\u003c/code\u003e extension.\u003c/p\u003e\r\n\u003cp\u003eLet us create this on our desktops. Create a folder and name it \u003cem\u003eMS-Python-Pre-work\u003c/em\u003e. Create a new file and name it \u003cem\u003emodule_test.py\u003c/em\u003e. Open Atom and type in the following:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003emodule_test.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egreeting\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Hello\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eschool\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Moringa\"\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egreeting\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eschool\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo execute this code, navigate to the project folder in the console (where \u003cem\u003emodule_test.py\u003c/em\u003e is located) and run the following command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 module_test.py\r\nHello, Moringa!\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe type in \u003ccode\u003epython3.6\u003c/code\u003e then the name of the file \u003ccode\u003emodule_test.py\u003c/code\u003e. The code is immediately executed and we get our output as \u003ccode\u003eHello, Moringa!\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eA Python program is a collection of modules that are linked to perform a particular function.\u003c/p\u003e\r\n\u003ch2\u003eImport\u003c/h2\u003e\r\n\u003cp\u003ePython comes with a lot of pre-written code in for of \u003cstrong\u003emodules\u003c/strong\u003e and \u003cstrong\u003epackages\u003c/strong\u003e.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eA module is a single Python file that contains code to do a particular task.\u003c/li\u003e\r\n\u003cli\u003eA package is made up of one or more modules that are joined to perform a particular task.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eModules and packages belong to Python's standard library. They extend Python's functionality, and it is important to learn how to use them.\u003c/p\u003e\r\n\u003cp\u003eTo use these packages or modules we use the \u003ccode\u003eimport\u003c/code\u003e keyword. Let us create a new Python file and name it \u003cem\u003eexample.py\u003c/em\u003e.\u003c/p\u003e\r\n\u003cp\u003eAdd the following line to the file:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ethis\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let's run the file from the terminal:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAnd this will print to the console:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003eZen\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eby\u003c/span\u003e \u003cspan class=\"n\"\u003eTim\u003c/span\u003e \u003cspan class=\"n\"\u003ePeters\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eBeautiful\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003eugly\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eExplicit\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003eimplicit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSimple\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"nb\"\u003ecomplex\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eComplex\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003ecomplicated\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eFlat\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003enested\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSparse\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003edense\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eReadability\u003c/span\u003e \u003cspan class=\"n\"\u003ecounts\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSpecial\u003c/span\u003e \u003cspan class=\"n\"\u003ecases\u003c/span\u003e \u003cspan class=\"n\"\u003earen\u003c/span\u003e\u003cspan class=\"s1\"\u003e't special enough to break the rules.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003epracticality\u003c/span\u003e \u003cspan class=\"n\"\u003ebeats\u003c/span\u003e \u003cspan class=\"n\"\u003epurity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eErrors\u003c/span\u003e \u003cspan class=\"n\"\u003eshould\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e \u003cspan class=\"k\"\u003epass\u003c/span\u003e \u003cspan class=\"n\"\u003esilently\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eUnless\u003c/span\u003e \u003cspan class=\"n\"\u003eexplicitly\u003c/span\u003e \u003cspan class=\"n\"\u003esilenced\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eface\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003eambiguity\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erefuse\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003etemptation\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eguess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThere\u003c/span\u003e \u003cspan class=\"n\"\u003eshould\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003epreferably\u003c/span\u003e \u003cspan class=\"n\"\u003eonly\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003eobvious\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003edo\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003ethat\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003emay\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003eobvious\u003c/span\u003e \u003cspan class=\"n\"\u003eat\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"n\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003eyou\u003c/span\u003e\u003cspan class=\"s1\"\u003e're Dutch.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eNow\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eoften\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eright\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIf\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ehard\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexplain\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"s1\"\u003e's a bad idea.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIf\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexplain\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"n\"\u003emay\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003egood\u003c/span\u003e \u003cspan class=\"n\"\u003eidea\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eNamespaces\u003c/span\u003e \u003cspan class=\"n\"\u003eare\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"n\"\u003ehonking\u003c/span\u003e \u003cspan class=\"n\"\u003egreat\u003c/span\u003e \u003cspan class=\"n\"\u003eidea\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"n\"\u003elet\u003c/span\u003e\u003cspan class=\"s1\"\u003e's do more of those!\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis is known as the \u003ccode\u003eZen of Python\u003c/code\u003e. t doesn't do much, but it is a nice way to show you how to import modules.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003emath\u003c/code\u003e Module\u003c/h3\u003e\r\n\u003cp\u003eLet us look at a more useful module, named \u003ccode\u003emath\u003c/code\u003e. Replace the contents of \u003cem\u003eexample.py\u003c/em\u003e with the following code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003emath\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eceil\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet's run it:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e3\u003c/span\u003e.0\r\n\u003cspan class=\"m\"\u003e3\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere, we import the \u003ccode\u003emath\u003c/code\u003e module. The \u003ccode\u003emath\u003c/code\u003e module comes with a lot of built-in methods, and we've used a couple of them here: the \u003ccode\u003esqrt()\u003c/code\u003e method to find the square root of 9 (3.0), which we represent with the variable \u003ccode\u003ex\u003c/code\u003e; and the \u003ccode\u003eceil()\u003c/code\u003e method to round up \u003ccode\u003ex\u003c/code\u003e (3).\u003c/p\u003e\r\n\u003cp\u003eThe syntax to use when we use module methods is \u003ccode\u003emodule_name.method_name(arguments)\u003c/code\u003e, where \u003ccode\u003emodule_name\u003c/code\u003e is the name of the module (\u003ccode\u003emath\u003c/code\u003e in this case) and \u003ccode\u003emethod_name\u003c/code\u003e is the name of the method (we've used \u003ccode\u003esqrt()\u003c/code\u003e and \u003ccode\u003eciel()\u003c/code\u003e).\u003c/p\u003e\r\n\u003ch4\u003e\n\u003ccode\u003efrom\u003c/code\u003e Keyword\u003c/h4\u003e\r\n\u003cp\u003eYou can also import a module method directly using the keyword \u003ccode\u003efrom\u003c/code\u003e. Try this out in \u003cem\u003eexample.py\u003c/em\u003e:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003emath\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eceil\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eceil\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"mf\"\u003e3.0\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNotice here that the syntax changes: we were able to use \u003ccode\u003esqrt()\u003c/code\u003e and \u003ccode\u003eciel()\u003c/code\u003e without typing \u003ccode\u003emath\u003c/code\u003e first. When we use the \u003ccode\u003efrom\u003c/code\u003e keyword, we can use the method name directly without referencing the module.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003erandom\u003c/code\u003e Module\u003c/h3\u003e\r\n\u003cp\u003eLet us use another fun module called \u003cstrong\u003erandom\u003c/strong\u003e. Replace the contents of \u003cem\u003eexample.py\u003c/em\u003e with the following code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erandom\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# We can generate a random number using the randint method\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003erandom_number\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erandint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erandom_number\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere used the \u003ccode\u003eimport\u003c/code\u003e keyword, to get the random module. From the module we used its \u003ccode\u003erandint()\u003c/code\u003e method and passed in two parameters to define the range of values from which Python will choose a random number (in our example, 0 is the low end of the range and 10 is the high end). When we run the file, it returns a random number, from the range provided by the parameters.\u003c/p\u003e\r\n\u003cp\u003eNow let's run it a few times:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\n$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e0\u003c/span\u003e\r\n$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e7\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe output on your console may look different, but the thing to note here is that it's generating a different value each time we run \u003cem\u003eexample.py\u003c/em\u003e. We have the \u003ccode\u003erandom\u003c/code\u003e module to thank for that.\u003c/p\u003e\r\n\u003ch3\u003eInput Exercise\u003c/h3\u003e\r\n\u003ch4\u003eCircumference Calculation\u003c/h4\u003e\r\n\u003cp\u003eWrite a program that calculates the circumference of a wheel. The formula is C=2πr, where π is the value 3.14 and \u003ccode\u003er\u003c/code\u003e is the radius of the circle.\u003c/p\u003e\r\n\u003cp\u003eTo take this a step further, let the radius of the circle be a random integer generated by the \u003ccode\u003erandom\u003c/code\u003e module.\u003c/p\u003e\r\n\u003ch2\u003eInput and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv\u003c/code\u003e\n\u003c/h2\u003e\r\n\u003cp\u003eIn our applications, we have basically been typing out values to everything in our code. Now let us explore a different way to obtain data into our application by configuring user input.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003einput()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einput()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction is called inside our Python application and prompts the user to pass in an input, which is stored as a string.\u003c/p\u003e\r\n\u003cp\u003eLet us create a new folder in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eMS-Python-Pre-work\u003c/em\u003e\u003cspan\u003e \u003c/span\u003edirectory called\u003cspan\u003e \u003c/span\u003e\u003cem\u003eInput\u003c/em\u003e, and create a new file\u003cspan\u003e \u003c/span\u003e\u003cem\u003einput_demo.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand type in this:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"What is your name?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"How old are you?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then run the file:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\n\u003cspan class=\"s2\"\u003e\"What is your name?\"\u003c/span\u003e\r\nJames\r\n\u003cspan class=\"s2\"\u003e\"How old are you?\"\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\r\nJames\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we are prompting the user for their name and age, and storing them in variables. Since\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis a number, we used the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eint()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to convert it to an integer.\u003c/p\u003e\r\n\u003ch3\u003eUsing the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eModule\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule provides variables used or maintained by the interpreter. It has the list\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv\u003c/code\u003e, which contains the arguments passed into the command line when running the command to execute the program. Let's see how to use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto take input from the command line. Open up\u003cspan\u003e \u003c/span\u003e\u003cem\u003einput_demo.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand replace the contents this code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003esys\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargv\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"How old are you?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let's run the file:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py James\r\n\u003cspan class=\"s2\"\u003e\"How old are you?\"\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\r\nJames\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we have first imported the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule so that we could use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto store user input from the console and store it in a list. This is different from the previous example, where we used prompts along with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einput()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto get the name of our user. Notice that we entered our name as the second argument of the command where we executed the program (the first argument was\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einput_demo.py\u003c/code\u003e):\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py James\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSince\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ereturns a list, we used\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv[1]\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein\u003cspan\u003e \u003c/span\u003e\u003cem\u003einput_demo.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eto retrieve this value - this simply tells our application to pick the argument at index 1 when our application is run and store it as variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ename\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe can pass multiple arguments when we run our application:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003esys\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargv\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargv\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then run the file with the necessary arguments:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py James \u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\nJames\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we pick both the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ename\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efrom the command line arguments passed.\u003c/p\u003e\r\n\u003ch3\u003eInput and Type Casting Exercises\u003c/h3\u003e\r\n\u003ch4\u003eBirthday dates\u003c/h4\u003e\r\n\u003cp\u003eCreate a program where you prompt a user for their age and return the year they were born.\u003c/p\u003e\r\n\u003cp\u003eAfter that, return the year they will turn 80.\u003c/p\u003e\r\n\u003ch4\u003eTip Calculator\u003c/h4\u003e\r\n\u003cp\u003eCreate a program that lets the user input their total bill at a restaurant, and returns the total cost of the bill including a tip. Use 15% of the total bill as the tip calculation.\u003c/p\u003e\r\n\u003cp\u003eFor example, if the total bill is KSh 1000, the tip is 0.15 * 1000 = KSh 150, so the total cost of the bill returned to the user is 1000 + 150 = KSh 1150.\u003c/p\u003e\r\n\u003cp\u003eOnce you're finished, take this a step further and let the user enter their level of satisfaction with their service and factor that value into the tip percentage. For example, if they received good service, the tip is 15%; great service is 20%; terrible service is 0%.\u003c/p\u003e\r\n\u003ch2\u003eControl Flow\u003c/h2\u003e\r\n\u003cp\u003eUp to now our applications haven't been that interesting. Let us add some logic to our applications.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatements\u003c/h3\u003e\r\n\u003cp\u003eAn\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement runs only when the condition passed to it evaluates to true. Let's experiment with this in\u003cspan\u003e \u003c/span\u003e\u003cem\u003einput_demo.py\u003c/em\u003e.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e74\u003c/span\u003e \u003cspan class=\"c1\"\u003e# The unit is inches\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e70\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really tall\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRun the file in the console:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nYou are really tall\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSince\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eheight\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis above 70, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement will be called and it will print out the statement. This syntax differs from other programming languages like JavaScript which use curly braces (\u003ccode\u003e{}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e)to hold blocks of code, such as this example:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e74\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e70\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\r\n  \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really tall\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ePython uses\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eindents\u003c/strong\u003e. Indents are just four spaces we give to our application to define blocks of code. If we don't indent blocks of our code, we get an\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eIndentationError\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand our program won't run.\u003c/p\u003e\r\n\u003ch4\u003eComparison Operators\u003c/h4\u003e\r\n\u003cp\u003eLet us look at some of the comparison operators we will be using in Python\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\n\u003ccode\u003e\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eGreater than\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003e\u0026lt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eLess than\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003e==\u003c/code\u003eEqual to\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003e!=\u003c/code\u003enot equal to\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003e\u0026gt;=\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eGreater than or equal to\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003e\u0026lt;=\u003c/code\u003eLess than or Equal to\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003eand\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eChecks if both conditions evaluate to true\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003eor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eChecks if at least one condition is true\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003enot\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ereturns the opposite of the condition given\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003ccode\u003eelse\u003c/code\u003e\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement comes right at the end of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement. It is run only when the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement evaluates to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e. Let's add an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement to our example program:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_example.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e54\u003c/span\u003e \u003cspan class=\"c1\"\u003e# inches\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e70\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really tall\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really short\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow when we run the file, we get a different message:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nYou are really short\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe height is not greater than 70 so the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement evaluates to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement is called.\u003c/p\u003e\r\n\u003ch3\u003e\u003ccode\u003eelif\u003c/code\u003e\u003c/h3\u003e\r\n\u003cp\u003eWhat if we have more than one condition to check for? We can use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelif\u003c/code\u003e, which will allow us to check for multiple conditions. Looking at our example:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e68\u003c/span\u003e \u003cspan class=\"c1\"\u003e# inches\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e70\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really tall\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e60\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are of average height\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really short\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let's run it:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nYou are of average height\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSince the height is greater than 60, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement will be executed first and Python never reaches the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement.\u003c/p\u003e\r\n\u003ch3\u003eChecking for nothing\u003c/h3\u003e\r\n\u003cp\u003eIn Python an empty value is automatically considered to be\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e. Consider this code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_example.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I will not run\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I am Empty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this code, nothing prints to the console.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nI am Empty\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis is because the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement only runs if the output evaluates to be\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e, and since our list is empty the condition evaluates to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e\u003c/p\u003e\r\n\u003c/div\u003e","exportId":"weekend-input-sys-dot-argv-and-control-flow"},{"id":420,"title":"Weekend: Looping","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch3\u003eLooping\u003c/h3\u003e\r\n\u003cp\u003eA loop is a way to execute some piece of code over and over again. There are 2 kinds of loops in Python;\u003c/p\u003e\r\n\u003cp dir=\"ltr\" style=\"padding-left: 120px;\"\u003e1.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop\u003c/p\u003e\r\n\u003cp style=\"padding-left: 120px;\"\u003e2.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop\u003c/p\u003e\r\n\u003ch4\u003e\n\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eLoops\u003c/h4\u003e\r\n\u003cp\u003eA\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop is used when one wants to repeat something a number of times. Just like the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatements, blocks of code in a for loop are indented, otherwise they will not run.\u003c/p\u003e\r\n\u003cp\u003eHere is an example of a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop in Python:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_example.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003enumbers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement loops through the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumbers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist, and stores each individual number in a variable called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumber\u003c/code\u003e, then prints out this new variable we have created.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\n\u003cspan class=\"m\"\u003e1\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e2\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e3\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e5\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can also use a Python function named\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloops. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange()\u003c/code\u003efunction returns a list for which we can use to loop through.\u003c/p\u003e\r\n\u003cp\u003eFirst let us see how we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction by creating a list.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere's what this code does:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e, \u003cspan class=\"m\"\u003e1\u003c/span\u003e, \u003cspan class=\"m\"\u003e2\u003c/span\u003e, \u003cspan class=\"m\"\u003e3\u003c/span\u003e, \u003cspan class=\"m\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction can take on two parameters. The first one is the number from where to start the range, and the second one is where to stop the range - this does\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003enot\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003einclude that number. In our example here, we start the range at 0 and end it at 5. Then we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to convert it to a list and print it out.\u003c/p\u003e\r\n\u003cp\u003eLet's take a look at another example using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange()\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I would love \"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\" cookies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we created a loop that prints out the string\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eI would love cookies\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith the number of cookies incrementing with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop. We used the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estr()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to convert the number\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ei\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto a string so that we could concatenate it with the rest of the string. Here's the output:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nI would love \u003cspan class=\"m\"\u003e0\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e1\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e2\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e3\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e4\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e5\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e6\u003c/span\u003e cookies\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet us create another example of a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop with conditions.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003enumbers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we loop through the numbers list and check if the number inside the list is fully divisible by 2; if it is, then we print out that number.\u003c/p\u003e\r\n\u003cp\u003eHere's the output of this\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\n\u003cspan class=\"m\"\u003e2\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e\n\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eLoops\u003c/h4\u003e\r\n\u003cp\u003eUnlike\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloops,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloops run until a certain condition is met.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloops are often used as counters. Let's see one in action:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eplayers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003eplayers\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The remaining players are\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eplayers\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eplayers\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe've created a variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eplayers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat we set as 11, and then created a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop with the condition that the value of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eplayers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eneeds to be greater than or equal to 5. If this condition is true, then a string will print and the value of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eplayers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewill decrease by 1, and the loop will execute again until the condition is no longer true (that is to say,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eplayers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis less than 5).\u003c/p\u003e\r\n\u003cp\u003eHere's what happens when we run it:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nThe remaining players are \u003cspan class=\"m\"\u003e11\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e10\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e9\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e8\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e7\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e6\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e5\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSure enough, the code only executes when\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eplayers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis greater than or equal to 5. After that, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop is exited and the code stops running.\u003c/p\u003e\r\n\u003ch3\u003eControl Flow Exercises\u003c/h3\u003e\r\n\u003ch4\u003eMagic 8 ball\u003c/h4\u003e\r\n\u003cp\u003eCreate the popular Magic 8 Ball game. If you've never played it before, it is a toy that you can ask a yes-or-no question and it will give you a random answer (feel free to read more on the\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Magic_8-Ball\"\u003eWikipedia page\u003c/a\u003e). In your program, allow a person to input a question, and then create a random number. Based on the random number, pick a response to the question using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelif\u003c/code\u003e, and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatements. You can find the responses at the\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Magic_8-Ball#Possible_answers\"\u003eWikipedia page\u003c/a\u003e.\u003c/p\u003e\r\n\u003ch2\u003e\u003ccode\u003ebreak Statement\u003c/code\u003e\u003c/h2\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebreak\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement allows code to jump out of a loop whenever a certain condition has been met.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I love candy \"\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e   \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this code, see what prints to the console:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nI love candy \u003cspan class=\"m\"\u003e0\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e1\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e2\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e3\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e5\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e6\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eEach time the loop runs, and prints out our statement, and checks if\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumber\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis equal to 7. If not, it runs again. If it is, the loop stops.\u003c/p\u003e\r\n\u003ch3\u003e\u003ccode\u003econtinue Statement\u003c/code\u003e\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtinue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement is also used in loops. It allows us to jump back up to the top of our loop. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtinue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ekeyword ignores all other statements under it and they are not run. Let's look at an example using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtinue\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003ein a team of members 20, some numbers are taken \u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003eand want to display the numbers that are not taken\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003eso others don't pick the picked numbers\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# taken numbers\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003enumTaken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Available numbers\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# loop\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e21\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003enumTaken\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe want to print numbers from 1-20, but skip over the numbers in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumTaken\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist. We've written a standard\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop, with a twist. If the current number\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ei\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumTaken\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprint()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement directly under the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtinue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis not executed. This is because every time\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtinue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis called, Python jumps back up to the top of the loop.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nAvailable numbers\r\n\u003cspan class=\"m\"\u003e1\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e2\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e6\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e8\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e9\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e10\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e14\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e15\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e16\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e17\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e18\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e20\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe numbers 1-20 have printed, but we've skipped over the numbers in our list.\u003c/p\u003e\r\n\u003ch3\u003eLists\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003eLists\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eare another Python data type. They are the equivalent of arrays in other languages. A Python list can store any kind of value.\u003c/p\u003e\r\n\u003cp\u003eWe can create a list using square brackets\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e[]\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eor using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction, like this. We can open our Python shell and practice the following commands.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003emy_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emy_other_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let's create some lists that actually hold data.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# list of strings\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# list of numbers\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_c\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"west\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# mixed list\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAs we can see with the code above, we can create a list that holds similar types of items, such as the first two which hold only strings or only numbers; or we can mix the types of data stored in our list, as we do with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist_c\u003c/code\u003e, which holds both numbers and strings.\u003c/p\u003e\r\n\u003cp\u003eWe can even nest our lists with other lists.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_d\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e],[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e],[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"west\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# nested list\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can join two lists using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eextend()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \r\n\u003cspan class=\"n\"\u003elist_b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Joining list_b to list_a\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eextend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_b\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# this will print [\"a\",\"b\",\"c\",\"d\",1,2,3,4,5,6]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_b\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# this will print [1,2,3,4,5,6]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we have joined\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist_b\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist_a\u003c/code\u003e. This adds new values to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist_a\u003c/code\u003e. Notice that\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist_b\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eremains unchanged.\u003c/p\u003e\r\n\u003cp\u003eWe can also append values to a list using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# [\"a\",\"b\",\"c\",\"d\"]\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# [\"a\",\"b\",\"c\",\"d\",\"e\"]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we append a single value,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"e\"\u003c/code\u003e, to the list.\u003c/p\u003e\r\n\u003cp\u003eWe can also arrange list items in place using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereverse()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esort()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethods.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# ['d', 'c', 'b', 'a']\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereverse()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to reverse the list.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# [1, 2, 3, 4, 5, 6, 7, 8]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esort()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod arranges items in order.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereverse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esort\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethods only work on the list they were called on. They have no return value.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e# converts list_a to [5,4,3,2,1]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# list_b is None\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eTuples\u003c/h3\u003e\r\n\u003cp\u003eTuples are like lists. The main difference between tuples and lists is that tuples are\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eimmutable\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- their values cannot be changed once created.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003etuple_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# tuple of strings\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003etuple_b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# tuple of numbers\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003etuple_c\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"west\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# mixed tuple\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003etuple_d\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etuple\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e#empty tuple\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can create a tuple using parentheses\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e(as in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etuple_a\u003c/code\u003e,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etuple_b\u003c/code\u003e, and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etuple_c\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein the above example) or we can use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etuple()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction (as in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etuple_d\u003c/code\u003e).\u003c/p\u003e\r\n\u003ch3\u003eDictionary\u003c/h3\u003e\r\n\u003cp\u003eAnother really powerful data structure in Python is the dictionary. Like lists, dictionaries store collections of many values of different types. Unlike indexes for lists - which are integers and start from 0, dictionary indexes don't have to be integers. They can be of different data types like strings. Indexes in dictionaries are called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ekeys\u003c/strong\u003e. The value here is appropriately called the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003evalue\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eDictionaries can be created in two ways:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Creating empty dictionaries\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emy_dict\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emy_dict\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edict\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Creating a dictionary with keys and values\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emy_cat\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e'name'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Mr sniffles'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'age'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e18\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'color'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s1\"\u003e'black'\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn the example above, we created a new dictionary that stores details about\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emy_cat\u003c/code\u003e. We can fetch data from a dictionary by using our key as the index. Continuing from the above example, let's say that we want to print the name of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emy_cat\u003c/code\u003e,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'Mr sniffles'\u003c/code\u003e. Here is how we would access that value from the dictionary:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ecat_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emy_cat\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'name'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecat_name\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 'Mr sniffles'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eUnlike lists, dictionaries are unordered since the indexing does not start at [0]. We will see what that means later on.\u003c/p\u003e\r\n\u003cp\u003eWe can also add items to a dictionary by defining a new key and assigning it a value.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebirthdays\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"John\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"August 1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Marcus\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"April 8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ebirthdays\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"mary\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"September 14\"\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebirthdays\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# this prints {\"John\":\"August 1\",\"Marcus\":\"April 8\",\"Mary\":\"September 14\"}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we had a dictionary with the birthday of two people,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eJohn\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMarcus\u003c/code\u003e. Then we added\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMary\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto our birthday dictionary.\u003c/p\u003e\r\n\u003cp\u003eWe can also get the individual keys in the dictionary using the\u003ccode\u003ekeys()\u003c/code\u003emethod.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebirthday\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"John\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"August 1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Marcus\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"April 8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mary\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"September 14\"\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebirthday\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"c1\"\u003e# this prints dict_keys(['John', 'Marcus', 'Mary'])\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ekeys()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod creates a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edict_keys\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eobject that holds a list of all the keys.\u003c/p\u003e\r\n\u003cp\u003eWe can convert them into a list using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebirthday\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"John\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"August 1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Marcus\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"April 8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mary\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"September 14\"\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebirthday\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e()))\u003c/span\u003e \u003cspan class=\"c1\"\u003e# this prints ['John', 'Marcus', 'Mary']the ne\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e\n\u003ccode\u003esetdefault()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod\u003c/h4\u003e\r\n\u003cp\u003eWhen dealing with a dictionary, sometimes it can be useful to set placeholder values to keys, before we do any operation on them, to prevent unnecessary errors.\u003c/p\u003e\r\n\u003cp\u003eFor example, let's say we want to create an application that counts every character in an input string. Open up\u003cspan\u003e \u003c/span\u003e\u003cem\u003eimport_demo.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand add this code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eimport_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Enter a string\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003einput_string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe prompt the user for an input. Then we create an empty dictionary named\u003cspan\u003e \u003c/span\u003e\u003ccode\u003echaracters\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat will store each individual character and how many times it has been used. Now let's use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetdefault()\u003c/code\u003e:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eimport_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Enter a string\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003einput_string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003echaracter\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003einput_string\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetdefault\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echaracter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we use a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop to iterate through each individual character in the string. Then we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetdefault()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to create a key for each character if the character does\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003enot\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eexist in the dictionary. Then we set the default value for each as\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e0\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eimport_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Enter a string\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003einput_string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003echaracter\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003einput_string\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetdefault\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echaracter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003echaracter\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003echaracter\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLastly we target the key that matches the character and add one to the value everytime the character is encountered.\u003c/p\u003e\r\n\u003cp\u003eWhen we run this, here's what happens:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 import_demo.py\r\nEnter a string \u003cspan class=\"c1\"\u003e# I'm going to enter \"James is awesome\"\u003c/span\u003e\r\nJames is awesome\r\n\r\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e' '\u003c/span\u003e: \u003cspan class=\"m\"\u003e3\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'J'\u003c/span\u003e: \u003cspan class=\"m\"\u003e1\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'a'\u003c/span\u003e: \u003cspan class=\"m\"\u003e2\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'e'\u003c/span\u003e: \u003cspan class=\"m\"\u003e3\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'i'\u003c/span\u003e: \u003cspan class=\"m\"\u003e1\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'm'\u003c/span\u003e: \u003cspan class=\"m\"\u003e2\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'o'\u003c/span\u003e: \u003cspan class=\"m\"\u003e2\u003c/span\u003e, \u003cspan class=\"s1\"\u003e's'\u003c/span\u003e: \u003cspan class=\"m\"\u003e4\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'w'\u003c/span\u003e: \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eList and Dictionary Exercises\u003c/h3\u003e\r\n\u003ch4\u003e\u003cstrong\u003eMagic 8 ball\u003c/strong\u003e\u003c/h4\u003e\r\n\u003cp\u003eRecreate the Magic 8 Ball exercise from the Control Flow lesson using lists instead of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatements.\u003c/p\u003e\r\n\u003ch4\u003e\u003cstrong\u003eFeature Phones\u003c/strong\u003e\u003c/h4\u003e\r\n\u003cp\u003eRemember the days before smartphones when text was entered in our phones using the keypad? If you need a refresher, see this image of a phone keypad:\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"https://i.stack.imgur.com/hHq4v.jpg\" alt=\"Phone Keypad\"\u003e\u003c/p\u003e\r\n\u003cp\u003eNotice the letters on each number. To type a letter, the user needs to press the button on which the letter is printed the number of times that corresponds to its order on the button.\u003c/p\u003e\r\n\u003cp\u003eFor example, to type \"E\", the user needs to press \"3\" two times. To type \"Z\", the user needs to press \"9\" four times. To type \"DOG\", they need to press \"3\" one time, \"6\" three times, and \"4\" one time. And so on.\u003c/p\u003e\r\n\u003cp\u003eCreate a program that allows a user to enter text and then it calculates how many clicks it takes for a user to input the text. Ignore uppercase and special characters.\u003c/p\u003e\r\n\u003cp\u003eFor example, if a user inputs\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003e\u003cem\u003e\"James\"\u003c/em\u003e\u003c/strong\u003e, the output should be\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003e\u003cem\u003e9\u003c/em\u003e\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ebecause...\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\"J\": press \"5\" one time\u003c/li\u003e\r\n\u003cli\u003e\"A\": press \"2\" one time\u003c/li\u003e\r\n\u003cli\u003e\"M\": press \"6\" one time\u003c/li\u003e\r\n\u003cli\u003e\"E\": press \"3\" two times\u003c/li\u003e\r\n\u003cli\u003e\"S\": press \"7\" four times\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003ePut this all together, and 1 + 1 + 1 + 2 + 4 = 9.\u003c/p\u003e","exportId":"weekend-looping"},{"id":421,"title":"Weekend: Strings; Slicing; Functions and Exceptions","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eStrings\u003c/h2\u003e\r\n\u003ch3\u003eString Formatting\u003c/h3\u003e\r\n\u003cp\u003eThis is a way of embedding variables into strings. It is pretty easy to do.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"My name is {name} and I am {age} years old\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ewe run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\nMy name is James and I am \u003cspan class=\"m\"\u003e19\u003c/span\u003e years old\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ef\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebefore the string stands for\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ef-strings\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eor formatted strings and allow us to put replacement fields\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith variable names inside our strings\u003c/p\u003e\r\n\u003ch3\u003eRaw strings\u003c/h3\u003e\r\n\u003cp\u003eA raw string is a special type of string that allows us to ignore all escape characters\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand print them out\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Beyonce\u003c/span\u003e\u003cspan class=\"se\"\u003e\\'\u003c/span\u003e\u003cspan class=\"s1\"\u003es lemonade stand'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ewe run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python example.py\r\nBeyonce\u003cspan class=\"err\"\u003e'\u003c/span\u003es lemonade stand\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we see a proper use of the escape\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\\u003c/code\u003e\u003cspan\u003e \u003c/span\u003echaracter, by allowing us to add an apostrophe. But let us create a raw string and see what happens\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Beyonce\u003c/span\u003e\u003cspan class=\"se\"\u003e\\'\u003c/span\u003e\u003cspan class=\"s1\"\u003es lemonade stand'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ewe run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python example.py\r\nBeyonce\u003cspan class=\"se\"\u003e\\'\u003c/span\u003es lemonade stand\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe notice the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003er\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebefore the string. This means\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eraw\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estring. And in the output unlike the first example it prints out even the escape character.\u003c/p\u003e\r\n\u003ch3\u003eIs x string methods\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eisalpha() - returns True if the string consists of letters only and is not blank\u003c/li\u003e\r\n\u003cli\u003eisalnum() - returns True if the string consists of numbers and letters and is not blank\u003c/li\u003e\r\n\u003cli\u003eisdecimal() - returns True if the string contains only numeric characters\u003c/li\u003e\r\n\u003cli\u003eisspace() - returns True if the string contains only space,tabs or new lines\u003c/li\u003e\r\n\u003cli\u003eistitle() - returns True if the string contains words that start with uppercase letters\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ealpha\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"I like old music\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"K34jndnks\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003enumber_string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"12345\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003etabbs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"       \"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003etitles\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"I Love Cups\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003efalse_titles\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"I love Cups\"\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003ealpha\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisalpha\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisalnum\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003enumber_string\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisdecimal\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003etabbs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisspace\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003etitles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eistitle\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003efalse_titles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eistitle\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\nTrue\r\nTrue\r\nTrue\r\nTrue\r\nTrue\r\nFalse\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe last print statement was false because not all the words in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efalse_titles\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewere in uppercase.\u003c/p\u003e\r\n\u003cp\u003eThese\u003cspan\u003e \u003c/span\u003e\u003ccode\u003exstring\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethods are really useful when you want to do something like password validation.\u003c/p\u003e\r\n\u003ch3\u003eString Exercises\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cstrong\u003eMad Libs\u003c/strong\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eCreate a mad libs kind of program that allows users to input word descriptions such as a \"noun\", a \"verb\", an \"adjective\" etc and create then display a funny story from the users input\u003c/p\u003e\r\n\u003ch2\u003eType casting\u003c/h2\u003e\r\n\u003cp\u003eType casting is the act of converting one type of data to another, so as to manipulate it in some way. Let's see an example of this.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# print out user's name and age\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"My name is \" \u003c/span\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"n\"\u003ename \u003c/span\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"s2\"\u003e\" I am \" \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eage \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"s2\"\u003e\" years old\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet us run this code and see what happens.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\r\nTraceback \u003cspan class=\"o\"\u003e(\u003c/span\u003emost recent call last\u003cspan class=\"o\"\u003e)\u003c/span\u003e:\r\n  File \u003cspan class=\"s2\"\u003e\"\u0026lt;stdin\u0026gt;\"\u003c/span\u003e, line \u003cspan class=\"m\"\u003e1\u003c/span\u003e, in \u0026lt;module\u0026gt;\r\nTypeError: must be str, not int\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we see we get a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTypeError\u003c/code\u003e, because python cannot concatenate a string with an integer. To use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable we need to convert it to a string.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# print out u users name and age\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"My name is \" \u003c/span\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"n\"\u003ename \u003c/span\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"s2\"\u003e\" I am \" \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e) \u003c/span\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"s2\"\u003e\" years old\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet us run this code and see what happens.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\r\nMy name is James I am \u003cspan class=\"m\"\u003e19\u003c/span\u003e years old\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn this example we enclose the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable in a function called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estr()\u003c/code\u003e. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estr()\u003c/code\u003efunction converts the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efrom an integer to a string.\u003c/p\u003e\r\n\u003cp\u003eThere are other type conversion methods:\u003c/p\u003e\r\n\u003cp style=\"padding-left: 120px;\"\u003e1.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eint()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econverts what is passed to an integer.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 120px;\"\u003e2.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efloat()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econverts what is passed to a float.\u003c/p\u003e\r\n\u003cp\u003eLet us see more examples of this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eweight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'79'\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Kilograms\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eage_weight_ratio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eweight\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage_weight_ratio\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRun this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003eexample\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e4.157894736842105\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we converted string\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eweight\u003c/code\u003e, to an integer and divided it by\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch2\u003eSlicing\u003c/h2\u003e\r\n\u003cp\u003eSlicing is the act of getting subsets or parts of strings, lists or tuples.\u003c/p\u003e\r\n\u003cp\u003eLet's get \"slicing\".\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egreetings\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Hello, Moringa!'\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egreetings\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this we get:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\nHello\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eA slice statement is enclosed with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e[]\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esquare brackets and has two parts first is the position where to start slicing and second is the position to stop but not including that position.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e[start:stop]\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eIn the example above, we sliced the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003egreetings\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariables, took the characters in the first 5 indexes and stored them in the variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epart_one\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eYou can also use negative indexes when slicing.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egreetings\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Hello, Moringa!'\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egreetings\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this we get:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\nMoringa\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn this code we start slicing counting backwards and get\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMoringa\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas our output\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egreetings\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Hello, Moringa!'\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egreetings\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this we get:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\nHello, Moringa!\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can also choose not to specify the start or end point of our slices. In this example, Python assumes that we want to slice from index\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e0\u003c/code\u003e, to the last item and automatically fills in that value.\u003c/p\u003e\r\n\u003cp\u003eWe can also slice lists\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003efour_digits\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efour_digits\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this we get:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e,2,3,4\u003cspan class=\"o\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we did not specify the beginning of our slice and python automatically filled that in to be at index\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e0\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch2\u003eFunctions\u003c/h2\u003e\r\n\u003cp\u003eWe have already used functions to perform several tasks like\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprint\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebut let's learn how to create our own functions in python.\u003c/p\u003e\r\n\u003cp\u003eFunctions are blocks of code that begin with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edef\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ekeyword\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I have been called\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"s2\"\u003e\"I have been called\"\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis example we have created a function with no arguments and in the function we have a print statement that outputs a string\u003c/p\u003e\r\n\u003cp\u003eWe then went on to call the function and we got our desired output.\u003c/p\u003e\r\n\u003ch4\u003ePassing Arguments\u003c/h4\u003e\r\n\u003cp\u003eIn python you can also pass arguments to functions\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ePython can also take on\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ekeyword arguments\u003c/strong\u003e. These are arguments that are already defined\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere, we created a function with two\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ekeyword arguments\u003c/code\u003e. When we call the function we changed the values of those arguments to our own values\u003c/p\u003e\r\n\u003cp\u003eWe could also call the function without passing any parameters. Then the default keyword arguments values will be passed in\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003eCreating an Empty function\u003c/h4\u003e\r\n\u003cp\u003eSometimes we might want to define a function and not put code in it. This could be for whatever reason like outlining your code.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Empty function \u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIf we run our code like this, it will give us an error. Python has a keyword called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003epass\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat can help us here.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epass\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eallows us to create empty blocks of code because when it runs it returns a null or nothing.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Empty function \u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow when we run our code it will work perfectly.\u003c/p\u003e\r\n\u003ch4\u003eFunctions that return something\u003c/h4\u003e\r\n\u003cp\u003eFunctions can also return values to us\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\r\n\r\n\u003cspan class=\"nb\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere, we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereturn\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement, to get the value from the operation performed in the function.\u003c/p\u003e\r\n\u003ch2\u003eExceptions and Error Handling\u003c/h2\u003e\r\n\u003cp\u003eIn technical terms\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eException Handling\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eis the mechanism for stopping normal program flow and continuing it at some surrounding code block.\u003c/p\u003e\r\n\u003cp\u003eSimply put it is the art of spotting fatal errors that may come up in our applications and handling those errors.\u003c/p\u003e\r\n\u003cp\u003eRight now an error breaks our application.\u003c/p\u003e\r\n\u003cp\u003ecreate a new Folder called Error-Handling and inside create a file\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehandle.py\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_age\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"How old are you \"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eage\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eget_age\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet's take this simple application for example where we get the age of a user\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 handle.py\r\nHow old are you\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe program works fine if we enter a number. But what if a user enters a name\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 handle.py\r\nHow old are you\r\nnineteen\r\n\r\nTraceback \u003cspan class=\"o\"\u003e(\u003c/span\u003emost recent call last\u003cspan class=\"o\"\u003e)\u003c/span\u003e:\r\n  File \u003cspan class=\"s2\"\u003e\"testapp.py\"\u003c/span\u003e, line \u003cspan class=\"m\"\u003e6\u003c/span\u003e, in \u0026lt;module\u0026gt;\r\n    \u003cspan class=\"nv\"\u003einput_age\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e get_age\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n  File \u003cspan class=\"s2\"\u003e\"testapp.py\"\u003c/span\u003e, line \u003cspan class=\"m\"\u003e3\u003c/span\u003e, in get_age\r\n    \u003cspan class=\"nv\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e int\u003cspan class=\"o\"\u003e(\u003c/span\u003einput\u003cspan class=\"o\"\u003e())\u003c/span\u003e\r\nValueError: invalid literal \u003cspan class=\"k\"\u003efor\u003c/span\u003e int\u003cspan class=\"o\"\u003e()\u003c/span\u003e with base \u003cspan class=\"m\"\u003e10\u003c/span\u003e: \u003cspan class=\"s1\"\u003e'age'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe get a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eValueError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebecause we put in a non integer string and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eint()\u003c/code\u003econstructor cannot convert the string to integer.\u003c/p\u003e\r\n\u003cp\u003eThis error is difficult to understand. Let us create a more understandable error message\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_age\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"How old are you \"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eage\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eValueError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"That was not a valid input\"\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etry\\except\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock to handle errors. Inside the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etry\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock we put in code that may throw an Error and in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eexcept\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock we catch the thrown error and provide code to handle that error.\u003c/p\u003e\r\n\u003ch4\u003eProgrammer Errors\u003c/h4\u003e\r\n\u003cp\u003eThere are some error that are caused by programmers themselves. These errors should not be handled but fixed.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eIndentationError\u003c/code\u003e\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- when you fail to separate code blocks properly.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eNameError\u003c/code\u003e\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- when you call an undefined variable function or method.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eTypeError\u003c/code\u003e\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- when you try and perform operations on unrelated types .\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"weekend-strings-slicing-functions-and-exceptions"},{"id":1885,"title":"Weekend: Warm up","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eWarm Up\u003c/h2\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eFizz Buzz\u003c/strong\u003e\u003c/p\u003e\r\n\u003cp\u003eWrite a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cstrong\u003eReverse String\u003c/strong\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eEnter a string and the program will reverse it and print it out.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cstrong\u003eCheck if Palindrome\u003c/strong\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003eChecks if the string entered by the user is a palindrome. That is that it reads the same forwards as backwards like “racecar”\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003ch3\u003eQuestions\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eWhat is the Python Shell used for ?\u003c/li\u003e\r\n\u003cli\u003eWhat are the primary Data types in Python ?\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between a list,tuple and dictionary ?\u003c/li\u003e\r\n\u003cli\u003eWhat is slicing ?\u003c/li\u003e\r\n\u003cli\u003eWhy is exception handling useful ?\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between a Python module and Python package ?\u003c/li\u003e\r\n\u003cli\u003eWhat are some of the most common programmer caused errors, and what do they mean ?\u003c/li\u003e\r\n\u003c/ol\u003e","exportId":"weekend-warm-up"}]},{"id":59,"name":"Week 1","status":"completed","unlockDate":null,"prereqs":[],"requirement":null,"sequential":false,"exportId":"i3ec294d94cf6a6ace41ee59e2c4b50c4","items":[{"id":2096,"title":"Monday: Python Week 1 Objectives","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eWorking with Python\u003c/h2\u003e\r\n\u003cp\u003eWorking through the Pre-course work, we have familiarized ourselves with basic Python concepts, and the Python syntax. We want to leverage on that knowledge to start creating really amazing applications.\u003c/p\u003e\r\n\u003cp\u003eThis week, we will consider the following:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eObject oriented programming with Python\u003c/li\u003e\r\n\u003cli\u003eUnit testing\u003c/li\u003e\r\n\u003cli\u003eMaking our projects executable\u003c/li\u003e\r\n\u003cli\u003eProject design\u003c/li\u003e\r\n\u003cli\u003eCreating and working with modules\u003c/li\u003e\r\n\u003cli\u003eFile and resource management\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eFeature Project: Contact-list App\u003c/h3\u003e\r\n\u003cp\u003eWe will learn how to implement most of these concepts by building a feature project. The Project we will be building will be a\u003cspan\u003e \u003c/span\u003e\u003cem\u003eContact list application\u003c/em\u003e. The application will:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eAllow us to Create new contacts with properties.\u003c/li\u003e\r\n\u003cli\u003eSave contacts.\u003c/li\u003e\r\n\u003cli\u003eDisplay contacts.\u003c/li\u003e\r\n\u003cli\u003eDelete contacts.\u003c/li\u003e\r\n\u003cli\u003eDisplay contact information.\u003c/li\u003e\r\n\u003cli\u003eCategorize contacts to favorite contacts.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eIndependent Project Objectives \u003c/h3\u003e\r\n\u003cp\u003eAt the end of the week, your project will be reviewed based on the following objectives:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eDoes your project have two classes?\u003c/li\u003e\r\n\u003cli\u003eYour project must have a way to authenticate users.\u003c/li\u003e\r\n\u003cli\u003eHave docstrings to document your methods and functions.\u003c/li\u003e\r\n\u003cli\u003eYour project must have a test class \u003c/li\u003e\r\n\u003cli\u003eThe project must have a well-documented README file which contains well-outlined application behaviours.\u003c/li\u003e\r\n\u003cli\u003eWell laid out commit messages.\u003c/li\u003e\r\n\u003c/ol\u003e","exportId":"monday-python-week-1-objectives"},{"id":423,"title":"Monday: OOP Programming","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eIntroduction To Object oriented programming.\u003c/h2\u003e\r\n\u003ch3\u003eClasses\u003c/h3\u003e\r\n\u003cp\u003eA class is a blueprint to create objects. It allows us to group data and functions logically and in an easy to use manner.\u003c/p\u003e\r\n\u003cp\u003eLet us take an example of a\u003cspan\u003e \u003c/span\u003e\u003cem\u003ecar\u003c/em\u003e. A car has many\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003efeatures\u003c/strong\u003e. It has\u003cspan\u003e \u003c/span\u003e\u003cem\u003enumber of wheels, seat capacity ,fuel capacity, speed mileage, brand\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eetc.\u003c/p\u003e\r\n\u003cp\u003eA car also has many\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ebehaviors\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003elike\u003cspan\u003e \u003c/span\u003e\u003cem\u003estarting,stopping, accelerating, decelerating\u003c/em\u003e.\u003c/p\u003e\r\n\u003cp\u003eWhen creating a blueprint of this car we will include all those features (read\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eattributes\u003c/strong\u003e) and behaviors (read\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emethods\u003c/strong\u003e). This will be our template to creating car\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eobjects\u003c/strong\u003e\u003c/p\u003e\r\n\u003ch3\u003eObjects\u003c/h3\u003e\r\n\u003cp\u003eAn object is an instance of a class. In our car example above we created a basic template or blueprint to which we can create our car objects. Objects can have different property values but implement the same attributes and methods.\u003c/p\u003e\r\n\u003cp\u003eWe will consider these two in depth as we go along with the lessons.\u003c/p\u003e\r\n\u003ch3\u003eContact List application\u003c/h3\u003e\r\n\u003cp\u003eLet us learn by creating our contact list application.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eCreate a folder on your desktop and call it Contact-List\u003c/li\u003e\r\n\u003cli\u003eCreate in that folder, a file and name it\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact.py\u003c/code\u003e\n\u003c/li\u003e\r\n\u003cli\u003eOpen Atom\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003eCreating Classes\u003c/h2\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e   \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Class that generates new instances of contacts\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    \"\"\"\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn Python we create a class using the keyword\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eclass\u003c/strong\u003e\u003c/p\u003e\r\n\u003cp\u003eWe create a class\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand generate a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003edocstring\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003efor it. Docstrings are strings that occur as the first statement of a named block. They allow you to document what that code block does. This is part of Python's\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://www.python.org/dev/peps/pep-0008/\"\u003e\u003cstrong\u003ePEP 8\u003c/strong\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e(Python Enhancement Proposal). This is a style guide that is generally accepted by the Python community on how to write and present your code.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003e__init__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod in Python, allows us to create new instances of a class. And it also allows us to pass in properties for the new object.\u003c/p\u003e\r\n\u003cp\u003eIt is written with double underscores (\u003ccode\u003e_\u003c/code\u003e) before and after the word\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einit\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,phone_\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        __init__ method that helps us define properties for our objects.\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e        Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            first_name: New contact first name.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            last_name : New contact last name.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            number: New contact phone number.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            email : New contact email address.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create the constructor and pass in 5 arguments. The first argument\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis a special keyword in Python.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eVariable\u003c/h3\u003e\r\n\u003cp\u003eMethods and functions in Python have only one major difference. Notice how we declare\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e__init__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein the above example:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,phone_\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eMethods have one extra variable added to the beginning of their parameter list: The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis a variable that represents the instance of the object itself. If you are coming from another programming language like Java or JavaScript, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable can be likened to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ethis\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ekeyword,\u003c/p\u003e\r\n\u003ch3\u003eInstance and Class variables\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Class that generates new instances of contacts.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    \"\"\"\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,phone_\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n      \u003cspan class=\"c1\"\u003e# docstring removed for simplicity\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.phone_\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eemail\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e\u003cstrong\u003eInstance variables\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eare variables that are unique to each new instance of the class. In our example above, we have created four instance variables, that take up the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efirstname\u003c/code\u003e,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elastname\u003c/code\u003e,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumber\u003c/code\u003e, and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eemail\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eof our new contact.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Class that generates new instances of contacts.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    \"\"\"\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Empty contact list\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n      \u003cspan class=\"c1\"\u003e# docstring removed for simplicity\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.phone_\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eemail\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e\u003cstrong\u003eClass variables\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eare variables that belong to the entire class and can be accessed by all instances of the class. Here we create the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable that will be used to store our created contact objects .\u003c/p\u003e\r\n\u003cp\u003eLet us test our new class in the R.E.P.L. On the console open the R.E.P.L (on the terminal, type python3.6)\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003econtact\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehelp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we import our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from our contact module and use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehelp()\u003c/code\u003efunction to see the properties of our Class\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Muriuki\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"james@moringaschool.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'James'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe created a new contact object and passed in all four properties. Notice that we did not pass in an argument for\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable is passed in the background by the Python Interpretor and we do not need to worry about it.\u003c/p\u003e\r\n\u003cp\u003eWe then targeted the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efirstname\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty by using the object\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edot notation.\u003c/p\u003e","exportId":"monday-oop-programming"},{"id":424,"title":"Monday: Behaviour Driven Development and Test Driven Development","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eBehavior Driven Development- BDD\u003c/h2\u003e\r\n\u003cp\u003eIt is a process that facilitates the collaboration between the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eproduct owner\u003c/strong\u003e,\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etester \u003c/strong\u003eand\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003edeveloper\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewhen determining the system behavior.\u003c/p\u003e\r\n\u003cp\u003eIn traditional development, the product owner comes up with behavior, tester and developer are left to translate the product owner's behavior into test cases and code.\u003c/p\u003e\r\n\u003cp\u003eThis is known as the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ethree amigos\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e(product owner, tester and developer). The requirements are arrived at through\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003equestions\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand use of\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eexamples\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewhen describing\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003escenarios\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eBDD allows the development team to have a clear understanding of the uncertainties, which in turn helps them create a product that matters. It focuses on why the features are created rather than how.\u003c/p\u003e\r\n\u003ch2\u003eImplementing BDD\u003c/h2\u003e\r\n\u003cp\u003eWe will use a scenario to explain the system behavior. Let's say we want to use BDD to explain how John is able to receive emails from Daisy.\u003c/p\u003e\r\n\u003cp\u003eWe use the following keywords\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eGiven\u003c/strong\u003e,\u003cstrong\u003eWhen\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eThen\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eSo based on the above scenario:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eGiven\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e: Daisy and John have email accounts.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eWhen\u003c/strong\u003e: John opens his email.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eThen\u003c/strong\u003e: He should see the mail from Daisy.\u003c/p\u003e\r\n\u003cp\u003eYou can see that we have given a simple description of how the process behaves when Daisy sends an email to John. The main idea is to understand how we can break down key steps from the mentioned scenario.\u003c/p\u003e\r\n\u003ch3\u003eWhy Use BDD?\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003eClarity\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- everyone is able to understand how the software works.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eSimplicity\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- using simple english to explain how the system works, this is key in helping the team to understand how everything works.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eTransparency\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- everyone knows what to expect from the system.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eSpecific\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- we only write code for the features that we need.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eConfidence\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- we are sure that the features are working since we are using tests.\u003c/p\u003e\r\n\u003ch3\u003eSummary\u003c/h3\u003e\r\n\u003cp\u003eWe use BDD to facilitate good communication between the different parties that are involved when developing a product. We are able to better understand everything that is required when developing the system, through constant feedback and use of examples.\u003c/p\u003e\r\n\u003ch2\u003eTest Driven Development -TDD\u003c/h2\u003e\r\n\u003cp\u003eTDD stands for\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etest driven development\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etest driven design\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eIt is a style of programming where 3 activities are involved\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eCoding\u003c/li\u003e\r\n\u003cli\u003eTesting\u003c/li\u003e\r\n\u003cli\u003eRefactoring\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eIt can be summarized into the following steps:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eWrite a single test describing a feature of the program.\u003c/li\u003e\r\n\u003cli\u003eRun the test and to make sure it fails because your program lacks that feature.\u003c/li\u003e\r\n\u003cli\u003eWrite the simplest code possible to make test pass.\u003c/li\u003e\r\n\u003cli\u003eRefactoring the code till it confirms to the simplest criteria.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003eBenefits of TDD\u003c/h3\u003e\r\n\u003cp\u003eWith TDD you get.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eFewer bugs in code -because you have tested out the main features\u003c/li\u003e\r\n\u003cli\u003eFocus - your focus is narrowed to making sure the test passes\u003c/li\u003e\r\n\u003cli\u003eDocumentation - tests act like documentation in that if you do not know what a bit of code does you can read it and see what it does.\u003c/li\u003e\r\n\u003c/ol\u003e","exportId":"monday-behaviour-driven-development-and-test-driven-development"},{"id":425,"title":"Monday: Unittest","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eUnittest\u003c/h2\u003e\r\n\u003cp\u003eBefore we begin writing tests, let us outline the different behaviors we want in our application\u003c/p\u003e\r\n\u003ch4\u003eB.D.D\u003c/h4\u003e\r\n\u003cp\u003eWe want our application to:\u003c/p\u003e\r\n\u003cp style=\"padding-left: 180px;\"\u003e1. Allow us to Create new contacts with properties.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 180px;\"\u003e2. Save contacts.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 180px;\"\u003e3. Display contacts.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 180px;\"\u003e4. Delete contacts.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 180px;\"\u003e5. Display contact information.\u003c/p\u003e\r\n\u003cp\u003eLet us create tests for these behaviors:\u003c/p\u003e\r\n\u003cp\u003eCreate a file in our Contact-List folder and name it\u003cspan\u003e \u003c/span\u003e\u003cem\u003econtact_test.py\u003c/em\u003e. This is where we will write all the tests for our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact_test.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Importing the unittest module\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003econtact\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Importing the contact class\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Test class that defines test cases for the contact class behaviours.\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        unittest.TestCase: TestCase class that helps in creating test cases\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo create tests in python, we first import a Python test framework called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest\u003c/code\u003e. We also import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003esubclass\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eclass called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTestContacts\u003c/code\u003e, that inherits from\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest.TestCase\u003c/code\u003e. A subclass is like a normal class but in addition to its own variables and method it also\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003einherits\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003emethods and variables from another class.\u003c/p\u003e\r\n\u003cp\u003eWe pass in the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eparent class\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eas a parameter in the parenthesis.\u003c/p\u003e\r\n\u003ch3\u003eFirst test\u003c/h3\u003e\r\n\u003cp\u003eThe first thing we want to test on, is if our objects are being instantiated correctly.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"c1\"\u003e# Items up here .......\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Set up method to run before each test cases.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Muriuki\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"james@ms.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# create contact object\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_init\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        test_init test case to test if the object is initialized properly\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Muriuki\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ephone_number\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"james@ms.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003e\n\u003ccode\u003esetUp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eMethod\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod allows us to define instructions that will be executed before each test method.\u003c/p\u003e\r\n\u003cp\u003eWe have instructed our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to create a new instance of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass, before each test method declared, and stores it in an instance variable in the test class\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself.new_contact\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eTests are defined with methods that start with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_\u003c/code\u003e, (this is just proper convention to define your tests).\u003c/p\u003e\r\n\u003cp\u003eWe created a test called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_instance\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto check if all our objects are instantiated correctly.\u003c/p\u003e\r\n\u003cp\u003eWe see some new syntax here\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself.assertEqual()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethis is a \u003ccode\u003eTestCase\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that checks for an expected result. The first argument is the expected result and the second argument is the result that is actually gotten.  Here, we are checking if the name and description of our new object is what we actually inputted.\u003c/p\u003e\r\n\u003ch4\u003eif\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e==\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'__main__'\u003c/code\u003e\n\u003c/h4\u003e\r\n\u003cp\u003ePython runtime has special attributes delimited with double underscores\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e(_)\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable evaluates to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"__main__\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eor the actual module name depending on how the module is being executed\u003c/p\u003e\r\n\u003cp\u003eSo by defining the condition\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif __name__ == '__main__'\u003c/code\u003e: we are confirming that anything inside the if block should run only if this is the file that is currently being run. \u003ca href=\"https://stackoverflow.com/questions/419163/what-does-if-name-main-d\"\u003eClick here\u003c/a\u003e to read more about this \u003c/p\u003e\r\n\u003cp\u003eFinally the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest.main()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eprovides a command line interface that collects all the tests methods and executes them.\u003c/p\u003e\r\n\u003cp\u003eNow when we run this code\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e----------------------------------------------------------------------\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eRan\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.000\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eOK\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis test passed because we had already implemented our code for creating a new instance in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass. Let us see how to implement the Red-Green-Refactor Method .\u003c/p\u003e\r\n\u003ch3\u003eSecond Test\u003c/h3\u003e\r\n\u003cp\u003eApart from creating contacts we would like to save them. Let us write a test for that.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact_test.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_save_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        test_save_contact test case to test if the contact object is saved into\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e         the contact list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e# saving the new contact\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we created a test called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_save_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat calls a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to our newly generated object.\u003c/p\u003e\r\n\u003cp\u003eThen we check the length of our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003elist to confirm an addition has been made to our contact list.\u003c/p\u003e\r\n\u003cp\u003eWhen we run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eE\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e======================================================================\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eERROR\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etest_save_contact\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e__main__\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestContacts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e----------------------------------------------------------------------\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eTraceback\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emost\u003c/span\u003e \u003cspan class=\"n\"\u003erecent\u003c/span\u003e \u003cspan class=\"n\"\u003ecall\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n  \u003cspan class=\"n\"\u003eFile\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"contact_test.py\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eline\u003c/span\u003e \u003cspan class=\"mi\"\u003e31\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003etest_save_contact\u003c/span\u003e\r\n    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"ne\"\u003eAttributeError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Contact'\u003c/span\u003e \u003cspan class=\"nb\"\u003eobject\u003c/span\u003e \u003cspan class=\"n\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003eno\u003c/span\u003e \u003cspan class=\"n\"\u003eattribute\u003c/span\u003e \u003cspan class=\"s1\"\u003e'save_contact'\u003c/span\u003e\r\n\r\n\u003cspan class=\"o\"\u003e----------------------------------------------------------------------\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eRan\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"n\"\u003etests\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.001\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eFAILED\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerrors\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe get an error.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eAttributeError: 'Contact' object has no attribute 'save_contact'\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eThis is a good thing because we want our test to fail. We can now add some code in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto make this pass.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Empty contact list\u003c/span\u003e\r\n \u003cspan class=\"c1\"\u003e# Init method up here\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        save_contact method saves contact objects into contact_list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that is called on a contact object and appends it to our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact-list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist.\u003c/p\u003e\r\n\u003cp\u003eSo now when we run the test file again.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003epython3.6 contact_test.py\r\n\r\n.\r\n----------------------------------------------------------------------\r\nRan \u003cspan class=\"m\"\u003e2\u003c/span\u003e tests in \u003cspan class=\"m\"\u003e0\u003c/span\u003e.000s\r\n\r\nOK\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eThe third test\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Items up here...\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_save_multiple_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            test_save_multiple_contact to check if we can save multiple contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            objects to our contact_list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            '''\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Test\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test@user.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# new contact\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add another test case\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_save_multiple_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto test if we can save multiple contacts in our contact list.\u003c/p\u003e\r\n\u003cp\u003eWe create a new contact object called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand save it. Then we check if the length of our contact list is equal to the number of contacts saved.\u003c/p\u003e\r\n\u003cp\u003ewhen we run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e..F\r\n\u003cspan class=\"o\"\u003e===============================================================\u003c/span\u003e\r\nFAILED \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003efailures\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we get an assertion error we expected to get\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e2\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebut we got\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e3\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe are getting this error because every time we run each test we are creating instances of contact and saving them and all of them are being counted.\u003c/p\u003e\r\n\u003ch4\u003e\n\u003ccode\u003etearDown\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# setup and class creation up here\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etearDown\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            tearDown method that does clean up after each test case has run.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            '''\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# other test cases here\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_save_multiple_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            test_save_multiple_contact to check if we can save multiple contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            objects to our contact_list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            '''\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Test\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test@user.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# new contact\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eJust like the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etearDown()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod executes a set of instructions after every test.\u003c/p\u003e\r\n\u003cp\u003eIn the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etearDown()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod we assign the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass as an empty list. This helps us get accurate test results every time a new test case.\u003c/p\u003e\r\n\u003cp\u003eWhen we run this now\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e...\r\n----------------------------------------------------------------------\r\nRan \u003cspan class=\"m\"\u003e3\u003c/span\u003e tests in \u003cspan class=\"m\"\u003e0\u003c/span\u003e.000s\r\n\r\nOK\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eFourth Test\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# More tests above\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_delete_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            test_delete_contact to test if we can remove a contact from our contact list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            '''\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Test\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test@user.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# new contact\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"c1\"\u003e# Deleting a contact object\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow we want to add the feature to delete contacts . We create a test for that behavior then we confirm if the length of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist is equal to the number of saved contacts.\u003c/p\u003e\r\n\u003cp\u003eLet us run this to confirm it fails. Then let us write the code to make the test pass.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edelete_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        delete_contact method deletes a saved contact from the contact_list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edelete_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that uses the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eremove()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to delete the contact object from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch3\u003eFifth Test\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_find_contact_by_number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        test to check if we can find a contact by phone number and display information\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Test\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0711223344\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test@user.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# new contact\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003efound_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_by_number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0711223344\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efound_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe now create a test case that tests if we can find a contact object we use the method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efind_by_number()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes on a phone number, and returns a contact object. Then we check if the contact object is equal to the saved contact.\u003c/p\u003e\r\n\u003cp\u003eRun the test to confirms if it fails. Then let us create the code to make the test pass\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e    \u003ccode\u003e\u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efind_by_number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Method that takes in a number and returns a contact that matches that number.\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e        Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            number: Phone number to search for\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Returns :\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            Contact of person that matches the number.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ephone_number\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003eDecorators\u003c/h4\u003e\r\n\u003cp\u003eIn the above example we see a new line\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@classmethod\u003c/code\u003e. This is referred to as a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003edecorator\u003c/strong\u003e. Decorators allow you to make simple modifications to callable objects like functions, methods, or classes.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e@classmethod\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esimply informs the python interpreter that this is a method that belongs to the entire class\u003c/p\u003e\r\n\u003cp\u003eJust like the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument refers to the object,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecls\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ereferred to the entire class, and does not need to be passed in when we call the method.\u003c/p\u003e\r\n\u003cp\u003eIn the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efind_by_number\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method, we loop through each contact object in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand check if the phone number is equal to the number passed in. It then returns the contact object.\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"monday-unittest"},{"id":426,"title":"Tuesday: Introduction, asserTrue(); Python Modules","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eSo yesterday we introduced Object Oriented Programing, and wrote some unit tests to verify that our code works. Today we will be seeing how to handle user input. We will cover some error handling and we will finish up by working with some python modules.\u003c/p\u003e\r\n\u003ch2\u003eWarm Up\u003c/h2\u003e\r\n\u003col\u003e\r\n\u003cli\u003eHow do you create a class in Python?\u003c/li\u003e\r\n\u003cli\u003eYou are building a website for handling train ticketing . Using BDD list all the behaviors you expect to have in your application.\u003c/li\u003e\r\n\u003cli\u003eWhat is a test case, in Python and how is it created ?\u003c/li\u003e\r\n\u003cli\u003eDescribe the testing process used in TDD.\u003c/li\u003e\r\n\u003cli\u003eWrite a test method for a function that returns\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"Hello World!\"\u003c/code\u003e\n\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003e\n\u003ccode\u003eassertTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod\u003c/h2\u003e\r\n\u003cp\u003eNow we want to check if a contact object actually exists.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_contact_exists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        test to check if we can return a Boolean  if we cannot find the contact.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Test\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0711223344\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test@user.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# new contact\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003econtact_exists\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_exist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0711223344\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_exists\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCreated a test case to test the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_exist\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that takes in a phone number. We then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eassertTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod provided by the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eTestCase\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eclass to check if the return value is\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eRun the test and confirm it fails then. Let us write the code to pass the test\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003econtact_exist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Method that checks if a contact exists from the contact list.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            number: Phone number to search if it exists\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Returns :\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            Boolean: True or false depending if the contact exists\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ephone_number\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we created the class method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_exist\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat loops through all the saved contacts and checks if any matches the number passed in. Then it returns a boolean value.\u003c/p\u003e\r\n\u003ch3\u003eDisplay all contacts\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact_test.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_display_all_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        method that returns a list of all contacts saved\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a test case that test to check if we receive the list of the saved contacts. Run the test and confirm that it fails. Now lets create the code to make the test pass.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e    @classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        method that returns the contact list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create another class method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplay_contacts\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat returns the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist.\u003c/p\u003e\r\n\u003ch2\u003ePyperclip module\u003c/h2\u003e\r\n\u003cp\u003eThe next feature we would like to implement, is that we would like to copy a contacts email address. We will copy that number to the machine's clipboard and paste it wherever we want.\u003c/p\u003e\r\n\u003cp\u003eWe will use a third party module called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003epyperclip\u003c/strong\u003e. Pyperclip will allow us to copy and paste items to our clipboard.\u003c/p\u003e\r\n\u003cp\u003eWe first need to install it. Remember we use a tool called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003epip\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat installs third party modules from the\u003cspan\u003e \u003c/span\u003e\u003cem\u003epython package index\u003c/em\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 -m pip install pyperclip\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe command illustrates how to download a third party module.\u003c/p\u003e\r\n\u003cp\u003eLet us write a test for this behavior\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003epyperclip\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e...............\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_copy_email\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Test to confirm that we are copying the email address from a found contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecopy_email\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epyperclip\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epaste\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst at the top of our test module we import our new pyperclip module.\u003c/p\u003e\r\n\u003cp\u003eIn the test method we first confirm that the contact exists then we call on the class method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact.copy_email()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the contact number.\u003c/p\u003e\r\n\u003ch4\u003epyperclip.paste()\u003c/h4\u003e\r\n\u003cp\u003eIn our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eassertEqual\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod we use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epyperclip.paste()\u003c/code\u003e, and compare it with the contact object email.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003epyperclip.paste()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod returns whatever is copied on the machine's clipboard at that time.\u003c/p\u003e\r\n\u003cp\u003eRun the test to confirm that it fails.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003epyperclip\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e......................\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecopy_email\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003econtact_found\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_by_number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003epyperclip\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecopy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_found\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we first import pyperclip at the top of the document.\u003c/p\u003e\r\n\u003cp\u003eThen we get the email of the contact by first getting the contact object by using our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efind_by_number\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod. We then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epyperclip.copy()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the contact email address.\u003c/p\u003e\r\n\u003ch4\u003epyperclip.copy()\u003c/h4\u003e\r\n\u003cp\u003e\u003ccode\u003epyperclip.copy()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod allows us to copy passed in items to the machines clipboard\u003c/p\u003e\r\n\u003cp\u003eWe use it here to copy the email to the clipboard.\u003c/p\u003e\r\n\u003ch2\u003eContact-list\u003c/h2\u003e\r\n\u003cp\u003eNow let us implement the class we created to develop our contact-list application.\u003c/p\u003e\r\n\u003cp\u003eCreate a new file in the Contact-List Folder and name it\u003cspan\u003e \u003c/span\u003e\u003cem\u003erun.py\u003c/em\u003e.\u003c/p\u003e\r\n\u003ch3\u003e#! shebang\u003c/h3\u003e\r\n\u003cp\u003eThe shebang line in any script determines the script's ability to be executed like an standalone executable without typing python3.6 beforehand in the terminal. It is always the first line in any runnable python script.\u003c/p\u003e\r\n\u003cp\u003eIt also helps anyone looking at your application to know what version of python the application uses.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003erun.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"ch\"\u003e#!/usr/bin/env python3.6\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe shebang starts with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e#!\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand points to the python Interpreter the application is using.\u003c/p\u003e\r\n\u003cp\u003eTo make the program now executable we go to the terminal\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ chmod +x run.py\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow we can open the program with\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ ./run.py\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erun.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewe want to implement the features we have just have been testing.\u003c/p\u003e\r\n\u003cp\u003eAfter our shebang line let us import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003econtact\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eOnce we import the contact class let's now create functions that implement the behaviours we have just created.\u003c/p\u003e\r\n\u003ch4\u003e1. Creating a Contact\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efname\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elname\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ephone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function to create a new contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efname\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elname\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ephone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create a function called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_contact()\u003c/code\u003e, that takes in four arguments. We then create a new contact object and return it.\u003c/p\u003e\r\n\u003ch4\u003e2. Save contacts\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esave_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function to save contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_contacts\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in a contact object and then calls the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to save the contact.\u003c/p\u003e\r\n\u003ch4\u003e3. Delete contact\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edel_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function to delete a contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edel_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in a contact object and then calls the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edelete_contact()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod on the contact object deleting it from the contact list.\u003c/p\u003e\r\n\u003ch4\u003e4. Finding a contact\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efind_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that finds a contact by number and returns the contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_by_number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a function\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efind_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in a number and calls the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003eclass method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efind_by_number\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat returns the contact.\u003c/p\u003e\r\n\u003ch4\u003e5. Check if a contact exists\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003echeck_existing_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that check if a contact exists with that number and return a Boolean\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_exist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe function\u003cspan\u003e \u003c/span\u003e\u003ccode\u003echeck_existing_contacts\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etakes in a number as an argument and calls the class method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_exist\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich returns a boolean.\u003c/p\u003e\r\n\u003ch4\u003e6. Displaying all contacts\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that returns all the saved contacts\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eTask\u003c/h3\u003e\r\n\u003cp\u003eCreate a function that handles the behavior of copy the email to the clipboard for the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecopy_email\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method\u003c/p\u003e\r\n\u003ch3\u003eMain function\u003c/h3\u003e\r\n\u003cp\u003eWe have defined the functions that implement the behaviors. Now let us call them.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Hello Welcome to your contact list. What is your name?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003euser_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Hello {user_name}. what would you like to do?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n            \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Use these short codes : cc - create a new contact, dc - display contacts, fc -find a contact, ex -exit the contact list \"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                    \u003cspan class=\"n\"\u003eshort_code\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elower\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n                    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eshort_code\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'cc'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"New Contact\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-\"\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"First name ....\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"n\"\u003ef_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Last name ...\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"n\"\u003el_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Phone number ...\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"n\"\u003ep_number\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Email address ...\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"n\"\u003ee_address\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\r\n                            \u003cspan class=\"n\"\u003esave_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003el_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ep_number\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ee_address\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"c1\"\u003e# create and save new contact.\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"New Contact {f_name} {l_name} created\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eshort_code\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'dc'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Here is a list of all your contacts\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                                    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n                                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"{contact.first_name} {contact.last_name} .....{contact.phone_number}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You dont seem to have any contacts saved yet\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eshort_code\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'fc'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Enter the number you want to search for\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"n\"\u003esearch_number\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003echeck_existing_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_number\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n                                    \u003cspan class=\"n\"\u003esearch_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_number\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"{search_contact.first_name} {search_contact.last_name}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'-'\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Phone number.......{search_contact.phone_number}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Email address.......{search_contact.email}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"That contact does not exist\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eshort_code\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"ex\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bye .......\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\r\n                    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I really didn't get that. Please use the short codes\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we created a main function that calls all the other function. It has a while loop, where we offered users a shortcut of commands, they could use in our application.\u003c/p\u003e\r\n\u003cp\u003eWe then prompt the user for input which we transform to\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003elowercase\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand strip any extra spaces.\u003c/p\u003e\r\n\u003cp\u003eWe then use a series of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e-\u003ccode\u003eelif\u003c/code\u003e-\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatements to check user input and call the functions we have just defined depending on the user's choice.\u003c/p\u003e\r\n\u003ch3\u003eTask\u003c/h3\u003e\r\n\u003cp\u003eWith your pair implement the remaining behaviors : 1. Deleting a contact. 2. Copying a contact email.\u003c/p\u003e\r\n\u003ch3\u003eCalling the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emain\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction\u003c/h3\u003e\r\n\u003cp\u003eNow we want the main function to run only if it was run from this module. To do this we use at the bottom of our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erun.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow we can run our script using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e./run.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand interact with our program from the command line.\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"tuesday-introduction-assertrue-python-modules"},{"id":1075,"title":"Wednesday: White Board Interview Practice","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a text entry box","graded":true,"pointsPossible":12.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv class=\"description user_content teacher-version enhanced\"\u003e\r\n\u003cp\u003e\u003cspan\u003eTake time this morning and split into groups of 5. You will be practicing for white board interviews that will be touched on more during your project period. Pick one of you to take the mock white board interview, set a toy problem for them to go through, and at the end use the rubric below to grade and give feedback.\u003c/span\u003e\u003c/p\u003e\r\n\u003c/div\u003e","exportId":"i33647bfd10feec0165b0648d8317f719"},{"id":427,"title":"Wednesday: Introduction; Open Functions; Reading a File","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eToday we are going to learn how we can use python to manipulate files on out hard drives.\u003c/p\u003e\r\n\u003ch2\u003eFile Types\u003c/h2\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eText Files\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- A file organized in a sequence of lines, that include a sequence of characters.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eBinary Files\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- This is anything that is not a text file and they have a special encoding and a method to be read.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003e\u003ccode\u003eOpen()\u003c/code\u003e\u003c/h3\u003e\r\n\u003cp\u003ePython comes with a built in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eopen()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that returns a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eobject. File objects have methods and attributes used to collect information about the file.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003efile_variable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"filename\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"mode\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we call the function we pass in the filename or file path, then we pass in the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emode\u003c/strong\u003e. The Mode tells the developer and the interpreter in which way the file will be used.\u003c/p\u003e\r\n\u003ch4\u003eModes\u003c/h4\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003ccode\u003er\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- This means the file is in Read Mode only.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003ew\u003c/code\u003e- The file is in Write Mode only.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003ea\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e-The file is in append mode where we can only add items to the bottom of the file.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003er+\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eThe file is in both read and write mode.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eThe mode parameter is optional because the default value is\u003cspan\u003e \u003c/span\u003e\u003ccode\u003er\u003c/code\u003e\u003c/p\u003e\r\n\u003ch2\u003eReading files\u003c/h2\u003e\r\n\u003cp\u003eLet's use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eopen()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to read a file.\u003c/p\u003e\r\n\u003cp\u003eCreate a new folder name it File-Handling. Inside it create a text file\u003cspan\u003e \u003c/span\u003e\u003cem\u003etest.txt\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand paste in the following.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003eWhat is Python language?\r\nPython is a widely used high-level, general-purpose, interpreted, dynamic programming language.\r\nIts design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than possible in\r\nlanguages such as C++ or Java.\r\nPython supports multiple programming paradigms, including object-oriented, imperative and functional programming or procedural styles.\r\nIt features a dynamic type system and automatic memory management and has a large and comprehensive standard library.\r\nThe best way we learn anything is by practice and exercise questions. We  have started this section for those (beginner to intermediate) who are\r\nfamiliar with Python.\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eReading a file\u003c/h3\u003e\r\n\u003cp\u003eTo read an entire file in python we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eread()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod on the file. Create a file in the same folder as test.txt file and name it\u003cspan\u003e \u003c/span\u003e\u003cem\u003ereadFile.py then\u003c/em\u003e type this in.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run it\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003ereadFile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eWhat\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e \u003cspan class=\"n\"\u003elanguage\u003c/span\u003e\u003cspan class=\"err\"\u003e?\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ePython\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003ewidely\u003c/span\u003e \u003cspan class=\"n\"\u003eused\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003elevel\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003egeneral\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003epurpose\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einterpreted\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edynamic\u003c/span\u003e \u003cspan class=\"n\"\u003eprogramming\u003c/span\u003e \u003cspan class=\"n\"\u003elanguage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIts\u003c/span\u003e \u003cspan class=\"n\"\u003edesign\u003c/span\u003e \u003cspan class=\"n\"\u003ephilosophy\u003c/span\u003e \u003cspan class=\"n\"\u003eemphasizes\u003c/span\u003e \u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"n\"\u003ereadability\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eits\u003c/span\u003e \u003cspan class=\"n\"\u003esyntax\u003c/span\u003e \u003cspan class=\"n\"\u003eallows\u003c/span\u003e \u003cspan class=\"n\"\u003eprogrammers\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexpress\u003c/span\u003e \u003cspan class=\"n\"\u003econcepts\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003efewer\u003c/span\u003e \u003cspan class=\"n\"\u003elines\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003epossible\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elanguages\u003c/span\u003e \u003cspan class=\"n\"\u003esuch\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eC\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eJava\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ePython\u003c/span\u003e \u003cspan class=\"n\"\u003esupports\u003c/span\u003e \u003cspan class=\"n\"\u003emultiple\u003c/span\u003e \u003cspan class=\"n\"\u003eprogramming\u003c/span\u003e \u003cspan class=\"n\"\u003eparadigms\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eincluding\u003c/span\u003e \u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eoriented\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eimperative\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003efunctional\u003c/span\u003e \u003cspan class=\"n\"\u003eprogramming\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eprocedural\u003c/span\u003e \u003cspan class=\"n\"\u003estyles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIt\u003c/span\u003e \u003cspan class=\"n\"\u003efeatures\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003edynamic\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003esystem\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eautomatic\u003c/span\u003e \u003cspan class=\"n\"\u003ememory\u003c/span\u003e \u003cspan class=\"n\"\u003emanagement\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003elarge\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ecomprehensive\u003c/span\u003e \u003cspan class=\"n\"\u003estandard\u003c/span\u003e \u003cspan class=\"n\"\u003elibrary\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003ebest\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003ewe\u003c/span\u003e \u003cspan class=\"n\"\u003elearn\u003c/span\u003e \u003cspan class=\"n\"\u003eanything\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eby\u003c/span\u003e \u003cspan class=\"n\"\u003epractice\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eexercise\u003c/span\u003e \u003cspan class=\"n\"\u003equestions\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"n\"\u003eWe\u003c/span\u003e  \u003cspan class=\"n\"\u003ehave\u003c/span\u003e \u003cspan class=\"n\"\u003estarted\u003c/span\u003e \u003cspan class=\"n\"\u003ethis\u003c/span\u003e \u003cspan class=\"n\"\u003esection\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ethose\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebeginner\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eintermediate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ewho\u003c/span\u003e \u003cspan class=\"n\"\u003eare\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003efamiliar\u003c/span\u003e \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we see that it returns the contents of our entire file. We use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.close()\u003c/code\u003emethod to close the file handle because it helps us save some memory. It also it prevents getting errors in our application.\u003c/p\u003e\r\n\u003ch3\u003eReading a single line\u003c/h3\u003e\r\n\u003cp\u003eTo read only a single line we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadline()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereadline\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run it\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003ereadFile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eWhat\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e \u003cspan class=\"n\"\u003elanguage\u003c/span\u003e\u003cspan class=\"err\"\u003e?\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadline()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ereturns the first line in our file.\u003c/p\u003e\r\n\u003ch3\u003eReading multiple lines\u003c/h3\u003e\r\n\u003cp\u003eTo read many lines we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadlines()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereadlines\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run it\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003ereadFile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\r\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'What is Python language?\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Python is a widely used high-level, general-purpose, interpreted, dynamic programming langua\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ege\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003eIts\u003c/span\u003e \u003cspan class=\"n\"\u003edesign\u003c/span\u003e \u003cspan class=\"n\"\u003ephilosophy\u003c/span\u003e \u003cspan class=\"n\"\u003eemphasizes\u003c/span\u003e \u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"n\"\u003ereadability\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eits\u003c/span\u003e \u003cspan class=\"n\"\u003esyntax\u003c/span\u003e \u003cspan class=\"n\"\u003eallows\u003c/span\u003e \u003cspan class=\"n\"\u003eprogrammers\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexpress\u003c/span\u003e \u003cspan class=\"n\"\u003econcepts\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003efewer\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elines\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003epossible\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003elanguages\u003c/span\u003e \u003cspan class=\"n\"\u003esuch\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eC\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eJava\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003ePython\u003c/span\u003e \u003cspan class=\"n\"\u003esupports\u003c/span\u003e \u003cspan class=\"n\"\u003emultiple\u003c/span\u003e \u003cspan class=\"n\"\u003eprogramming\u003c/span\u003e \u003cspan class=\"n\"\u003eparadigms\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einclu\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eding\u003c/span\u003e \u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eoriented\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eimperative\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003efunctional\u003c/span\u003e \u003cspan class=\"n\"\u003eprogramming\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eprocedural\u003c/span\u003e \u003cspan class=\"n\"\u003estyles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003eIt\u003c/span\u003e \u003cspan class=\"n\"\u003efeatures\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003edynamic\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003esystem\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e\r\n \u003cspan class=\"n\"\u003eautomatic\u003c/span\u003e \u003cspan class=\"n\"\u003ememory\u003c/span\u003e \u003cspan class=\"n\"\u003emanagement\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003elarge\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ecomprehensive\u003c/span\u003e \u003cspan class=\"n\"\u003estandard\u003c/span\u003e \u003cspan class=\"n\"\u003elibrary\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003ebest\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003ewe\u003c/span\u003e \u003cspan class=\"n\"\u003elearn\u003c/span\u003e \u003cspan class=\"n\"\u003eanything\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eby\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003epractice\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eexercise\u003c/span\u003e \u003cspan class=\"n\"\u003equestions\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"n\"\u003eWe\u003c/span\u003e  \u003cspan class=\"n\"\u003ehave\u003c/span\u003e \u003cspan class=\"n\"\u003estarted\u003c/span\u003e \u003cspan class=\"n\"\u003ethis\u003c/span\u003e \u003cspan class=\"n\"\u003esection\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ethose\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebeginner\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eintermediate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ewho\u003c/span\u003e \u003cspan class=\"n\"\u003eare\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003efamiliar\u003c/span\u003e \u003cspan class=\"n\"\u003ewit\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eh\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e']\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadlines()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ereturns a list of all the lines in our file separated\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\n\u003c/code\u003e\u003cspan\u003e \u003c/span\u003enew line tags.\u003c/p\u003e\r\n\u003ch3\u003eLooping through a file.\u003c/h3\u003e\r\n\u003cp\u003eYou can also loop through a file. Let us take for example we want to find how many times the word\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ePython\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ehas been used in the file.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"text.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ecounter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eword\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eword\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Python\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n       \u003cspan class=\"n\"\u003ecounter\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecounter\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we used the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esplit()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to transform data into a list of words which we loop through and search if the word matches\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"Python\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand adds one to the counter.\u003c/p\u003e\r\n\u003cp\u003eWhen we run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003ereadFile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\r\n\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e","exportId":"wednesday-introduction-open-functions-reading-a-file"},{"id":428,"title":"Wednesday: Writing a File With Operator","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eWriting a file\u003c/h2\u003e\r\n\u003cp\u003eWriting a file in python is pretty straight forward,\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"text-write.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"w\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we change the mode to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"w\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto mean we want to write on the file. We need to be careful when we do this because when we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"w\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eon an existing file it will overwrite all the content in that file.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"text-write.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"w\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Hello Moringa\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this on our console we see a new file\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etext-write.txt\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ehas been created in our project folder and the text\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"Hello Moringa\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis in it.\u003c/p\u003e\r\n\u003ch2\u003eWith operator\u003c/h2\u003e\r\n\u003cp\u003ePython has a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewith\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eoperator that can simplify how we read and write files. The operator creates a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003econtext manager\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat automatically closes the file when you are done.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we open the file, but we do not provide a closing operation. All the functionality we want to do with the data from the file, is done in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewith\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock.\u003c/p\u003e\r\n\u003ch2\u003eLorem File\u003c/h2\u003e\r\n\u003cp\u003eWe will now see how to manipulate data from a lorem ipsum text file.\u003c/p\u003e\r\n\u003cp\u003eCreate a new Folder name it\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eLorem\u003c/code\u003e. Inside the folder create two files\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadfiles.py\u003c/code\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_readfiles.py\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eCreate another file \u003ccode\u003etest.txt\u003c/code\u003e , then follow this \u003ca href=\"https://www.lipsum.com/\"\u003elink\u003c/a\u003e to create a lorem ipsum text then copy it into the file\u003c/p\u003e\r\n\u003cp\u003eFirst, Let us first breakdown the different behaviors we want our application to perform.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eWe would like to read the file\u003c/li\u003e\r\n\u003cli\u003eWe would like to see how many times a single word is being used.\u003c/li\u003e\r\n\u003cli\u003eWe would like to see how many lines we have in our text files\u003c/li\u003e\r\n\u003cli\u003eWe would like to see the longest word in the text file.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eSetup Test Class\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003etest_readfiles.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ereadfiles\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestReadFiles\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Class to test the  functions on the  readfiles module\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        unittest.TestCase: Class from the unittest module to create unit tests\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    \"\"\"\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"__main__\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst we setup the test class. Import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto create our test cases and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadfiles\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodules that will be holding our code.\u003c/p\u003e\r\n\u003ch3\u003eRead a file\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003etest_readfiles.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_get_data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Test case to confirm that we are getting data from the file\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        \"\"\"\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereadfiles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe are testing to see if we are actually getting data from the text file. And comparing it with our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadfiles.readfile()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that returns data from the file.\u003c/p\u003e\r\n\u003cp\u003eRun the code to confirm the test fails. Then write the code to pass the test.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003ereadfiles.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003etext_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eread_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etext_file\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that reads a text file and returns the data from the text file\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        \"\"\"\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etext_file\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eWrong File Path\u003c/h3\u003e\r\n\u003cp\u003eSo what if by mere chance we passed in a wrong file path. Let us test for this.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_nonfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Test to confirm that an exeption is raised when a wrong file is inputted\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        \"\"\"\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereadfiles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"tests.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we now pass in a wrong file name and we expect to get a None response from now calling the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadfiles.read_file()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction.\u003c/p\u003e\r\n\u003cp\u003eWhen we run this test we get a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFileNotFoundError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elets handle this error.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eread_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etext_file\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that reads a text file and returns the data from the text file\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Raises:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        FileNotFoundError:If it cannot the file\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    \"\"\"\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etext_file\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n            \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"n\"\u003eFileNotFoundError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we nest the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewith\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eoperator inside a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etry\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock and we catch the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFileNotFoundError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eexception we return\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eNone\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch2\u003eLorem File\u003c/h2\u003e\r\n\u003cp\u003eTry and implement the remaining features with your pair.Make sure you follow the Red-Green-Refactor when writing tests.\u003c/p\u003e\r\n\u003ch4\u003eFeatures\u003c/h4\u003e\r\n\u003col\u003e\r\n\u003cli\u003eWe would like to see how many times a single word is being used.\u003c/li\u003e\r\n\u003cli\u003eWe would like to see how many lines we have in our text files\u003c/li\u003e\r\n\u003cli\u003eWe would like to see the longest word in the text file.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"wednesday-writing-a-file-with-operator"},{"id":429,"title":"Thursday: Introduction; Tic Tac Toe; Bulleter","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eSo we have covered a lot of ground so far. Let us use some of the skills we have learnt to build a few projects.\u003c/p\u003e\r\n\u003ch2\u003eTic Tac Toe\u003c/h2\u003e\r\n\u003cp\u003eCreate a tic tac toe game where two users can can compete with each other.\u003cspan\u003e \u003c/span\u003e\u003ca href=\"http://web.cecs.pdx.edu/~bart/cs541-fall2001/homework/tictactoe-rules.html\"\u003eHere are the rules\u003c/a\u003e.\u003c/p\u003e\r\n\u003cp\u003eFeatures:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eOutline all the behaviors your application will have.\u003c/li\u003e\r\n\u003cli\u003eCreate a Player class for both players.\u003c/li\u003e\r\n\u003cli\u003eDraw the tic tac toe grid and update it when users play on a side.\u003c/li\u003e\r\n\u003cli\u003eCreate unit tests for all the behaviors.\u003c/li\u003e\r\n\u003cli\u003eCreate doc-strings for the modules, functions and methods\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003eBulleter\u003c/h2\u003e\r\n\u003cp\u003eTake a file and add\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e*\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein front of every line and capitalize the first word. Write updated items in a another file. Also copy the new file to the clipboard\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eOutline all the behaviors your application will have.\u003c/li\u003e\r\n\u003cli\u003eCreate unit tests for all the behaviours.\u003c/li\u003e\r\n\u003cli\u003eCreate doc-strings for the modules, functions and methods\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003eCSV parser\u003c/h2\u003e\r\n\u003cp\u003eComma Separated Values are files that store a large number of variables and data. They act Like a simple spreadsheet. Parsing through CSVs and manipulating data is one of a Python developers greatest skills. Using this\u003cspan\u003e \u003c/span\u003e\u003ca href=\"http://www.pythonforbeginners.com/systems-programming/using-the-csv-module-in-python/\"\u003etutorial\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eLearn how to use the CSV module in Python.\u003c/p\u003e\r\n\u003cp\u003eWhen you have completed that Tutorial You will download this file\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://drive.google.com/file/d/0B7-p5eNhYCPwS2NIMjhKMkR5cm8/view?usp=sharing\"\u003eJob Data\u003c/a\u003e. This is a CSV file that contains different jobs from a Jobs Board.\u003c/p\u003e\r\n\u003cp\u003eYour task Is to parse the CSV file and group all the Jobs according to the company that posted the jobs. So you create a folder that will contain all the jobs according to the company that posted the jobs.\u003c/p\u003e\r\n\u003cp\u003eWhen that is done you will go into those individual folders and categorize the jobs from that company into:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eEmployment-type.\u003c/li\u003e\r\n\u003cli\u003eLocation.\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eIndustry.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eOutline all the behaviors your application will have.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003eCreate unit tests for all the behaviors.\u003c/li\u003e\r\n\u003cli\u003eCreate doc-strings for the modules, functions and methods\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003c/div\u003e\r\n \r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"thursday-introduction-tic-tac-toe-bulleter"},{"id":511,"title":"Friday: Password Locker","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":16.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003ePassword locker\u003c/h2\u003e\r\n\u003cp\u003eOn average a person has at least 7 different accounts he or she has signed into. Be it email,social media, entertainment accounts or job portals. It might become really hard to remember all those passwords or even creating new ones.\u003c/p\u003e\r\n\u003cp\u003eLet us create an application that allows us to generate and store passwords for various accounts.\u003c/p\u003e\r\n\u003ch2\u003eRequirements - User Stories\u003c/h2\u003e\r\n\u003cp\u003eAs a user I would like:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eTo create a password locker account with my details - log in and password\u003c/li\u003e\r\n\u003cli\u003eStore my existing login credentials. For example, I would want to store my twitter account credentials.\u003c/li\u003e\r\n\u003cli\u003eGenerate a password for a new credential/account. For example, let's assume that I have not yet signed up for an Instagram account, I can generate a password that I will use when I sign up for an Instagram account.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003eFurther Exploration\u003c/h2\u003e\r\n\u003cp\u003eIf you have completed the objectives below. You can try working on the following features.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eAs a user I would like to be able to copy my credentials to the clipboard .\u003c/li\u003e\r\n\u003cli\u003eAs a user I would also like to dictate the length of the password I generate.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eTechnical Requirements\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eYour Project must contain two classes for the User data and the credential data.\u003c/li\u003e\r\n\u003cli\u003eYour project must have a way to authenticate users to see their credentials.\u003c/li\u003e\r\n\u003cli\u003eYour project must have docstrings to document your methods and functions.\u003c/li\u003e\r\n\u003cli\u003eYour project must have a test class for all your classes testing each individual method in your class.\u003c/li\u003e\r\n\u003cli\u003eYour project must have a well-detailed\u003cspan\u003e \u003c/span\u003e\u003cem\u003eREADME\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile where you\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emust\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003edocument the behavior of your app.\u003c/li\u003e\r\n\u003cli\u003eYour project must have well laid out commit messages with a minimum of 25 commits.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003c/div\u003e","exportId":"id899e6bc12071b5828048a52cc4119f7"},{"id":1089,"title":"Friday: IP review","type":"Assignment","indent":0,"locked":false,"submissionTypes":null,"graded":true,"pointsPossible":18.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cp\u003eThe following scale will be used to grade your Independent Project based on the criteria, please submit your links to your TM.\u003c/p\u003e","exportId":"ibcaa5bd754e036330c2ac47f036ade78"},{"id":431,"title":"Weekend: Welcome to Flask; The Internet Virtual Environment","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eWelcome to Flask\u003c/h2\u003e\r\n\u003cp\u003eFlask is a web framework that has tools that allow us to create web applications.\u003c/p\u003e\r\n\u003cp\u003eIt belongs to a category of web frameworks known as a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emicro-framework\u003c/strong\u003e. This means Flask contains very few dependencies out of the box. It allows the developer to take the driver's seat and have full creative control over the application.\u003c/p\u003e\r\n\u003cp\u003eIt comes packed with a robust core that is also supplemented by many other third party extensions that can be picked to fit our different needs.\u003c/p\u003e\r\n\u003cp\u003eFlask has two main dependencies:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eWerkzeug\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- This provides flask with _routing_,_debugging_ and _web server_ capabilities.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eJinja 2\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- This provides template support for flask.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003eWeb Clients and Servers\u003c/h2\u003e\r\n\u003cp\u003eYou're about to learn your first Python web framework! Before we begin, let's address several language independent concepts that apply to the internet in general.\u003c/p\u003e\r\n\u003cp\u003eIn this lesson, we will walk through details of how the web works; From your browser, known as the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eclient\u003c/strong\u003e, to a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eweb server\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand back again.\u003c/p\u003e\r\n\u003ch3\u003eIP Addresses and the Internet\u003c/h3\u003e\r\n\u003cp\u003eFirst, let's talk about the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eInternet\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eWhen we use the term Internet, we refer to millions of networks that are connected to allow devices (computers, laptops, tablets, phones, etc) to communicate with one another, and access content.\u003c/p\u003e\r\n\u003cp\u003eSimilar to the address of your home, the device you use to browse the Internet also has an address called an\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eInternet Protocol\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eaddress, or\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eIP address\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003efor short. This address is assigned by an\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eInternet Service Provider (ISP)\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eSimilarly, the server for a website you visit also has an IP address. IP addresses are represented with a set of four groups of numbers separated by periods, like this:\u003c/p\u003e\r\n\u003cp\u003e_198.185.159.145_\u003c/p\u003e\r\n\u003cp\u003eYou may also see an additional number after an IP Address that's separated from the others by a colon, like this:\u003c/p\u003e\r\n\u003cp\u003e_198.185.159.145:43_\u003c/p\u003e\r\n\u003cp\u003eThis additional number is a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eport\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003enumber. A port number is like an apartment number or box number after your mailing or home address. It indicates an even more specific location information will travel to at the particular address.\u003c/p\u003e\r\n\u003ch3\u003eCommunicating Between Addresses\u003c/h3\u003e\r\n\u003cp\u003eTo recap, we've covered two addresses so far: Your device's address and a website's address. Next, let's walk through how your address and the website's address interact when you visit a website on your device.\u003c/p\u003e\r\n\u003ch4\u003eClient-Server Process\u003c/h4\u003e\r\n\u003ch5\u003eRequests\u003c/h5\u003e\r\n\u003cp\u003eFirst, in order to access a website you must make a request from a client. The client is usually a web browser, like Chrome, Firefox, Safari, or Internet Explorer. Essentially,anything that facilitates your interaction with the web and web addresses. And making a request usually looks like entering a web address in the browser's _URL bar_, clicking a link, or submitting a form. Anything that triggers a navigational change to a new location on the internet.\u003c/p\u003e\r\n\u003cp\u003eWhen you create a request, the client constructs a message (similar to mailing something from one address to another). This message must be formatted using a strict set of rules, or protocol, known as\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eHypertext Transfer Protocol (HTTP)\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003ePart of this message includes the web address that you are sending your request to: For example, when we click a link to visit this area of the website, the web address _http://moringaschool.com/_ is included.\u003c/p\u003e\r\n\u003cp\u003eContinuing with the metaphor of mailing a letter, Hypertext Transfer Protocol (HTTP) is similar to the formatting rules of addressing an envelope. You can't place the address just anywhere, or format it in any manner you please. There is a protocol for what information is required (street address, city, state, zip), the format it is written in, and where these pieces of information are placed on the envelope. Deviation from this protocol will result in your message, or \"letter\", not reaching its intended destination.\u003c/p\u003e\r\n\u003cp\u003eHTTP has similar standards. It requires certain kinds of information, placed and formatted in a specific manner in order for the client to reach its destination. For instance, when the request message for http://moringaschool.com/ leaves the client, the ISP is the first stop on the round trip to collect the Moringa School's web content from the server where it is stored.\u003c/p\u003e\r\n\u003cp\u003eBefore the location of the server can be found, the IP address must be identified using the web address provided in the client's request message. This is the job of the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eDomain Naming System\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eDNS servers\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eThere are hundreds of DNS servers that house databases with the single purpose of resolving web addresses to IP addresses. In our example, a DNS server matches _http://moringaschool.com/_ to the IP address: _198.54.116.26_. Once resolved to an IP address, your request message is sent to its identified destination, 198.54.116.26, or, the server that contains our Moringa School's website.\u003c/p\u003e\r\n\u003cp\u003eThe web server receives the message and determines the resource that is being located or acted upon in the request. In our example, the request to view _http://moringaschool.com/_ will gather the resource for displaying the main Courses page. This resource is an an HTML document. Depending on the website, other resources may need to be gathered too, such as images, stylesheets, scripts, videos, etc.\u003c/p\u003e\r\n\u003ch5\u003eResponses\u003c/h5\u003e\r\n\u003cp\u003eWhen the content is collected, the server returns it in a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eresponse\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eback to the client. The response is interpreted by the client and you see the _http://moringaschool.com/_ main page displayed in your browser window.\u003c/p\u003e\r\n\u003cp\u003eWhen you interact again with the site, by clicking a link, or navigating to a different area, the whole process begins again.\u003c/p\u003e\r\n\u003cp\u003eAlthough you're probably most familiar with making web requests through your web browser, know that any program can actually be a web client. For instance, a program installed on your computer that automatically checks for and downloads updates, an app running on your tablet, or even one web server making a request to another web server are all clients. Each of these must use the same HTTP protocol.\u003c/p\u003e\r\n\u003ch5\u003eTerminology\u003c/h5\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eClient\u003c/strong\u003e: A computer program that sends a request to another program for data or services (e.g., a web browser is a client that sends requests to a web server).\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eServer or Web Server\u003c/strong\u003e: A computer program or device that uses HTTP to distribute information to a client.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eInternet Protocol (IP) Address\u003c/strong\u003e: A set of numbers separated by periods that uniquely identifies a device on the Internet.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003ePort number\u003c/strong\u003e: Part of the addressing information used to identify the sender/receiver of requests at an IP address (e.g., 43 is the port number with this IP address: 198.185.159.145:43).\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eInternet Service Provider (ISP)\u003c/strong\u003e: A company that provides access to the Internet and assigns an IP address to the connecting device.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eHypertext Transfer Protocol (HTTP)\u003c/strong\u003e: A protocol that defines how requests are formatted, transmitted and processed between web clients and web servers.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eDomain Naming System (DNS) Servers\u003c/strong\u003e: The \"address book\" of the Internet; servers that maintain all domain names and translate them to Internet Protocol (IP) addresses.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eWeb Resource\u003c/strong\u003e: The target of a web address; Examples of web resources include files, documents, images, videos, stylesheets, scripts.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eAdditional Resources\u003c/h4\u003e\r\n\u003cp\u003eTo further explore any of these concepts, visit the following articles linked in this lesson:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Client%E2%80%93server_model\"\u003eWeb Server\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Client_(computing)\"\u003eClient\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/IP_address\"\u003eIP Address\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Internet_service_provider\"\u003eInternet Service Provider (ISP)\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\"\u003eHypertext Transfer Protocol (HTTP)\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Domain_Name_System\"\u003eDomain Naming System (DNS)\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eUniform Resource Locator (URL)\u003c/h4\u003e\r\n\u003cp\u003eAs we discussed in the previous lesson, when you navigate to http://www.moringaschool.com/, your browser makes a request to a web server. One of the most important parts of that request is the address you're visiting. That address is technically called the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eURL\u003c/strong\u003e, short for\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eUniform Resource Locator\u003c/strong\u003e, or\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eURI\u003c/strong\u003e, short for\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eUniform Resource Identifier\u003c/strong\u003e. (The difference is largely semantics.) In this lesson, we'll explore the URL in detail.\u003c/p\u003e\r\n\u003ch5\u003eRequired URL elements\u003c/h5\u003e\r\n\u003cp\u003eSome elements must be included in the URL for a request to be successful. Here is an example of a URL.\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e http://www.moringaschool.com/about\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eLet us break it down to see each individual element.\u003c/p\u003e\r\n\u003ch5\u003e1. Scheme\u003c/h5\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003escheme\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003edefines how the client locates or acts upon the requested resource. In our example, the client will make a request using the _http://_ scheme. Other schemes include _ftp_, _mailto_, and _file_. The scheme is always followed by a colon; for the http scheme, a colon and two slashes (://).\u003c/p\u003e\r\n\u003ch5\u003e2. Host\u003c/h5\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ehost\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eprovides the details of where the requested resource is located. The host in a URL is either the domain name for the IP address or the IP address itself. In our example, the host is _www.moringaschool.com_.\u003c/p\u003e\r\n\u003ch5\u003e3.Path\u003c/h5\u003e\r\n\u003cp\u003eThe path consists of one or more segments separated by slashes and provides the name for identifying the resource requested. In our example, the path indicates the resource: _/about_. This directs to the _About_ page of the Moringa school website.\u003c/p\u003e\r\n\u003ch5\u003eOptional URL elements\u003c/h5\u003e\r\n\u003cp\u003eNot all elements in a URL are required. Here are two that are optional.\u003c/p\u003e\r\n\u003ch5\u003e1. ? Query\u003c/h5\u003e\r\n\u003cp\u003eThere may be times where the URL contents must provide additional details for a resource to be identified.\u003c/p\u003e\r\n\u003cp\u003eFor example, if we use the search functionality on _https://www.python.org_, the server will need to know the input that we enter in order to know what search results to return. When we enter \"python3\" as our search parameter and press \"Search\", the request is made to this URL: _https://www.python.org/search/?q=python3_\u003c/p\u003e\r\n\u003cp\u003eAfter the path in the URL, we see a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e?\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esymbol which indicates the beginning of a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003equery string\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eYou'll see our search parameter has a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ekey\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eof _search_ and a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003evalue\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eof _internet_. Query parameters are separated by the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026amp;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esymbol when there is more than one.\u003c/p\u003e\r\n\u003cp\u003eWith this information, the server will use the value to query the database for only the lessons that have the term \"internet\" in them.\u003c/p\u003e\r\n\u003ch5\u003e2. # Fragment\u003c/h5\u003e\r\n\u003cp\u003eAnother optional URL element is called a fragment.\u003c/p\u003e\r\n\u003cp\u003eHere is an example of a URL containing a fragment:\u003c/p\u003e\r\n\u003cp\u003e_https://docs.python.org/3.6/tutorial/#the-python-tutorial_\u003c/p\u003e\r\n\u003cp\u003eFragments begin with a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e#\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esymbol and contain information that's typically processed by the client, rather than the server. In this example, \"the-python-tutorial\" is the id of a div in the HTML document that is returned. The HTML page is extremely long but by adding the fragment, the browser will position the display of the page precisely at that element when displayed.\u003c/p\u003e\r\n\u003cp\u003eIf you remove the fragment, the position returns to the default top of the document.\u003c/p\u003e\r\n\u003ch4\u003eTerminology\u003c/h4\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eUniform Resource Identifier (URI)/Uniform Resource Locator (URL)\u003c/strong\u003e: The web address which specifies the location of the requested web resources.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eScheme\u003c/strong\u003e: The part of the URL that indicates the protocol to be used in communication (e.g. http://).\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eHost\u003c/strong\u003e: The part of the URL that contains the domain name.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003ePath\u003c/strong\u003e: The part of the URL that contains the resource name.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eQuery string\u003c/strong\u003e: An optional part of a URL that contains parameters for querying a database; begins with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e?\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esymbol; often used in a search request.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eFragment\u003c/strong\u003e: An optional part of a URL that contains details for where the browser should display the information (e.g. on a particular div).\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eAdditional Resources\u003c/h4\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Uniform_Resource_Locator\"\u003eUniform Resource Locator\u003c/a\u003e\u003c/p\u003e\r\n\u003ch3\u003eHTTP Requests\u003c/h3\u003e\r\n\u003cp\u003eLet's take a closer look at HTTP. In this lesson, we'll examine the organization and data of HTTP requests.\u003c/p\u003e\r\n\u003ch4\u003eHTTP request-response cycle\u003c/h4\u003e\r\n\u003ch5\u003eClient HTTP Requests\u003c/h5\u003e\r\n\u003cp\u003eWhen the client triggers a new HTTP request, the request includes four elements that will be sent to the server:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eMethod\u003c/li\u003e\r\n\u003cli\u003ePath\u003c/li\u003e\r\n\u003cli\u003eHeaders\u003c/li\u003e\r\n\u003cli\u003eBody\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch5\u003eHTTP Method\u003c/h5\u003e\r\n\u003cp\u003eHTTP methods, also known as _verbs_, indicate the kind of action that the client is requesting be done in the server. The two most frequently used methods are the ones that are supported by all browsers:\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eGET\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ePOST\u003c/strong\u003e. A request with a GET method indicates that a resource is being _retrieved_. A request with a POST method indicates that the resource is being _changed_ - _possibly added_, _updated_ or _deleted_.\u003c/p\u003e\r\n\u003cp\u003eAn example of a GET request would be when we navigate to the Moringa School immersive page. The client requests the resource at the URL, _http://www.moringaschool.com/_ and the / resource(s) is retrieved.\u003c/p\u003e\r\n\u003cp\u003eAn example of a POST request would be when we click submit on a form to add our email to a mailing list. The message would post data to the server by adding our information to the mailing list resource.\u003c/p\u003e\r\n\u003ch5\u003ePath\u003c/h5\u003e\r\n\u003cp\u003eThe path identifies the web resource that should be retrieved (GET) or acted upon (POST). In our example, _http://www.moringaschool.com/_, the resource _/immersive_ is known as the path.\u003c/p\u003e\r\n\u003ch5\u003eHeaders\u003c/h5\u003e\r\n\u003cp\u003eRequest headers are part of the request message protocol and provide the server with more information about the client, the server and the request.\u003c/p\u003e\r\n\u003cp\u003eHere are some examples of header fields that are included in a request message:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eHost: This is the host or domain name of the server. In our example: www.moringaschool.com.\u003c/li\u003e\r\n\u003cli\u003eUser-agent: This is the software acting on behalf of the user to make the request; in our example, this would be our browser (Chrome, Firefox, etc)\u003c/li\u003e\r\n\u003cli\u003eAccept-language: This includes the human languages that are acceptable for the response.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003eBody\u003c/h5\u003e\r\n\u003cp\u003eThe body contains data beyond the contents of the URL and headers that needs to be transmitted to the server. For example, if a user submits a form with data, the resulting POST request would need to include all of the data inputted so the server could store the information. This data is delivered in the body of the request.\u003c/p\u003e\r\n\u003ch4\u003eTerminology\u003c/h4\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eHTTP Method\u003c/strong\u003e: The kind of action that the client is requesting to be done in the web server, also known as a verb. Most frequently used HTTP methods: GET and POST.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eGET\u003c/strong\u003e: A request method that retrieves information from the server but does not change anything on the server. Example: request to see a homepage for a site.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003ePOST\u003c/strong\u003e: A request method that acts upon the resource by adding, updating or deleting information on the server. Example: submitting a form to join a mailing list which adds your name to the list.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eHTTP Request Header\u003c/strong\u003e: The first lines of an HTTP request message that include information about the client, server and the request.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eHTTP Request Body\u003c/strong\u003e: Data that needs to be transmitted to the server in the HTTP request message (like data from a submitted form).\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eAdditional Resources\u003c/h4\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/List_of_HTTP_header_fields\"\u003eList of all HTTP Header Fields\u003c/a\u003e\u003c/p\u003e\r\n\u003ch4\u003eHTTP Responses\u003c/h4\u003e\r\n\u003cp\u003eAfter a server receives an HTTP request, it will respond with a message that consists of the following three elements:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eStatus\u003c/li\u003e\r\n\u003cli\u003eHeaders\u003c/li\u003e\r\n\u003cli\u003eBody\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch5\u003eStatus\u003c/h5\u003e\r\n\u003cp\u003eThe first line of a response message is the status which includes a status code and reason phrase. The HTTP status code is a three-digit number that indicates how the request was processed (or not). Each code is also accompanied by a reason phrase which is not read by the client but is intended for humans to provide a brief description of the status code.\u003c/p\u003e\r\n\u003cp\u003eBelow is a list of the five status code classes determined by the first digit of the code. This lesson shows the most common codes. To see a complete list, visit HTTP Status Codes.\u003c/p\u003e\r\n\u003ch5\u003e1xx Informational\u003c/h5\u003e\r\n\u003cp\u003eStatus codes beginning with 1 indicate the request was received. This class of code is rarely used.\u003c/p\u003e\r\n\u003ch5\u003e2xx Success\u003c/h5\u003e\r\n\u003cp\u003eStatus codes beginning with 2 indicate the request was received and handled successfully.\u003c/p\u003e\r\n\u003cp\u003eExamples\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e200\u003c/strong\u003e: OK\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e201\u003c/strong\u003e: Created\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003e3xx Redirection\u003c/h5\u003e\r\n\u003cp\u003eStatus codes beginning with 3 indicate that additional action is required to complete processing the request.\u003c/p\u003e\r\n\u003cp\u003eExamples\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e301\u003c/strong\u003e: Moved permanently\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e302\u003c/strong\u003e: Moved temporarily\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003e4xx Client errors\u003c/h5\u003e\r\n\u003cp\u003eStatus codes beginning with 4 indicate that something was wrong about the request.\u003c/p\u003e\r\n\u003cp\u003eExamples\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e400\u003c/strong\u003e: Bad Request (the request used invalid syntax)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e401\u003c/strong\u003e: Unauthorized (you have to log in)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e403\u003c/strong\u003e: Forbidden (you're logged in, but not allowed to make this request)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e404\u003c/strong\u003e: Not Found\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e422\u003c/strong\u003e: Unprocessable (the request had valid syntax but the instructions it contained were invalid)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003e5xx Server errors\u003c/h5\u003e\r\n\u003cp\u003eStatus codes beginning with 5 indicate that something went wrong on the server side, such as a bug in the code or a server that went down.\u003c/p\u003e\r\n\u003cp\u003eExamples\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e500\u003c/strong\u003e: Internal Server Error (usually a bug in the server code)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e502\u003c/strong\u003e: Bad Gateway (the server sent the request to another server and got an invalid response)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e503\u003c/strong\u003e: Service Unavailable (the server is overloaded or down for maintenance)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003eHeaders\u003c/h5\u003e\r\n\u003cp\u003eLike request headers, response headers include additional protocol providing more details about the HTTP response.\u003c/p\u003e\r\n\u003cp\u003eSome examples of response header fields include:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eServer: The name of the server where the response is coming from.\u003c/li\u003e\r\n\u003cli\u003eContent-Language: The human language(s) of the content.\u003c/li\u003e\r\n\u003cli\u003eContent-Length: How long the response body is in 8-bit bytes.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003eBody\u003c/h5\u003e\r\n\u003cp\u003eThe response body includes all of the content for the resource requested. You'll often hear it referred to as the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003epayload\u003c/strong\u003e. When we issue a GET request for _http://www.moringaschool.com/_, we expect the body to include an HTML document with the table of contents. This resource may need additional resources such as images, CSS, script files, etc. For each resource, a new request is made by the client and a new response is issued for the resource from the server.\u003c/p\u003e\r\n\u003cp\u003eOnce there is a response to all of the requests, the / resource is displayed in the browser.\u003c/p\u003e\r\n\u003ch4\u003eTerminology\u003c/h4\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eStatus code\u003c/strong\u003e: First line of the response message from the server consisting of a three-digit number indicating the status of the request. Example: 200 indicates that the request was successfully processed.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eStatus reason\u003c/strong\u003e: The human language interpretation of the status code, not read by the client but intended for humans.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003ePayload\u003c/strong\u003e: The data that was requested in the original request message that is not protocol. Example: the payload for a request for the main page of a website would be the actual HTML document content.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eOverview\u003c/h4\u003e\r\n\u003cp\u003eStatus Codes\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003e1xx\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eInformational\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003e2xx\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eSuccess\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003e3xx\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eRedirection\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003e4xx\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eClient errors\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003e5xx\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eServer errors\u003c/p\u003e\r\n\u003cp\u003eAdditional Resources Complete List of HTTP Status Codes may be found\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\r\n\u003ch2\u003eSetting up Flask\u003c/h2\u003e\r\n\u003cp\u003eThe most convenient way to install Flask is using a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003evirtual environment\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eA virtual environment is a private copy of the Python interpreter that allows us to install packages privately. This means all the third party modules will only be available in that environment. This is very useful because it prevents the packages from cluttering our system and also prevents conflicts.\u003c/p\u003e\r\n\u003ch3\u003eCreating a Virtual Environment.\u003c/h3\u003e\r\n\u003cp\u003eLet us create a simple\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eHello World\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eapplication.\u003c/p\u003e\r\n\u003cp\u003eCreate a new directory and name it\u003cspan\u003e \u003c/span\u003e\u003cem\u003eHello-Flask\u003c/em\u003e. Inside it let us create a new virtual environment for our application so that we can install Flask.\u003cspan style=\"font-size: 1rem;\"\u003e\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003ePython3.6 comes with a tool called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evenv\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat allows us to create a virtual environments.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 -m venv --without-pip virtual\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAbove we used the tool to create a virtual environment and called it\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evirtual\u003c/code\u003e. We can give our virtual environment any name provided it is easy to remember.\u003c/p\u003e\r\n\u003ch4\u003eActivating and Deactivating the virtual environment\u003c/h4\u003e\r\n\u003cp\u003eTo activate the virtual environment we run the following command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ \u003cspan class=\"nb\"\u003esource\u003c/span\u003e virtual/bin/activate\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe know the virtual environment is active when the terminal responds with the name of your virtual environment before your computer's name. For the name\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evirtual\u003c/code\u003e, the terminal would return this:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e james@james-P43SJ:~/Desktop/exerciseFiles/Hello-Flask$\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNext, we are going to download the latest version of pip in virtual our environment. We will be using pip to install flask and any other packages that we will need.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ curl https://bootstrap.pypa.io/get-pip.py | python\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eTo deactivate we simply use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edeactivate\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ekeyword\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e james@james-P43SJ:~/Desktop/exerciseFiles/Hello-Flask $ deactivate\r\n\r\njames@james-P43SJ:~/Desktop/exerciseFiles/Hello-Flask $\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003eInstalling Flask\u003c/h4\u003e\r\n\u003cp\u003eLet us first get back to our virtual environment with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esource virtual/bin/activate\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ \u003cspan class=\"nb\"\u003esource\u003c/span\u003e virtual/bin/activate\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow, in the virtual environment, we will install Flask to the project using the following command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ pip install flask\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we use the pip tool to install Flask to our project. In the next lesson, we will create a basic Flask application that displays\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eHello World\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto the browser.\u003c/p\u003e\r\n\u003c/div\u003e","exportId":"weekend-welcome-to-flask-the-internet-virtual-environment"},{"id":432,"title":"Weekend: Basic Flask App","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eBasic Application Structure\u003c/h2\u003e\r\n\u003cp\u003eInside the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eHello-Flask\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eapplication create a new file named\u003cspan\u003e \u003c/span\u003e\u003cem\u003ehello.py\u003c/em\u003e.\u003c/p\u003e\r\n\u003ch3\u003eInitialization\u003c/h3\u003e\r\n\u003cp\u003eAdd the following code in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003ehello.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAll flask applications must create an application instance.\u003c/p\u003e\r\n\u003cp\u003eThe web server passes all the requests it receives to this object for handling. This uses a protocol called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eWeb Server Gateway Interface\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003efrom the flask module we import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlask\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass. We then create an instance of that class called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e, by passing in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable.\u003c/p\u003e\r\n\u003cp\u003eFlask uses the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable to determine the root path for the application. Flask locates resources for the application relative to that path.\u003c/p\u003e\r\n\u003ch3\u003eRoutes and view functions\u003c/h3\u003e\r\n\u003cp\u003eBrowsers send requests to the web servers which in turn send the request to the application instance. The application instance needs to know what code to execute depending on the request received.\u003c/p\u003e\r\n\u003ch4\u003eDefining a route.\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e.....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRoutes in flask are defined using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.route()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edecorator. Here we have defined the route for the index page.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e.....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u0026lt;h1\u0026gt; Hello World \u0026lt;/h1\u0026gt;'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe function\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eView Function\u003c/strong\u003e. It is the handler for the route defined above. Any time a request is sent to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e/\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eroute of our application the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex\u003c/code\u003e function will be executed.\u003c/p\u003e\r\n\u003cp\u003eThe return value for a view function is called a response, this is what a client or web browser will receive. Here we are returning a HTML\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eh1\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eelement that has the string\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eHello World\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch4\u003eSetting up a server\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e......\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edebug\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFlask has an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erun()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that launches the flask development server. First we check if the script is run directly. During development it is advisable to have the debug mode set to True. This activates the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003edebugger\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ereloader\u003c/strong\u003e\u003c/p\u003e\r\n\u003cp\u003eLet us run the application in our terminal\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evirtual\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003ehello\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\r\n\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eRunning\u003c/span\u003e \u003cspan class=\"n\"\u003eon\u003c/span\u003e \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e//\u003c/span\u003e\u003cspan class=\"mf\"\u003e127.0\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mf\"\u003e0.1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5000\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePress\u003c/span\u003e \u003cspan class=\"n\"\u003eCTRL\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eC\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003equit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eRestarting\u003c/span\u003e \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003estat\u003c/span\u003e\r\n \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eDebugger\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eactive\u003c/span\u003e\u003cspan class=\"err\"\u003e!\u003c/span\u003e\r\n \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eDebugger\u003c/span\u003e \u003cspan class=\"n\"\u003ePIN\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e******\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we start up our web server and see our application is running on\u003cem\u003ehttp://127.0.0.1:5000/\u003c/em\u003e. When we open this we are greeted by a large bold\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eHello World\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etext.\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"weekend-basic-flask-app"}]},{"id":60,"name":"Week 2","status":"completed","unlockDate":null,"prereqs":[59],"requirement":"all","sequential":false,"exportId":"idf12c4c8581d0fcd07c325f4572183a4","items":[{"id":2109,"title":"Monday: Introduction and Objectives","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eOur\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eHello World\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eproject has given us a quick glimpse of how flask works. Let us dive in deeper to see how we can use flask to build larger and more dynamic applications.\u003c/p\u003e\r\n\u003ch3\u003eWatchlist Movie Review Website\u003c/h3\u003e\r\n\u003cp\u003eWe will be building a movie review website using flask. The web application will allow a user to find a movie, add a review to the movie and also add comments to reviews.\u003c/p\u003e\r\n\u003cp\u003eBy the end of the week we will have learned:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eWhat a template is and how to create one.\u003c/li\u003e\r\n\u003cli\u003eHow to add and manipulate content of a flask template.\u003c/li\u003e\r\n\u003cli\u003eRouting with dynamic content.\u003c/li\u003e\r\n\u003cli\u003eAdding Bootstrap to our application\u003c/li\u003e\r\n\u003cli\u003eCreate Error pages\u003c/li\u003e\r\n\u003cli\u003eWork with API to retrieve data.\u003c/li\u003e\r\n\u003cli\u003eHow to work with web forms.\u003c/li\u003e\r\n\u003cli\u003eUsing the request Object.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003e\u003cstrong\u003eIndependent Project Objectives\u003c/strong\u003e\u003c/h3\u003e\r\n\u003cp\u003eAt the end of the week you will submit a project that will be reviewed for the following objectives:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eTest have complete coverage of the behaviours being tested.\u003c/li\u003e\r\n\u003cli\u003eAll tests are passing.\u003c/li\u003e\r\n\u003cli\u003eCorrect implementation of two models; news source and news article.\u003c/li\u003e\r\n\u003cli\u003eYour project follows the proper folder structure.\u003c/li\u003e\r\n\u003cli\u003ePresence of a specification markdown that lists all the projects specification.\u003c/li\u003e\r\n\u003cli\u003eGit documentation follows the best practices(detailed commit messages and a well-formatted README)\u003c/li\u003e\r\n\u003cli\u003eThe project is polished and in a portfolio-quality state.\u003c/li\u003e\r\n\u003cli\u003eThe project is deployed\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e \u003c/p\u003e","exportId":"monday-introduction-and-objectives"},{"id":433,"title":"Monday: Templates; if Statements","type":"WikiPage","indent":0,"locked":false,"requirement":"must_view","completed":true,"content":"\u003ch3\u003eCreating the Application.\u003c/h3\u003e\r\n\u003cp\u003eLet us begin by creating our application. Create a new directory and call it\u003cspan\u003e \u003c/span\u003e\u003cem\u003eWatchlist\u003c/em\u003e. Inside the project initialize git. Create a virtual environment inside our directory and name it virtual and activate it.\u003c/p\u003e\r\n\u003ch4\u003eApplication Structure\u003c/h4\u003e\r\n\u003cp\u003eFor the purpose of uniformity we will be working with the following folder structure.\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003ewatchlist/\r\n|\r\ngit \r\n|\r\napp/\r\n    |-app/static/ # Stores all static files CSS,Javascript ,Images\r\n    |\r\n    |-app/templates/ # Stores all our template files.\r\n    |\r\n    |-app/__init__.py # Where we will initialize our application.\r\n    |\r\n    |-app/views.py # Where we will create all our view functions.\r\n    |\r\n    |-app/error.py # Where we will create handlers for error pages.\r\n    |\r\n    |-app/config.py # Where we will store our app configurations.\r\n|\r\nvirtual/ # Our virtual Environment\r\n|\r\n.gitignore\r\n|\r\nREADME.md\r\n|\r\nrun.py # File that will run our application\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003e\u003cem\u003e.gitignore\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003evirtual/\r\n*.pyc\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eInside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003e.gitignore\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile we will exclude our virtual environment and also we will exclude all the compiled Python files\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e*.pyc\u003c/code\u003e\u003c/p\u003e\r\n\u003ch2\u003eCreate First Template\u003c/h2\u003e\r\n\u003cp\u003eFlask uses Jinja 2 as a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etemplate language\u003c/strong\u003e. A template language is a simple format that is used to automate the creation of documents.\u003c/p\u003e\r\n\u003cp\u003eLet us first install flask into our virtual environment\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNext, let us initialize our application.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Initializing application\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlask\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from flask module and use it to create an app instance. We pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable.\u003c/p\u003e\r\n\u003cp\u003eWe also import our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile from the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efolder. This will allow us to create views.\u003c/p\u003e\r\n\u003cp\u003eLet us now create our index page view function.\u003cspan\u003e \u003c/span\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Views\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erender_template()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction from Flask. This function takes in the name of a template file as the first argument. It then automatically searches for the template file in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/templates/\u003c/em\u003e\u003cspan\u003e \u003c/span\u003esub directory and loads it.\u003c/p\u003e\r\n\u003cp\u003eWe then import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance from the app folder.\u003c/p\u003e\r\n\u003cp\u003eWe created a route decorator\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@app.route('/')\u003c/code\u003e, and defined the view function\u003ccode\u003eindex()\u003c/code\u003e. As the response, we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erender_template()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex.html\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile which we will create.\u003c/p\u003e\r\n\u003cp\u003eInside the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/templates/\u003c/em\u003e\u003cspan\u003e \u003c/span\u003esub directory create the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile and add the following:\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Hello World \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let us run this application. Inside your root directory in the\u003cspan\u003e \u003c/span\u003e\u003cem\u003erun.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile add the following code.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erun.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edebug\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we import the app instance. We then check if the script is run directly and then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.run()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to launch our server. We pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edebug = True\u003c/code\u003eargument to allow us to run on debug mode so that we can easily track errors in our application.\u003c/p\u003e\r\n\u003cp\u003eNow we can run the application and see how it looks on our browser\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 run.py\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eVariables\u003c/h3\u003e\r\n\u003cp\u003eIn Jinja, 2 variables can be passed in and placed in predefined locations in our template file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ message }} \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe remove the text and add a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003evariable block\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat will be replaced with dynamic content from flask. Variable blocks are defined with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{}}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edouble curly braces and a variable name placed inside.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Views\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Hello World'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function to add a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emessage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable. We then pass the variable as an argument in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erender_template()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction. The first\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emessage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eon the left of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e=\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esign, represents the variable in the template. While the one to the right represents the variable in our view function.\u003c/p\u003e\r\n\u003cp\u003eWhen we run the application we see the message displayed in our browser.\u003c/p\u003e\r\n\u003ch3\u003eDynamic routes\u003c/h3\u003e\r\n\u003cp\u003eSome URLs might have dynamic sections in them. For example, consider\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehttps://www.github.com/\u0026lt;username\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethis loads a user's profile according to the username passed in.\u003c/p\u003e\r\n\u003cp\u003eFlask also supports this using a special syntax inside the route decorator.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/\u0026lt;movie_id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View movie page function that returns the movie details page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add a new route that have a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function. The part in the angle brackets\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026lt;\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis dynamic. And any route mapped to this will be passed. This returns a response of a\u003cspan\u003e \u003c/span\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003eBy default, dynamic parts are rendered as strings but they can be transformed to be of any type\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/\u0026lt;int:movie_id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View movie page function that returns the movie details page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe changed the dynamic part to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026lt;int:movie_id\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto transform content to integer.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etemplates/movie.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Hello Movie {{ id }} \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe run this application and in our browser URL we navigate to the following address.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehttp://127.0.0.1:5000/movie/1234\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eWe should see the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eHello Movie 1234\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etext displayed in our browser window.\u003c/p\u003e\r\n\u003ch3\u003eConfigurations\u003c/h3\u003e\r\n\u003cp\u003eOur applications are going to need several configurations to fit our needs.\u003c/p\u003e\r\n\u003ch4\u003eCreating Configuration classes\u003c/h4\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    General configuration parent class\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\r\n\r\n\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProdConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Production  configuration child class\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Config: The parent configuration class with General configuration settings\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Development  configuration child class\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Config: The parent configuration class with General configuration settings\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eDEBUG\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we created three classes. The parent\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass contains configurations that are used in both production and development stages. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eProdConfig\u003c/code\u003esubclass contains configurations that are used in production stages of our application and inherits from the parent\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDevConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esubclass contains configurations that are used in development stages of our application and inherits from the parent\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003eInside\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDevConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esubclass, we add\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDEBUG = True;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethis enables debug mode in our application.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.config\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Initializing application\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Setting up configuration\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo make our application use the new configurations, we import our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDevConfig \u003c/code\u003esubclass in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile. We then use \u003ccode\u003eapp.config.from_object()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to set up configuration and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDevConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esubclass.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erun.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe now remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edebug = True\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument from our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.run()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebecause the debug mode has been enabled in the configuration file.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point at https://github.com/mbuthiya/watchlist/tree/01-create-basic-template\u003c/p\u003e\r\n\u003ch2\u003eControl Flows in Jinja templates\u003c/h2\u003e\r\n\u003cp\u003eJinja templates allow us to add some logic to our application.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Home - Welcome to The best Movie Review Website Online'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe want to pass in a title to our templates instead of defining them inside the html structure. We create a variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etitle\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass it into our templates.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etemplates/index.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003emeta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"utf-8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% if title %}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ title }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% else %}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Welcome to the best Movie Review website \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% endif %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add HTML structure to our template. Inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026lt;head\u0026gt;\u0026lt;/head\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewe have a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003econtrol block\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewith an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement.\u003c/p\u003e\r\n\u003cp\u003eUnlike the variable blocks defined with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{}}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econtrol blocks are defined using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{% %}\u003c/code\u003e. They are used to declare functions,loops and if statements.\u003c/p\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement checks if we have provided a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etitle\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable for the template. In the chance that you forget to provide a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etitle\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto your template the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econtrol block is executed and a default title is used instead.\u003c/p\u003e\r\n\u003ch4\u003eTask\u003c/h4\u003e\r\n\u003cp\u003eFor practice repeat the process we have gone through to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie.html\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epage displaying the movie id in the title.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/02-control-flow-html-pages\u003c/p\u003e","exportId":"monday-templates-if-statements"},{"id":434,"title":"Monday: Movie APIs; Macros","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eMovie API\u003c/h2\u003e\r\n\u003cp\u003eWe are going to get our movie data through\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://www.themoviedb.org/\"\u003eThe Movie Database\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eAPI. Head on to https://www.themoviedb.org/ and sign up for an account.\u003c/p\u003e\r\n\u003ch3\u003eCreating an API key\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eFirst go to your accounts settings page\u003cimg src=\"https://www.themoviedb.org/assets/static_cache/da34d170e2ffdb3db4a317314e64b186/images/api-create-1.png\" alt=\"Account settings\"\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eThen click on the API menu on the left\u003cimg src=\"https://www.themoviedb.org/assets/static_cache/41b35724525a13c05bb1d63fe7af7621/images/api-create-2.png\" alt=\"Api Menu\"\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003eClick on create an API Key to generate a new API key\u003cimg src=\"https://www.themoviedb.org/assets/static_cache/af031c5c6f6787caa956d374c1c3ce9b/images/api-create-3.png\" alt=\"Generate api key\"\u003e\n\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eStoring API keys\u003c/h3\u003e\r\n\u003cp\u003eWe will create another configuration file that will store our API key. Inside our root folder create a new directory\u003cspan\u003e \u003c/span\u003e\u003cem\u003einstance\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand inside it create a new\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. This is where we will store secret objects that we do not want to display to anyone.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003einstance/config.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eMOVIE_API_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u0026lt;Your Api Key\u0026gt;'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then include this folder inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.gitignore\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile\u003c/p\u003e\r\n\u003cp\u003e_.gitignore_\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003evirtual/\r\n*.pyc\r\ninstance/\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eNow we have to connect our application with this new configuration file.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.config\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Initializing application\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003einstance_relative_config\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Setting up configuration\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_pyfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'config.py'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003eWe pass in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einstance_relative_config\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich allow us to connect to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einstance/\u003c/code\u003efolder when the app instance is created.\u003c/p\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.config.from_pyfile('config.py')\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econnects to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfig.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile and all its contents are appended to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.config\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe then store the movie base URL inside the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp/config\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    General configuration parent class\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eMOVIE_API_BASE_URL\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'https://api.themoviedb.org/3/movie/{}?api_key={}'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto represent sections in the URL that will be replaced with actual values\u003c/p\u003e\r\n\u003ch3\u003eAPI Requests\u003c/h3\u003e\r\n\u003cp\u003eWe will then create\u003cspan\u003e \u003c/span\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile inside our app folder. This is where we will write code to make requests to our API.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Getting api key\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the app instance and from it we get the API key from the config object.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here\u003c/p\u003e\r\n\u003cp\u003ehttps://github.com/mbuthiya/watchlist/tree/03-movie-list-api\u003c/p\u003e\r\n\u003ch2\u003eMovie Class\u003c/h2\u003e\r\n\u003cp\u003eWe now need to create a Movie class that will allow us to create movie instances from the response from the API.\u003c/p\u003e\r\n\u003cp\u003eCreate a new folder inside the app and name it\u003cspan\u003e \u003c/span\u003e\u003cem\u003emodels\u003c/em\u003e\u003cspan\u003e \u003c/span\u003einside it create a new file\u003cspan\u003e \u003c/span\u003e\u003cem\u003emovie.py\u003c/em\u003e. We also create an empty\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einside the folder.\u003c/p\u003e\r\n\u003cp\u003eThis will make the folder a python package that can be imported to other packages outside it\u003c/p\u003e\r\n\u003cp\u003eWe then create test case file for the class inside our app folder we create a\u003cspan\u003e \u003c/span\u003e\u003cem\u003emovie_test.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emovie_test.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003emodels\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieTest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Test Class to test the behaviour of the Movie class\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Set up method that will run before every Test\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1234\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Python Must Be Crazy'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'A thrilling new Python Series'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003cspan\u003ehttps://image.tmdb.org/t/p/w500/\u003c/span\u003ekhsjha27hbs'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mf\"\u003e8.5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e129993\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_instance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eisinstance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003ccode\u003eUnittest\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule and the movie module. We then get the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003eclass which we will create.\u003c/p\u003e\r\n\u003cp\u003eWe then create a test class and inside we define a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod. This will instantiate our Movie class to make the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself.new_movie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eobject. We pass in six arguments.\u003c/p\u003e\r\n\u003cp\u003eWe then define a test case\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_instance\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat uses the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eisinstance()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that checks if the object\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself.new_movie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis an instance of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003eMake sure the test is failing. We then can add code to make the code work\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels/movie.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Movie class to define Movie Objects\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\u003cspan class=\"p\"\u003e,poster\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.poster\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u003cspan\u003ehttps://image.tmdb.org/t/p/w500/\u003c/span\u003e'\u003c/span\u003e\u003cspan class=\"o\"\u003e+ poster\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we define a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and then we create an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod and we pass in the six parameters we want inside our movie objects.\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e1. Title - The name of the movie\r\n2. Overview - A short description on the movie\r\n3. image- The poster image for the movie\r\n4. vote_average - Average rating of the movie\r\n5. vote_count - How many people have rated the movie\r\n6. id - The movie id\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eTask: For practice write a test that confirms that the object is instantiated correctly.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/04-create-movie-class\u003c/p\u003e\r\n\u003ch2\u003eCreating First API call\u003c/h2\u003e\r\n\u003cp\u003eWe now need to get data from our API. We insert the following code in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eurllib.request\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nn\"\u003ejson\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst, we handle the imports. We import the flask application instance. We then import the Python\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurllib.request\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule that will help us create a connection to our API URL and send a request and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ejson\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodules that will format the JSON response to a Python dictionary.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e....\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# Getting api key\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Getting the movie base url\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"MOVIE_API_BASE_URL\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then access our app configuration objects. We access the configuration objects by calling\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.config['name_of_object']\u003c/code\u003e. We get the API key and the movie URL.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecategory\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that gets the json response to our url request\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eget_movies_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecategory\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003eurllib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eurlopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movies_url\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eget_movies_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eget_movies_response\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eloads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movies_data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies_response\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'results'\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003emovie_results_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies_response\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'results'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprocess_results\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_results_list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in a movie category as an argument.\u003c/p\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.format()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod on the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebase_url\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the movie category and the api_key. this will replace the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecurly brace placeholders in the base_url with the category and api_key respectively.\u003c/p\u003e\r\n\u003cp\u003eThis creates\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies_url\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas the final URL for our API request.\u003c/p\u003e\r\n\u003cp\u003eWe then use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewith\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas our context manager to send a request using the\u003ccode\u003eurllib.request.urlopen()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies_url\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas an argument and sends a request as\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eread()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to read the response and store it in a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies_data\u003c/code\u003evariable.\u003c/p\u003e\r\n\u003cp\u003eWe then convert the JSON response to a Python dictionary using json.loads function and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies_data\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable.\u003c/p\u003e\r\n\u003cp\u003eWe then check if the response contains any data. For us to better understand what is happening, we need first to see what the data looks like. We achieve this by running the base URL(https://api.themoviedb.org/3/movie/popular?api_key=\u0026lt;your_API_KEY\u0026gt;) in our browser to get json response as shown in the image below:\u003c/p\u003e\r\n\u003cp\u003e\u003cimg\u003e\u003cimg src=\"viewer/files/watchlist%20json.png?canvas_download=1\u0026amp;canvas_qs_wrap=1\" alt=\"watchlist_json\" data-api-endpoint=\"https://moringaschool.instructure.com/api/v1/courses/6/files/6588\" data-api-returntype=\"File\"\u003e \u003c/p\u003e\r\n\u003cp\u003eAs you can see from the json response above, we have a property  \u003cem\u003eresult \u003c/em\u003ewhich is a list that contains the movie objects. This property is what we use to check if the response contains any data.\u003c/p\u003e\r\n\u003cp\u003eIf it does we call a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprocess_results()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in the list of dictionary objects and returns a list of movie objects .\u003c/p\u003e\r\n\u003cp\u003eWe then return\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_results\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich is a list of movie objects.\u003c/p\u003e\r\n\u003ch3\u003eProcessing Results\u003c/h3\u003e\r\n\u003cp\u003eWe need to create a function that will process the results and create movie objects from the elements that we need.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eprocess_results\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_list\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function  that processes the movie result and transform them to a list of Objects\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        movie_list: A list of dictionaries that contain movie details\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Returns :\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        movie_results: A list of movie objects\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_list\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'id'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'original_title'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eoverview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'overview'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eposter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'poster_path'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003evote_average\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'vote_average'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003evote_count\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'vote_count'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003emovie_object\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_object\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a function\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprocess_results()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in a list of dictionaries. We create an empty list\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_results\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethis is where we will store our newly created movie objects.\u003c/p\u003e\r\n\u003cp\u003eWe then loop through the list of dictionaries using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod and pass in the keys so that we can access the values.\u003c/p\u003e\r\n\u003cp\u003eSome\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_item\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e's might not have a poster. This will give an error when we are trying to create an object. So we check if the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_item\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ehas a poster then we create the movie object. We use the values we get to create a new movie object then we append it to our empty list\u003c/p\u003e\r\n\u003cp\u003eWe then return the list with movie objects.\u003c/p\u003e\r\n\u003cp\u003eTo get a better sense on how to use The Movie DB api visit the documentation page https://developers.themoviedb.org/3/getting-started/\u003c/p\u003e\r\n\u003ch3\u003eMaking the API call\u003c/h3\u003e\r\n\u003cp\u003eWe can now make the API call to get a particular category of movies\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.request\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Getting popular movie\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'popular'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Home - Welcome to The best Movie Review Website Online'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epopular\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction from the request module. We want to get the popular movie from our API.\u003c/p\u003e\r\n\u003cp\u003eWe create a variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epopular_movies\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhere we call our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"popular\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas an argument. we then pass the result from that function call to our template\u003c/p\u003e\r\n\u003ch2\u003eFor loops\u003c/h2\u003e\r\n\u003cp\u003eNow we need to display our popular movies to our template.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e....\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Popular movie section  --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt; Popular Movies\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e         \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular_movie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;li\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular_movie.title\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e \u0026lt;/body\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e ....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop inside a control block and loop through each movie. We create a list with the movie title.\u003c/p\u003e\r\n\u003cp\u003eYou can now run the application to confirm that the API is working and you should see a list of movies displayed.\u003c/p\u003e\r\n\u003ch4\u003eAdding More Categories\u003c/h4\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Getting popular movie\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'popular'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eupcoming_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'upcoming'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003enow_showing_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'now_playing'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Home - Welcome to The best Movie Review Website Online'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epopular\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eupcoming\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eupcoming_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enow_showing\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enow_showing_movie\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to get two more movie categories\u003cspan\u003e \u003c/span\u003e\u003cem\u003eupcoming movies\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cem\u003enow showing movies\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand then we pass them into our template.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e....\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Popular movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt; Popular Movies\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e         \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular_movie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;li\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular_movie.title\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Upcoming movie  --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt; Upcoming Movies \u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e         \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003eupcoming_movie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003eupcoming\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;li\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eupcoming_movie.title\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Now showing movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt;Now Showing\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e         \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003enow_showing_movie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003enow_showing\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;li\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003enow_showing_movie.title\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNotice as we keep on adding more categories we start repeating our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop control blocks. We can use\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emacros\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eto make our code DRY.\u003c/p\u003e\r\n\u003ch3\u003eMacros\u003c/h3\u003e\r\n\u003cp\u003eMacros are the Jinja equivalent to python functions. It allows us to group blocks of our code's logic that will be reused multiple times.\u003c/p\u003e\r\n\u003cp\u003eCreate a new template file\u003cspan\u003e \u003c/span\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003ethis is where we will store all our macros.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003emacro\u003c/span\u003e \u003cspan class=\"nv\"\u003edisplayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003emovie_list\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie_list\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;li\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.title\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendmacro\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe define our first macro\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplayMovieList()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes one argument which is a list of movie objects. We then loop through the movie objects creating\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026lt;li\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etags to display movie titles.\u003c/p\u003e\r\n\u003cp\u003eWe can now update our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile to use the macro.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'macros.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAt the top of our file we will import our macros html file so that we can use in our document.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'macros.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;body\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Popular movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt; Popular Movies\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003epopular\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Upcoming movie  --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt; Upcoming Movies \u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eupcoming\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Now showing movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt;Now Showing\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003enow_showing\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;/body\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then use the variable blocks to call our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplayMovieList\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in the different movie category lists.\u003c/p\u003e\r\n\u003cp\u003eNow we can run our application code to see if the movie titles are being displayed.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/06-macros\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e \u003c/p\u003e","exportId":"monday-movie-apis-macros"},{"id":435,"title":"Tuesday: Introduction, Template Inheritance; Adding Bootstrap","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eWe have seen how useful templating is and how we can add dynamic information and logic to our templates. Now we will consider how to customize our templates.\u003c/p\u003e\r\n\u003cp\u003eWe will learn how to use Bootstrap framework, How to customize our the look of our templates using CSS and How to add Links to our templates.\u003c/p\u003e\r\n\u003ch2\u003eTemplate Inheritance\u003c/h2\u003e\r\n\u003cp\u003eNotice how every time we create a new template we have to define the HTML structure. In a small application like ours it does not seem like a lot of work. But in a large application with dozens of pages it can be very tedious . Jinja allows for\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etemplate inheritance\u003c/strong\u003e. That is we can inherit some properties of a template in other child (or derived) templates.\u003c/p\u003e\r\n\u003cp\u003eLets see what that looks like. We start by creating a new template file\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003emeta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"utf-8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% if title %}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ title }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% else %}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Welcome to the best Movie Review website \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% endif %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"c\"\u003e\u0026lt;!-- Content block --\u0026gt;\u003c/span\u003e\r\n\r\n        {% block content %}\r\n\r\n        {% endblock%}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a base file with the basic HTML structure. We then Inside the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebody\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etag we have the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblock\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econtrol block that defines elements that can be changed by the derived template.\u003c/p\u003e\r\n\u003cp\u003eWe can create as many blocks as we want to replace in our content. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblock content\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis what we will be replacing in our other templates.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'macros.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first extend our\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile to the top of our index page.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e\u0026lt;!-- Content block --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Popular movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;h3\u0026gt; Popular Movies\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003epopular\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Upcoming movie  --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;h3\u0026gt; Upcoming Movies \u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eupcoming\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Now showing movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;h3\u0026gt;Now Showing\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003enow_showing\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then replace our HTML structure with our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblock content\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand place our body content inside the blocks.\u003c/p\u003e\r\n\u003ch3\u003eTask\u003c/h3\u003e\r\n\u003cp\u003eReplace the HTML in the\u003cspan\u003e \u003c/span\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile and extend the\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003c/p\u003e\r\n\u003ch2\u003eAdding Bootstrap\u003c/h2\u003e\r\n\u003cp\u003eOur application looks a bit stale we can add some styling using twitter bootstrap framework. We use the Flask-Bootstrap extension.\u003c/p\u003e\r\n\u003cp\u003eLet us download the extension.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-bootstrap\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then need to initialize the extension. Most flask extensions need to be initialized before we can start using them. We do that in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003e__init__.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile .\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003e__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_bootstrap\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBootstrap\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003ccode\u003eBootstrap\u003c/code\u003eclass from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eflask_bootstrap\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eextension.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003e__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# Initializing application\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003einstance_relative_config\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Setting up configuration\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_pyfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"config.py\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Initializing Flask Extensions\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBootstrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then initialize the Bootstrap class by passing in the app instance. This is how most extensions are initialized. We can now use bootstrap in our application.\u003c/p\u003e\r\n\u003cp\u003eWe can now replace\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eall\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethe content in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile with the following code.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bootstrap/base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFlask-Bootstrap contains its own\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003ewhich has defined blocks that we can refer to and add our own data.\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://pythonhosted.org/Flask-Bootstrap/basic-usage.html#available-blocks\"\u003eFull List of Flask-Bootsrap available blocks\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eWe can run our application and see it still runs as normal.\u003c/p\u003e\r\n\u003cp\u003eLet us add a navigation bar to our application. Create a new template file\u003cspan\u003e \u003c/span\u003e\u003cem\u003enavbar.html\u003c/em\u003e.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003enavbar.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navbar navbar-inverse\"\u003c/span\u003e \u003cspan class=\"na\"\u003erole\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navigation\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"container-fluid\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navbar-header\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"button\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navbar-toggle\"\u003c/span\u003e \u003cspan class=\"na\"\u003edata-toggle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"collapse\"\u003c/span\u003e \u003cspan class=\"na\"\u003edata-target\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\".navbar-collapse\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"sr-only\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eToggle navigation\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"icon-bar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"icon-bar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"icon-bar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navbar-brand\"\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Watchlist \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navbar-collapse collapse\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"nav navbar-nav\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eHome\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a bootstrap navbar and we can now include it in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bootstrap/base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Navbar block  --\u0026gt; \u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003enavbar\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003einclude\u003c/span\u003e \u003cspan class=\"s1\"\u003e'navbar.html'\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we have sections of our template that are reused in multiple parts or in multiple templates we can separate it into its own template file and include it wherever we need it.\u003c/p\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebootstrap/base.html\u003c/code\u003e\u003cspan\u003e \u003c/span\u003enavbar block and we use the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eincludes\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003econtrol block to include our _navbar.html_ file to that section of the\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003etemplate.\u003c/p\u003e\r\n\u003cp\u003eWe can now run our application and see our new navbar.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/09-Adding-Bootstrap\u003c/p\u003e","exportId":"tuesday-introduction-template-inheritance-adding-bootstrap"},{"id":436,"title":"Tuesday: Links and Static Files; Error Pages","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eLinks and CSS\u003c/h2\u003e\r\n\u003cp\u003eWe can now create our movie details page in our application. First we need to get the movie.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eget_movie_details_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003eurllib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eurlopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movie_details_url\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003emovie_details_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eloads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_details_data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003emovie_object\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'id'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'original_title'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003eoverview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'overview'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003eposter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'poster_path'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003evote_average\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'vote_average'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003evote_count\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'vote_count'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n            \u003cspan class=\"n\"\u003emovie_object\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_object\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movie()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in a movie id and returns a movie object. We create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movie_details\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eURL by formatting the base URL with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003eand API key.\u003c/p\u003e\r\n\u003cp\u003eWe then create a request and load the data and create a movie object.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.requests\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to our _views.py_ file.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/\u0026lt;int:id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View movie page function that returns the movie details page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'{movie.title}'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then update our movie details route. We create a movie object by calling the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movie()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in the dynamic URL id . We then pass that route into our template file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e{% extends 'base.html'%}\r\n\u003cspan class=\"c\"\u003e\u0026lt;!-- Content block --\u0026gt;\u003c/span\u003e\r\n{% block content %}\r\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"container\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Poster background --\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"row\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-xs-6 col-sm-6 col-md-6 col-lg-6 posterPath\"\u003c/span\u003e \u003cspan class=\"na\"\u003estyle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"background: url({{movie.poster}}) no-repeat center center\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-xs-6 col-sm-6 col-md-6 col-lg-6 movie-details\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh3\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{ movie.title }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh3\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"overview\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ movie.overview }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ratings\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ movie.vote_average }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e - \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{ movie.vote_count}} votes \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n{% endblock %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a template with two columns passing in the movie poster on left column and movie details on the right. Now we need to link to this dynamic page.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003emacro\u003c/span\u003e \u003cspan class=\"nv\"\u003edisplayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003emovie_list\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie_list\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;div class=\"col-xs-12 col-sm-4 col-md-2 col-lg-2 movie-card\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;img src=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.poster\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\" alt=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.title\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e poster\" class=\"img-responsive\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;li class=\"text-center\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;a href=\"/movie/\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003emovie.id\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.title\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"nf\"\u003etruncate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendmacro\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe now want to update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplayMovieList\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emacro. We add the Movie poster to be displayed . We then add an anchor tag that links to the dynamic URL\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e/movie/{{movie.id}}\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe also change the movie title variable block by adding the truncate\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003efilter\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e. A filter is passed into a variable block to modify the content of of the block and are added after the variable with a pipe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e|\u003c/code\u003e\u003cspan\u003e \u003c/span\u003echaracter.\u003c/p\u003e\r\n\u003cp\u003eThe truncate filter shortens a variable size according to the characters we add to its parameters.\u003c/p\u003e\r\n\u003cp\u003e\u003ca href=\"http://jinja.pocoo.org/docs/2.9/templates/#list-of-builtin-filters\"\u003eFind all the Jinja Built In Features here\u003c/a\u003e\u003c/p\u003e\r\n\u003cp\u003eNow when we load our application we see each movie as with a movie image and a link. And when we click the link we are taken to the movies details page.\u003c/p\u003e\r\n\u003ch3\u003e\u003ccode\u003eurl_for()\u003c/code\u003e\u003c/h3\u003e\r\n\u003cp\u003eFlask provides the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ehelper function that generates a URL from information stored in the app URL map. We can use it to link our application to CSS.\u003c/p\u003e\r\n\u003cp\u003eStatic files like Images,CSS and JavaScript files are given a special route by flask in which they can be accessed\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e/static/\u0026lt;filename\u0026gt;\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eWe first create a\u003cspan\u003e \u003c/span\u003e\u003cem\u003ecss\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efolder inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003estatic\u003c/em\u003e\u003cspan\u003e \u003c/span\u003esub folder. We then create a CSS file for our index page.\u003cspan\u003e \u003c/span\u003e\u003cem\u003eindex.css\u003c/em\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'macros.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Styles block --\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003estyles\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nb\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;link rel=\"stylesheet\" href=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'static'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003efilename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'css/index.css'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Content block --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblock styles\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock provided by the\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebootstrap/base.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. Before we add our content we first create a variable block and call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esuper()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction. This tells Jinja not to override any code that is defined in the block. Remember the\u003cem\u003ebootstrap/base.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003ehas defined links to the bootstrap css files and we do not want to override those links.\u003c/p\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to create a link to the static file. The function takes in the view function as the first argument, which is\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estatic\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand then we pass in the dynamic filename\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecss/index.css\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eWe can now manipulate our template file and add styling to it.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/10-Adding-Css\u003c/p\u003e\r\n\u003ch2\u003eError Pages\u003c/h2\u003e\r\n\u003cp\u003eIf by some chance a user enters a wrong URL in the browser. Let's say they pass in movies instead of movie.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehttp://127.0.0.1:5000/movies/396422\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethey will be greeted with the default\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e404\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epage provided by flask. But this page is boring. We can create our own error page and customize it.\u003c/p\u003e\r\n\u003cp\u003eLets add that code to our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/error.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/error.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@app.errorhandler\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efour_Ow_four\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function to render the 404 error page\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'fourOwfour.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erender_template()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and the flask application instance.\u003c/p\u003e\r\n\u003cp\u003eWe create a new decorator\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.errorhandler()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat passes in the error we receive. We create a view function. that returns\u003cspan\u003e \u003c/span\u003e\u003cem\u003efourOwfour.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile and we also pass in the status code we receive\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e404\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eNow we can go to and create our template file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003efourOwfour.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;h1\u0026gt;WHOOOPS we can't find that page\u0026lt;/h1\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLastly, we need to import \u003ccode\u003eerror.py\u003c/code\u003e file in the \u003ccode\u003e__init__.py\u003c/code\u003e file.\u003c/p\u003e\r\n\u003cp\u003e__init__.py\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e....\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003efrom app import views\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003efrom app import error\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eYou can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/11-Error-Messages\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School\u003c/p\u003e","exportId":"tuesday-links-and-static-files-error-pages"},{"id":1076,"title":"Wednesday: White Board Interview Practice","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a text entry box","graded":true,"pointsPossible":12.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv class=\"description user_content teacher-version enhanced\"\u003e\r\n\u003cp\u003e\u003cspan\u003eTake time this morning and split into groups of 5. You will be practicing for white board interviews that will be touched on more during your project period. Pick one of you to take the mock white board interview, set a toy problem for them to go through, and at the end use the rubric below to grade and give feedback.\u003c/span\u003e\u003c/p\u003e\r\n\u003c/div\u003e","exportId":"i33647bfd10feec0165b0648d8317f719"},{"id":437,"title":"Wednesday: Request Object","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eSearch for Movies\u003c/h2\u003e\r\n\u003cp\u003eWe are going to implement a search functionality from our API. Let us first create the search request.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esearch_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esearch_movie_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'https://api.themoviedb.org/3/search/movie?api_key={}\u0026amp;query={}'\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003eurllib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eurlopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie_url\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003esearch_movie_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003esearch_movie_response\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eloads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie_data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003esearch_movie_results\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_movie_response\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'results'\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003esearch_movie_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_movie_response\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'results'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003esearch_movie_results\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprocess_results\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie_list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_movie_results\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use a new URL for our search request that passes in our API key and the movie name then we create the request and process the results. We then create the view function for the for the search route.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.requests\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esearch_movie()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction from the\u003cspan\u003e \u003c/span\u003e\u003cem\u003erequests.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003eWe then create the search view function that will display our search items from the API.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/search/\u0026lt;movie_name\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View function to display the search results\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_name_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_name\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\" \"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_name_format\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"+\"\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name_list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esearched_movies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name_format\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'search results for {movie_name}'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'search.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esearched_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esearch\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function that has passes in a dynamic variable. We then format the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_name\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto add\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e+\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esign between the multiple words.\u003c/p\u003e\r\n\u003cp\u003eWe then call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esearch_movie()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the formated movie name. We then pass the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esearched_movies\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist to our template.\u003c/p\u003e\r\n\u003cp\u003eLet us create the search template.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003esearch.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'macros.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;div class=\"container\"\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e        \u0026lt;div class=\"row\"\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e            \u0026lt;h3\u0026gt; Found \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovies\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"nf\"\u003ecount\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e matches \u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;hr\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003emovies\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe extend the\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile then we import the\u003cspan\u003e \u003c/span\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.We use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecount\u003c/code\u003efilter that counts all the items in a list. Then we call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplayMovieList()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emacro that will display all the movies.\u003c/p\u003e\r\n\u003cp\u003eLet us then create the search form in the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e...\r\n{% block content %}\r\n\r\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"container\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"text\"\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"movie_query\"\u003c/span\u003e \u003cspan class=\"na\"\u003eplaceholder\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Search for a Movie\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"form-control\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"submit\"\u003c/span\u003e  \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Submit\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"btn btn-default\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n...\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThen create a form with two Input fields. One to get a text input with the name\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_query\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethe other to adds a submit button.\u003c/p\u003e\r\n\u003ch3\u003eRequest Object\u003c/h3\u003e\r\n\u003cp\u003eThe request object is provided by flask and it encapsulates our HTTP request with all its arguments to the view function.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erequest\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eobject from flask inside the the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eviews.py\u003c/em\u003e. We will also import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eredirect\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunctions which we will see what they do later on.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Views\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Getting popular movie\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'popular'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eupcoming_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'upcoming'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003enow_showing_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'now_playing'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Home - Welcome to The best Movie Review Website Online'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie_query'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'search'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epopular\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eupcoming\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eupcoming_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enow_showing\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enow_showing_movie\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our index view function. When we submit the form inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eit creates a query with the name of the input\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_query\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand the value as the input value. We get the query in our view function using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erequest.args.get()\u003c/code\u003efunction. We pass in the name of the query and the value is returned.\u003c/p\u003e\r\n\u003cp\u003eWe then check if the value actually exists if it does we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eredirect\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that redirects us to another view function. We then pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that passes in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esearch\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function together with the dynamic\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_name\u003c/code\u003ewhich assign it to our form Input value.\u003c/p\u003e\r\n\u003cp\u003eWe can run our application and see our form. We can input a movies name and see results be loaded.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/12-Form-Requests\u003c/p\u003e\r\n\u003ch2\u003eCreating A review Class\u003c/h2\u003e\r\n\u003cp\u003eNow that we can successfully display movies from our API and our search functionality works perfectly, let's take it a step further and allow users to give reviews for movies they like.\u003c/p\u003e\r\n\u003cp\u003eLet us first create the Reviews class inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003emodels\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efolder.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels/reviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eclear_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclear\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReview\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that has a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that takes in the Movie ID, The review title, The image URL and the review itself. We then have a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_review\u003c/code\u003emethod that appends the review object to a class variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eall_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat is an empty list. We then have a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eclear_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method that clears all the Items from the list.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/13-create-movie-review-class\u003c/p\u003e","exportId":"wednesday-request-object"},{"id":438,"title":"Wednesday: WTF Forms","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eWTF Forms\u003c/h2\u003e\r\n\u003cp\u003eTo handle forms in our application, we are going us Flask-WTF extension which is a flexible form rendering and validation library.\u003c/p\u003e\r\n\u003cp\u003eWTF forms make working with web forms much easier. It provides a lot of out of the box functionality Like security against\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Cross-site_request_forgery\"\u003eCSRF\u003c/a\u003e\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eCross site Request Forgery. And also offers validation.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-wtf \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo enable CSRF protection we need to create a Secret Key that will verify authenticity of requests with form data.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003einstance/config.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eMOVIE_API_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u0026lt;Movie API Key\u0026gt;'\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSECRET_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u0026lt;Flask WTF Secret Key\u0026gt;'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow we can start creating our web Form to create Reviews for the movies. Inside the app directory, create a forms.py file\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eforms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_wtf\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eTextAreaField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms.validators\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReviewForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Review title'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTextAreaField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Movie review'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalidators\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esubmit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Submit'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first Import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlaskForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eflask_wtf\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule this will help us create a Form class.\u003c/p\u003e\r\n\u003cp\u003eWe then import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eStringField\u003c/code\u003e,\u003ccode\u003eTextAreaField\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSubmitField\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efield classes. These will help us create a text field, a text Area field and a submit button.\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://wtforms.readthedocs.io/en/latest/fields.html#basic-fields\"\u003eList of all the available fields\u003c/a\u003e lastly, we import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRequired\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass validator that will prevent the user from submitting the form without Inputting a value.\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://wtforms.readthedocs.io/en/latest/validators.html#built-in-validators\"\u003eList of all the available validators\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eWe then create the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReviewForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that inherits from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlaskForm\u003c/code\u003eclass. We Initialize the Field types by passing in two parameters. The first is the label and the second is a list of Validators where we initialize the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRequired\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evalidator.\u003c/p\u003e\r\n\u003cp\u003eLet us first create the template file that will display our form. Create a new file\u003cspan\u003e \u003c/span\u003e\u003cem\u003enew_review.html \u003c/em\u003einside the templates folder.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003enew_review.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e{% extends 'base.html'%}\r\n{% import \"bootstrap/wtf.html\" as wtf %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFlask-Bootstrap provides a high level function that allows us to render forms with bootstrap styling. We import _bootstrap/wtf.html_ from Flask-Bootstrap that defines helper functions to render web forms\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003enew_review.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e{% extends 'base.html'%}\r\n{% import \"bootstrap/wtf.html\" as wtf %}\r\n\r\n{% block content %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"container\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-md-8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eimg\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{movie.poster}}\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{movie.title}}\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"img-responsive\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-md-4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n            {{ wtf.quick_form(review_form) }}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n{% endblock %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewtf.quick_form()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction takes in a Flask-WTF form object and renders it with bootstrap styling.\u003c/p\u003e\r\n\u003cp\u003eLet us create the view function for that will handle this template.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.forms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eReviewForm\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eReview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eReview\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReview\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from our models folder. We also import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReviewForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from our forms file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/review/new/\u0026lt;int:id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'GET'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'POST'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003enew_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReviewForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003enew_review\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'{movie.title} review'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'new_review.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereview_form\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a new dynamic route for our new_review function and pass in the movie id. We also add the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emethods\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument to our decorator which tells flask to register the view function as a handler for both\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eGET\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ePOST\u003c/code\u003e\u003cspan\u003e \u003c/span\u003erequests. When\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emethods\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument is not given the view function is registered to handle\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eGET\u003c/code\u003e\u003cspan\u003e \u003c/span\u003erequests only.\u003c/p\u003e\r\n\u003cp\u003eWe then create an instance of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReviewForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and name it\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eform\u003c/code\u003e\u003cspan\u003e . \u003c/span\u003eWe also call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the ID to get the movie object for the movie with that ID.\u003c/p\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evalidate_on_submit()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod returns\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhen the form is submitted and all the data has been verified by the validators. If\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewe gather the data from the form input fields and create a new review object and save it. We then redirect the response to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function and pass in the dynamic movie ID.\u003c/p\u003e\r\n\u003cp\u003eIf the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evalidate_on_submit()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod returns\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewe will render our\u003cspan\u003e \u003c/span\u003e\u003cem\u003enew_review.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003etemplate file and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etitle\u003c/code\u003e, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eform\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eobject and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie\u003c/code\u003eobject.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e\u0026lt;div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6 movie-details\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;h3\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.title\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e            \u0026lt;p class=\"overview\"\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.overview\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e            \u0026lt;p class=\"ratings\"\u0026gt; \u0026lt;b\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.vote_average\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/b\u0026gt; - \u0026lt;i\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.vote_count\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e votes \u0026lt;/i\u0026gt; \u0026lt;/p\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;a class=\"ratings\" href=\"/movie/review/new/\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003emovie.id\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt; Write a new review\u0026lt;/a\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie-details\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecolumn in the\u003cspan\u003e \u003c/span\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile to add a link to a review page where we will display the form.\u003c/p\u003e\r\n\u003cp\u003eWhen we run the application and click on the link we should see our reviews form displayed for us and we can add new reviews to our movie.\u003c/p\u003e\r\n\u003ch3\u003eDisplaying Reviews\u003c/h3\u003e\r\n\u003cp\u003eWe need to create a method that will display all the reviews for a particular movie.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels/review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e......\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Some code is here\u003c/span\u003e\r\n    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a new class method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in an ID. It loops through all the reviews in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eall_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist and checks for reviews that have the same movie ID as the id passed. We then append those reviews to a new\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eresponse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist and return that response list.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/\u0026lt;int:id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View movie page function that returns the movie details page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'{movie.title}'\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function and call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method that takes in a movie ID and will return a list of reviews for that movie. We then pass in the reviews list to our template\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- Displaying reviews macro --\u0026gt;\u003c/span\u003e\r\n{% macro displayReviews(review_list) %}\r\n    {% for review in review_list %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-xs-12 col-sm-4 col-md-4 col-lg-4 review-card\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ review.title}} \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ review.review | truncate(30) }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    {% endfor %}\r\n{% endmacro %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn our\u003cspan\u003e \u003c/span\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003etemplate we create a new macro\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplayReviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in a list of reviews and loops through them to display each review by title and short snippet of the review.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e...\r\n{% import 'macros.html' as macro%}\r\n...\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import\u003cspan\u003e \u003c/span\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003etemplate file so that we can use our newly created macro.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e...\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"row\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eReviews\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehr\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        {% if reviews %}\r\n            {{macro.displayReviews(reviews)}}\r\n\r\n        {% else%}\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh3\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"text-center\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eThis movie has no reviews \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh3\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"btn btn-success btn-lg text-center\"\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/movie/review/new/{{movie.id}}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Write a new review\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% endif %}\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n...\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a new row where first we check if any review exists for that particular movie and if True we call our macro and pass in the reviews list. If not we put in a helpful statement and a link to write a new review.\u003c/p\u003e\r\n\u003cp\u003eNow when we run our application and create a new review it will be displayed on the movie page.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/14-wtf-forms\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"wednesday-wtf-forms"},{"id":439,"title":"Thursday: Application Structures","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eApplication structure\u003c/h2\u003e\r\n\u003cp\u003eWhen we began our project we created a basic application structure. This was good for when our application was still small but as it grows in size and complexity we will need to efficiently organize our project.\u003c/p\u003e\r\n\u003cp\u003eWe will create a new application structure that we will use from now on in the end it will look something like this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003eWatchlist\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n            \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n            \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003eerrors\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n            \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n            \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003eviews\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003estatic\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003etemplates\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003etests\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003etest_movie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003etest_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003evirtual\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-.\u003c/span\u003e\u003cspan class=\"n\"\u003egitignore\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003emanage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003estart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esh\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ePlease pay careful attention to the instructions to minimize chances of errors while following along.\u003c/p\u003e\r\n\u003ch3\u003eApplication configurations\u003c/h3\u003e\r\n\u003cp\u003eWe will move\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efrom the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edirectory to the root directory.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eos\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eMOVIE_API_BASE_URL\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'https://api.themoviedb.org/3/movie/{}?api_key={}'\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eMOVIE_API_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSECRET_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'SECRET_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProdConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eDEBUG\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003econfig_options\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'development'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'production'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eProdConfig\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. We first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eos\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule that will allow our application to interact with the operating system dependent functionality. We use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eos.environ.get()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to get\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMOVIE_API_KEY\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSECRET_KEY\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich we will set as environment variables.\u003c/p\u003e\r\n\u003cp\u003eWe then create a dictionary\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfig_options\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto help us access different configuration option classes.\u003c/p\u003e\r\n\u003cp\u003e### Application factory\u003c/p\u003e\r\n\u003cp\u003eOur application package is where most of the apps functionality is stored including static files and templates. How the application instance is created makes it difficult to apply configuration changes dynamically. This is useful when it comes to testing the application under different configurations. To solve this we create a function that can be launched from the script\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_bootstrap\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBootstrap\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003econfig\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003econfig_options\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBootstrap\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Creating the app configurations\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_options\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Initializing flask extensions\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Will add the views and forms\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eto create our application factory function. We import import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfig_options\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efrom the the\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile that we updated. We then create the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebootstrap\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance.\u003c/p\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes the configuration setting key as an argument. This is because we might want to create the application instance under different configurations. We then create the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlask\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eapp instance. We then import the configuration settings directly to the application using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efrom_object()\u003c/code\u003emethod. We remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.config.from_pyfile(\"config.py\")\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement because all our secret configuration settings will be stored as environment variables.\u003c/p\u003e\r\n\u003cp\u003eWe call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einit_app()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eon an extension to complete on their initialization.Finally we return\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch3\u003eCreating Blueprints\u003c/h3\u003e\r\n\u003cp\u003eWe now run into another problem. In our previous application structure the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003einstance was available in the global scope now it is created at runtime.Functionality like\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@app.route()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecannot work until the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis executed. This is where\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eBlueprints\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ecome in handy.\u003c/p\u003e\r\n\u003cp\u003eA\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eBlueprint\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eis similar to an application in that it can also define routes.The main difference is that blueprints are dormant until they are registered by an application.\u003c/p\u003e\r\n\u003cp\u003eInside the app instance create a new folder\u003cspan\u003e \u003c/span\u003e\u003cem\u003emain\u003c/em\u003e\u003cspan\u003e \u003c/span\u003ethis is where we will define our blueprint. We move our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eerrors.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003e\u003cem\u003eforms.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efiles from our app folder into our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/main\u003c/em\u003e\u003cspan\u003e \u003c/span\u003esubfolder. We will also create an\u003cspan\u003e \u003c/span\u003e\u003cem\u003e__init__.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/main\u003c/em\u003e\u003cspan\u003e \u003c/span\u003esubfolder to define the Blueprint.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBlueprint\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emain\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'main'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eerrors\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eBlueprint\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from flask. We then initialize the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eBlueprint\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass by creating a variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emain\u003c/code\u003e. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eBlueprint\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass takes in 2 arguments. The name of the blueprint and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable to find the location of the blueprint.\u003c/p\u003e\r\n\u003cp\u003eTo avoid circular dependencies we import the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eviews\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cem\u003eerrors\u003c/em\u003e\u003cspan\u003e \u003c/span\u003emodules.\u003c/p\u003e\r\n\u003ch3\u003eRegistering a Blueprint\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Creating the app configurations\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_options\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Initializing flask extensions\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Registering the blueprint\u003c/span\u003e\r\n    \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.main\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003emain_blueprint\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregister_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emain_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe register a Blueprint inside our application factory function. We first import the instance we just created then we call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eregister_blueprint()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod on the application instance and pass in the blueprint.\u003c/p\u003e\r\n\u003ch3\u003eBlueprint Error handlers\u003c/h3\u003e\r\n\u003cp\u003eThe main difference with writing error handlers inside a blueprint is that it is invoked only inside the blueprint. To use application-wide error handler we must use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp_errorhandler()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edecorator.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/errors.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@main.app_errorhandler\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efour_Ow_four\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function to render the 404 error page\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'fourOwfour.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSince we are defining our error handler inside our blueprint we import the blueprint instance\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emain\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand use it to define our decorator.\u003c/p\u003e\r\n\u003ch3\u003eModels\u003c/h3\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003cem\u003emodels.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile inside our app folder that will contain our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReview\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodels.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Movie class to define Movie Objects\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"https://image.tmdb.org/t/p/w500/\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eposter\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\r\n\r\n\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eclear_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclear\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create place both our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReview\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eModel\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclasses inside the _models.py_ file. We can now delete the models folder from our app directory.\u003c/p\u003e\r\n\u003ch3\u003eRequests\u003c/h3\u003e\r\n\u003cp\u003e\u003cem\u003eapp/requests.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eurllib.request\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nn\"\u003ejson\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first update our imports by importing the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the new _app/models.py_ file we have just created.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/requests.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eurllib.request\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nn\"\u003ejson\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Getting api key\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# Getting the movie base url\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003econfigure_request\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eglobal\u003c/span\u003e \u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_BASE_URL'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create two variables\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapi_key\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebase_url\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand set them to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eNone\u003c/code\u003e. We then create a function\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfigure_request()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in the application instance and replaces the values of the None variables to application configuration objects.\u003c/p\u003e\r\n\u003cp\u003eBecause we cannot access the application instance globally we need to call this function when we create our application instance. This will give us access to the application configuration objects.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e# Registering the blueprint\u003c/span\u003e\r\n    \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.main\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003emain_blueprint\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregister_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emain_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# setting config\u003c/span\u003e\r\n    \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.requests\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003econfigure_request\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003econfigure_request\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eInside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile we import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfigure_request()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction from the\u003cspan\u003e \u003c/span\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. We call the function and pass the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance.\u003c/p\u003e\r\n\u003ch3\u003eBlueprint views\u003c/h3\u003e\r\n\u003cp\u003eNow we can update our\u003cspan\u003e \u003c/span\u003e\u003cem\u003emain/views.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emain/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..requests\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.forms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eReviewForm\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first update our files imports. We use the python relative import system in order to import a module according to where it is located in our project. We use one dot\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.modulename\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto import modules that are located within the same package, and two dots \u003ccode\u003e..modulename\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efor modules located in a package higher up in the project hierarchy.\u003c/p\u003e\r\n\u003cp\u003eWe then define our route decorators using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emain\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblueprint instance instead of the app instance\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emain/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# Views\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e\u003cstrong\u003eTask\u003c/strong\u003e: Define all the remaining routes with the appropriate decorators.\u003c/p\u003e\r\n\u003ch4\u003eurl_for() functions in Blueprints\u003c/h4\u003e\r\n\u003cp\u003eFlask adds a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003enamespace\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eto all endpoints from a blueprint. The namespace is generally the name of the blueprint. For example the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function is registerd as\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for('main.index')\u003c/code\u003e.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ealso supports a shorthand format using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.\u003c/code\u003e.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for('main.index')\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecan be shortened to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for('.index')\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eTask\u003c/strong\u003e: Update the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enew_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview functions with the proper namespace.\u003c/p\u003e\r\n\u003ch3\u003eUnittests\u003c/h3\u003e\r\n\u003cp\u003eWe now move our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_movie.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_review.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efiles from our app folder into our tests folder.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_movie.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieTest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Test Class to test the behaviour of the Movie class\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Set up method that will run before every Test\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1234\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Python Must Be Crazy'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'A thrilling new Python Series'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/khsjha27hbs'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mf\"\u003e8.5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e129993\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_instance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eisinstance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our imports where we import our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the the\u003cspan\u003e \u003c/span\u003e\u003cem\u003emodules.py\u003c/em\u003efile inside our app directory.\u003c/p\u003e\r\n\u003cp\u003eWe then remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest.run()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand from the bottom of our file. We will consider how to run unittests later on. For now leave your file like this.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eTask\u003c/strong\u003e: Update the\u003cspan\u003e \u003c/span\u003e\u003cem\u003etest_review.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile with the correct imports and remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest.run()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand from the bottom of the file.\u003c/p\u003e\r\n\u003ch3\u003eRunning our Application\u003c/h3\u003e\r\n\u003cp\u003eNow that we have properly configured our application structure we can now launch our application. We will use a flask extension called Flask-Script that is a command line parser that will allow us to create startup configurations.\u003c/p\u003e\r\n\u003cp\u003eFirst install flask-script:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-script\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRename\u003cspan\u003e \u003c/span\u003e\u003cem\u003erun.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile to\u003cspan\u003e \u003c/span\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand then setup flask-script.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_app\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_script\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eManager\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eServer\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction from our app folder. We also import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eManager\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from flask-script that will initialize our extension and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eServer\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that help us launch our server.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# Creating app instance\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'development'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003emanager\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eManager\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd_command\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'server'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eServer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in the configuration_options key so as to create the application instance. We instantiate the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eManager\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass by passing in the app instance. We then create a command line argument to tell us how to run our application. We use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eadd_command\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to create a new command\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'server'\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich will launch our application server.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd_command\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'server'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eServer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe end the file by calling the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erun\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod on the Manager instance this will run the application.\u003c/p\u003e\r\n\u003cp\u003eNow we can run our application\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eMOVIE_API_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;Your api key\u0026gt;\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eSECRET_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;Your secret key\u0026gt;\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6  manage.py server\r\n * Running on http://127.0.0.1:5000/ \u003cspan class=\"o\"\u003e(\u003c/span\u003ePress CTRL+C to quit\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n * Restarting with stat\r\n * Debugger is active!\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRunning your application this way everytime can get tedious we can create a start file that will setup our environment variables and run our application for us.\u003c/p\u003e\r\n\u003cp\u003eInside our root directory create a new file\u003cspan\u003e \u003c/span\u003e\u003cem\u003estart.sh\u003c/em\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003estart.sh\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eMOVIE_API_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;Your api key\u0026gt;\r\n\u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eSECRET_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;Your secret key\u0026gt;\r\n\r\npython3.6 manage.py server\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then can make that file executable by running\u003cspan\u003e \u003c/span\u003e\u003ccode\u003echmod a+x\u003c/code\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ chmod a+x start.sh\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow we can run our application very easily\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ ./start.sh\r\n * Running on http://127.0.0.1:5000/ \u003cspan class=\"o\"\u003e(\u003c/span\u003ePress CTRL+C to quit\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n * Restarting with stat\r\n * Debugger is active!\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eRunning unittests\u003c/h3\u003e\r\n\u003cp\u003eWe can use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emanager\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance to create a command to run unittests in our application.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd_command\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'server'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eServer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@manager.command\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"Run the unit tests.\"\"\"\u003c/span\u003e\r\n    \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etests\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestLoader\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ediscover\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'tests'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTextTestRunner\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003everbosity\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etests\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@manager.command\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edecorator to create a new command.We create the test function that loads all the test files and runs them all\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003epython3.6 manager.py \u003cspan class=\"nb\"\u003etest\u003c/span\u003e\r\ntest_instance \u003cspan class=\"o\"\u003e(\u003c/span\u003etest_movie.MovieTest\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... ok\r\ntest_check_instance_variables \u003cspan class=\"o\"\u003e(\u003c/span\u003etest_review.TestReview\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... ok\r\ntest_get_review_by_id \u003cspan class=\"o\"\u003e(\u003c/span\u003etest_review.TestReview\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... ok\r\ntest_instance \u003cspan class=\"o\"\u003e(\u003c/span\u003etest_review.TestReview\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... ok\r\ntest_save_review \u003cspan class=\"o\"\u003e(\u003c/span\u003etest_review.TestReview\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... ok\r\n\r\n----------------------------------------------------------------------\r\nRan \u003cspan class=\"m\"\u003e5\u003c/span\u003e tests in \u003cspan class=\"m\"\u003e0\u003c/span\u003e.002s\r\n\r\nOK\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can now run unittests using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epython3.6 manager.py test\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand from the terminal.\u003c/p\u003e","exportId":"thursday-application-structures"},{"id":440,"title":"Thursday: Deploying to Heroku","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eDeploying To Heroku.\u003c/h2\u003e\r\n\u003cp\u003eLet us now learn how we can deploy our apps to Heroku.\u003c/p\u003e\r\n\u003ch4\u003eRequirements\u003c/h4\u003e\r\n\u003col\u003e\r\n\u003cli\u003egunicorn.\u003c/li\u003e\r\n\u003cli\u003eHeroku account.\u003c/li\u003e\r\n\u003cli\u003eHeroku Command line Interface.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch4\u003eStep 1 . Gather all Requirements.\u003c/h4\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eInstall\u003cspan\u003e \u003c/span\u003e\u003ca href=\"http://gunicorn.org/\"\u003egunicorn\u003c/a\u003e\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eThis is a unix based server that will run our application on Heroku\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 -m  pip install gunicorn\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eCreate a free Heroku\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://moringacore-python.herokuapp.com/heroku.com\"\u003eaccount\u003c/a\u003e\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eThis will be our hosting environment for our application.\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eInstall the Heroku\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://devcenter.heroku.com/articles/heroku-cli\"\u003eCLI\u003c/a\u003e\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eStep 2. List all the Python dependencies.\u003c/h4\u003e\r\n\u003cp\u003eWe need to list all the dependencies required by the Heroku environment.\u003c/p\u003e\r\n\u003cp\u003eTo do that we just type the command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip freeze\r\n\r\n\u003cspan class=\"nv\"\u003eclick\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e6\u003c/span\u003e.7\r\n\u003cspan class=\"nv\"\u003edominate\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e.3.1\r\n\u003cspan class=\"nv\"\u003eFlask\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.12.2\r\nFlask-Bootstrap\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e.3.7.1\r\nFlask-Script\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e.0.5\r\nFlask-WTF\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.14.2\r\n\u003cspan class=\"nv\"\u003egunicorn\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e19\u003c/span\u003e.7.1\r\n\u003cspan class=\"nv\"\u003eitsdangerous\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.24\r\n\u003cspan class=\"nv\"\u003eJinja2\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e.9.6\r\n\u003cspan class=\"nv\"\u003eMarkupSafe\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e.0\r\n\u003cspan class=\"nv\"\u003evisitor\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.1.3\r\n\u003cspan class=\"nv\"\u003eWerkzeug\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.12.2\r\n\u003cspan class=\"nv\"\u003eWTForms\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e.1\r\npkg-resources\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.0.0\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe will put all those dependencies in a file called _requirements.txt_ that will be in our root folder.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip freeze \u0026gt; requirements.txt\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eGo into your _requirements.txt_ file and remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epkg-resources==0.0.0\u003c/code\u003edependency. This is a small bug that will prevent us from deploying our applications.\u003c/p\u003e\r\n\u003ch4\u003eStep 3. Creating a Procfile\u003c/h4\u003e\r\n\u003cp\u003eA Procfile is a mechanism for declaring what commands are run by the Heroku environment We will create a file in our root folder and name it\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eProcfile\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eIn our case we want to run our Flask application using gunicorn.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eProcfile\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003eweb: gunicorn manage:app\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003ch4\u003eStep 4. Create a new Heroku application\u003c/h4\u003e\r\n\u003cp\u003eIf you haven't done so, set up your Heroku account and follow the given steps.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku login\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThen let us create a new application\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku create \u0026lt;name-of-app\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eReplace the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026lt;name-of-app\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith what you want to call your application.\u003c/p\u003e\r\n\u003ch4\u003eStep 5 Adding configurations\u003c/h4\u003e\r\n\u003cp\u003eWe can now add our environment variables as configuration variables to our Heroku project\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku config:set \u003cspan class=\"nv\"\u003eMOVIE_API_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;YOUR MOVIE API\u0026gt;\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku config:set \u003cspan class=\"nv\"\u003eSECRET_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;YOUR SECRET KEY\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis will enable us to access the environment configurations in our Heroku application.\u003c/p\u003e\r\n\u003ch4\u003eStep 6. Deployment.\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ git add .\r\n$ git commit -m \u003cspan class=\"s2\"\u003e\"deployment to heroku\"\u003c/span\u003e\r\n$ git push heroku master\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHeroku goes through your\u003cspan\u003e \u003c/span\u003e\u003cem\u003erequirements.txt\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile,installs all our dependencies and builds our application.\u003c/p\u003e\r\n\u003ch2\u003eProjects\u003c/h2\u003e\r\n\u003ch3\u003eLost and Afraid\u003c/h3\u003e\r\n\u003cp\u003eCreate a text adventure game where a user is lost in a forest. The game would give the user a set of instructions and observations The user has to make decisions based on the options the game provides. You can also supplement the text with images.\u003c/p\u003e\r\n\u003cp\u003eHave the user create a profile before he starts playing. YOu can collect the user's name,their weapon of choice and 3 resources that they have.\u003c/p\u003e\r\n\u003ch3\u003eBook Worm.\u003c/h3\u003e\r\n\u003cp\u003eUsing the\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://developers.google.com/books/docs/v1/getting_started\"\u003eGoogle Books\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eAPI create an application that allows users to search for books and get information about the books.\u003c/p\u003e\r\n\u003c/div\u003e\r\n \r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"thursday-deploying-to-heroku"},{"id":674,"title":"Friday: News Highlight","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a text entry box or a website url","graded":true,"pointsPossible":21.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003cp\u003eYour Parents are hard workers and get home really late. They always seem to miss the news and are frustrated that they do not have the time to catch up on current affairs. Your task is to create an application that will help them list and preview news articles from various sources.\u003c/p\u003e\r\n\u003ch3\u003eNews API\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://newsapi.org/\"\u003eNews API\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eprovides a wonderful api that will allow you to complete your task. Read the documentation to fully access the features and how to use it.\u003c/p\u003e\r\n\u003ch3\u003eUser Story\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eYour users should be able to see various news sources on the homepage and select the ones they prefer\u003c/li\u003e\r\n\u003cli\u003eYour users should be able to click on a news source and see all the news articles from that news source \u003c/li\u003e\r\n\u003cli\u003eThe user should see the image description and time the news article was created.\u003c/li\u003e\r\n\u003cli\u003eThe user should also be able to click on an article and read it fully from the news source.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eTechnical Requirements\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eYour project must have a specification markdown file called \u003cem\u003especs.\u003c/em\u003emd that lists down all the projects specifications.\u003c/li\u003e\r\n\u003cli\u003eYour project should contain two models for the news source and for the news article.\u003c/li\u003e\r\n\u003cli\u003eYour project's models should contain unit tests to test the different behaviors.\u003c/li\u003e\r\n\u003cli\u003eYour project must follow the proper folder structure.\u003c/li\u003e\r\n\u003cli\u003eYour project must be deployed to Heroku.\u003c/li\u003e\r\n\u003cli\u003eYour project must contain proper commit messages with a minimum of 35 commit messages.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eFurther Exploration\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eOrganize the news into different categories and display news sources from the various categories. \u003c/li\u003e\r\n\u003cli\u003eLearn how to use flask sessions and allow users not to lose the news article snippet on relaunch of the applications\u003c/li\u003e\r\n\u003cli\u003eCreate a favorite sources section where a user can add their favorite news sources and store them in a browser cookie.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003c/div\u003e","exportId":"i2278193d105bd704546af6caed73d09c"},{"id":1090,"title":"Friday: IP review","type":"Assignment","indent":0,"locked":false,"submissionTypes":null,"graded":true,"pointsPossible":18.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cp\u003eThe following scale will be used to grade your Independent Project based on the criteria, please submit your links to your TM.\u003c/p\u003e","exportId":"ibcaa5bd754e036330c2ac47f036ade78"},{"id":442,"title":"Weekend: Introduction to Databases; Database Relationships","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eIntroduction To Databases\u003c/h2\u003e\r\n\u003cp\u003eSo far our applications have been storing data inside the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eRAM\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eRandom access memory of our computers. This is quick and easy but also temporary because every time we restart the application the data has disappeared.\u003c/p\u003e\r\n\u003cp\u003eThis week we will learn how to persist our data inside databases, create a database, insert and query data from it. We will also learn about a handy tool called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eSQLAlchemy\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat allows us to interact with our database at a higher level.\u003c/p\u003e\r\n\u003cp\u003eThere are many types of databases. But most fall under 2 categories\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eSQL\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- Structured Query Language databases and\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eNoSQL\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e-Non Structured Query Language databases.\u003c/p\u003e\r\n\u003ch3\u003eTask\u003c/h3\u003e\r\n\u003cp\u003eGo online and do research on these different kinds of databases. 1. Get the definition of both. 2. How they are structured. 3. The different types of databases for each category. 4. The Benefits of using each. 5. Disadvantages of using each.\u003c/p\u003e\r\n\u003cp\u003eYou will present what you have learned the following day during stand up.\u003c/p\u003e\r\n\u003ch2\u003ePostgres\u003c/h2\u003e\r\n\u003cp\u003eWe will be using\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ePostgreSQL\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003edatabase for our application. This is a type of SQL database.\u003c/p\u003e\r\n\u003cp\u003eSQL Databases store data in tables which are different items in an application. Tables have a fixed number of columns and a variable number of rows.\u003c/p\u003e\r\n\u003cp\u003eThey have a special column called a primary key which is a unique identifier for each row stored in the table.\u003c/p\u003e\r\n\u003cp\u003eThey might also have foreign keys which are a reference to the primary key of another table. This defines the relationship between those two tables.\u003c/p\u003e\r\n\u003ch3\u003eInstallation\u003c/h3\u003e\r\n\u003ch4\u003e1. Ubuntu\u003c/h4\u003e\r\n\u003cp\u003eTo Install Postgres on Ubuntu we need to run the following commands in our terminal.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo apt-get update\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo install Postgres\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo apt-get install postgresql postgresql-contrib libpq-dev\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eEnter\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ey\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewhen prompted “Do you want to continue?\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003e[Y/n]\u003c/strong\u003e” and wait as the installation completes.\u003c/p\u003e\r\n\u003ch4\u003eDefining a user role\u003c/h4\u003e\r\n\u003cp\u003ePostgres uses \"roles\" to aid in authentication and authorization. By default, Postgres creates a Postgres user and is the only user who can connect to the server.\u003c/p\u003e\r\n\u003cp\u003eWe want to create our own superuser role to connect to the server. \u003c/p\u003e\r\n\u003cp\u003eFor those running on elementary or parrot, run the following command first; \u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo service postgresql start\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003cbr\u003e\u003c/span\u003e\u003ccode\u003e$ sudo -u postgres createuser --superuser \u003cspan class=\"nv\"\u003e$USER\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eEnter your desired password when prompted.\u003c/p\u003e\r\n\u003cp\u003eWe then have to create a database with that\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e$USER\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elogin name, this is what Postgres expects as default.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo -u postgres createdb \u003cspan class=\"nv\"\u003e$USER\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNavigate to your home directory and enter the following command to create the .psql_history in order to save your history:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ touch .psql_history\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eYou can now connect to the postgres server by typing :\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ psql\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e2. Mac\u003c/h4\u003e\r\n\u003cp\u003eHomebrew makes it really easy to install Postgres. Just run:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e $ brew install postgres\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAfter it finishes installing, you'll need to configure your computer a bit. First, you need to tell Postgres where to find the database cluster where your databases will be stored:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e $ \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"export PGDATA=/usr/local/var/postgres\"\u003c/span\u003e \u0026gt;\u0026gt; ~/.bash_profile\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis command will help some programs find Postgres more easily:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"export PGHOST=/tmp\"\u003c/span\u003e \u0026gt;\u0026gt; ~/.bash_profile\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo load these configuration changes, run:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ \u003cspan class=\"nb\"\u003esource\u003c/span\u003e ~/.bash_profile\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo start the Postgres server, simply run:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ postgres\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eYou'll have to leave that window open while you need the server. To stop the server, press Ctrl + C (_not_ Cmd + C). If you want Postgres to boot at startup and run in the background, run:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e $ ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAnd to start it now (since it won't boot automatically until you restart your computer), run:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ pg_ctl start\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo prepare for the next lesson, create a default database with your computer's username:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ createdb \u003cspan class=\"nv\"\u003e$USER\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAnd you're done.\u003c/p\u003e\r\n\u003ch2\u003eDatabase Relationships\u003c/h2\u003e\r\n\u003cp\u003eDatabases are like linked spreadsheets. Each spreadsheet being like single\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etable\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003eShopping list\r\n------------------\r\n\r\n id |    item         | quantity\r\n ---+-----------------+------------\r\n 1  |  milk(packets)  | 7\r\n 2  |  shoe polish    | 4\r\n 3  | jewelry         | 5\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere is an example of a table displaying a shopping list.\u003c/p\u003e\r\n\u003ch3\u003eOne to many Relationships\u003c/h3\u003e\r\n\u003cp\u003eLet us assume we are running a school and want to manage the students and what courses they were taking. We would create two tables to hold the data for the courses and for the students\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003ecourses\r\n---------\r\n id |    course     \r\n ---+-----------------\r\n 1  |  Advanced Mathematics \r\n 2  |  Literature    \r\n 3  |  Visual art\r\n 4  |  Computer Science\r\n\r\n students\r\n ---------\r\n  id |    student        | course_id\r\n ---+--------------------+-----\r\n 1  |  James Muriuki     | 2\r\n 2  |  Christine Wasike  | 1\r\n 3  |  Moses Okemwa      | 3\r\n 4  |  Audrey Cheng      | 1\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe course_id in the students table references the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecolumn in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecourse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etable. Since a single course can be taken by multiple students we say the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecourse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etable has a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eone-to-many\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003erelationship with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estudent\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etable.\u003c/p\u003e\r\n\u003ch3\u003eMany to Many Relationships\u003c/h3\u003e\r\n\u003cp\u003eIt is very rare to find a school where all the students take on one course. Let us enable our students to take more than one course.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003ecourses\r\n---------\r\n id |    course     \r\n ---+-----------------\r\n 1  |  Advanced Mathematics \r\n 2  |  Literature    \r\n 3  |  Visual art\r\n 4  |  Computer Science\r\n\r\n students\r\n ---------\r\n id |    student        | course_id\r\n ---+--------------------+-----\r\n 1  |  James Muriuki     | 2\r\n 2  |  Christine Wasike  | 1\r\n 3  |  Moses Okemwa      | 3\r\n 4  |  Audrey Cheng      | 1\r\n 5  |  Moses Okemwa      | 2\r\n 6  |  Audrey Cheng      | 3\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we added more entries to our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estudents\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etable to allow the students to take on more courses. This is\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eNOT\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eadvisable because we do not want duplicate entries inside our tables.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003ecourses\r\n---------\r\n id |    course     \r\n ---+-----------------\r\n 1  |  Advanced Mathematics \r\n 2  |  Literature    \r\n 3  |  Visual art\r\n 4  |  Computer Science\r\n\r\n students\r\n ---------\r\n  id |    student        \r\n ---+--------------------\r\n 1  |  James Muriuki    \r\n 2  |  Christine Wasike \r\n 3  |  Moses Okemwa     \r\n 4  |  Audrey Cheng     \r\n\r\n\r\n enrollments\r\n ----------------\r\n   id | student_id | course_id\r\n ---+--------------+-----\r\n 1  |      1       | 2\r\n 2  |      2       | 1\r\n 3  |      3       | 3\r\n 4  |      4       | 1\r\n 5  |      3       | 2\r\n 6  |      4       | 3\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe Instead create a new table called a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ejoin\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003etable. This table will reference the Items on the other table using the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eid\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eattribute. When naming joining tables it is advisable to name them using the names of the tables that are being joined separated by underscores. If there is another name that could accurately describe the table it can be used instead.\u003c/p\u003e","exportId":"weekend-introduction-to-databases-database-relationships"},{"id":443,"title":"Weekend: SQL Basics; SQL ALchemy","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eSQL basics\u003c/h2\u003e\r\n\u003cp\u003eLet us learn how to interact with our database.\u003c/p\u003e\r\n\u003cp\u003eWe can access our database using the following command.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ psql\r\n\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e1) Creating a Database\u003c/h4\u003e\r\n\u003cp\u003eLet us create a new database\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e#  CREATE DATABASE school;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSQL commands are usually case insensitive but by convention we capitalize them. Every SQL command ends with a semicolon\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e;\u003c/code\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \\c school\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\c\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epsql command to connect to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eschool\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edatabase. We can view all the databases we have using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\l\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand.\u003c/p\u003e\r\n\u003ch4\u003e2) Creating Tables\u003c/h4\u003e\r\n\u003cp\u003eLet us create our course tables\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# CREATE TABLE courses (name varchar,full_time boolean);\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a course table with two columns for name and whether it is a full time or not. After we create the column name we then have to define the datatype of the column\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evarchar\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edefines that all data stored in the column is will be a String.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edata type states all the data stored will be a boolean either\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe can change the scheme of the table and add Items to it.\u003c/p\u003e\r\n\u003ch4\u003e3) Altering Tables\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# ALTER TABLE courses ADD student_number integer;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add an Integer column to the table where we can store the number of students taking the course.\u003c/p\u003e\r\n\u003cp\u003eWe can also drop columns\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# ALTER TABLE courses DROP student_number;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e4) Inserting into Tables\u003c/h4\u003e\r\n\u003cp\u003eWe can insert data into our table.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# INSERT INTO courses (name, full_time) VALUES ('Advanced Math',True);\u003c/span\u003e\r\n\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# INSERT INTO courses (name, full_time) VALUES ('Literature',True);\u003c/span\u003e\r\n\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# INSERT INTO courses (name, full_time) VALUES ('Computer science',True);\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e5) Retrieving data\u003c/h4\u003e\r\n\u003cp\u003eWe can select all the data from a particular column\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# SELECT name FROM courses ;\u003c/span\u003e\r\n       name       \r\n------------------\r\n Advanced Math\r\n Literature\r\n Computer science\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can also select all entries from the table\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# SELECT * FROM courses ; \u003c/span\u003e\r\nfull_time  \u003cspan class=\"p\"\u003e|\u003c/span\u003e       name       \r\n-----------+------------------\r\n t         \u003cspan class=\"p\"\u003e|\u003c/span\u003e Advanced Math\r\n t         \u003cspan class=\"p\"\u003e|\u003c/span\u003e Literature\r\n t         \u003cspan class=\"p\"\u003e|\u003c/span\u003e Computer science\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe wildcard\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e*\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etells psql to pick all the tables.\u003c/p\u003e\r\n\u003ch4\u003e6) Deleting data\u003c/h4\u003e\r\n\u003cp\u003eWe can delete values we set in our table\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e#  DELETE FROM courses * ;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis deletes all items from our table.\u003c/p\u003e\r\n\u003ch4\u003e7) Adding a Primary Key\u003c/h4\u003e\r\n\u003cp\u003eA\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eprimary key\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eis a unique identifier inside a table. It is assigned to a new row and is not repeated anywhere else in the table.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# ALTER TABLE course ADD id serial PRIMARY KEY;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eserial\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edata type to define an auto incremented integer.\u003c/p\u003e\r\n\u003ch3\u003eCreating a Password\u003c/h3\u003e\r\n\u003cp\u003eTo connect to our psql server we need to create a password for the User Role we created when setting up:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# ALTER USER james password 'New Pasword'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eReplace \u003ccode\u003e\u003cspan class=\"c1\"\u003ejames\u003c/span\u003e\u003c/code\u003e with your username and \u003ccode\u003e\u003cspan class=\"c1\"\u003e'New Pasword'\u003c/span\u003e\u003c/code\u003e with your desired password\u003c/p\u003e\r\n\u003ch4\u003eCommon SQL commands\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003eCREATE DATABASE database_name\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# From the $USER database.\u003c/span\u003e\r\n\r\nCREATE TABLE table_name \u003cspan class=\"o\"\u003e(\u003c/span\u003eid serial PRIMARY KEY, some_column varchar, another_column int\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\nALTER TABLE table_name ADD column_name boolean\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\n\r\nALTER TABLE table_name DROP column_name\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\n\r\n\r\nSELECT * FROM table_name WHERE id \u0026gt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\nSELECT * FROM contacts WHERE NOT id \u0026gt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\n\r\nUPDATE courses SET \u003cspan class=\"nv\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Poetry'\u003c/span\u003e WHERE \u003cspan class=\"nv\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\nDROP TABLE table_name\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# From the database that holds the table.\u003c/span\u003e\r\nDROP DATABASE test_database\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# From the $USER database.\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003ePostgresql commands\u003c/h4\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eList all databases: \\l.\u003c/li\u003e\r\n\u003cli\u003eExit out of help menu: \\q\u003c/li\u003e\r\n\u003cli\u003eConnect to database: \\c database_name\u003c/li\u003e\r\n\u003cli\u003eList tables in current database: \\dt\u003c/li\u003e\r\n\u003cli\u003eList columns in a table: \\d table_name\u003c/li\u003e\r\n\u003cli\u003eSee a list of all psql commands: \\? (Press the down arrow to scroll through, or q to exit list.)\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2\u003eSQLAlchemy\u003c/h2\u003e\r\n\u003cp\u003eSQLAlchemy is an Object relational mapper that allows us to create a mapping between the database and the Python Objects in our application. It allows us to interact with the database using Python objects that will be translated and mapped into SQL statements.\u003c/p\u003e\r\n\u003cp\u003eGoing back to our watchlist app, we will use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlask-SQLAlchemy\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eextension that will allow us to connect SQLAlchemy to our application\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-SQLAlchemy\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSQLAlchemy supports many kinds of databases. For our Postgres database, we will need a driver that will be helpful in connecting our application to our database\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install psycopg2\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe install\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epsycopg2\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich is our Postgres driver.\u003c/p\u003e\r\n\u003ch3\u003eSetting up SQLAlchemy\u003c/h3\u003e\r\n\u003cp\u003eFirst, we need to create a new database for our application.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ psql\r\npsql \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e9\u003c/span\u003e.5.8\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\nType \u003cspan class=\"s2\"\u003e\"help\"\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e help.\r\n\r\n\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe type in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epsql\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto connect to the postgres server.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e#  CREATE DATABASE watchlist;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then use an SQL command to create a database\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewatchlist\u003c/code\u003e.Note that all SQL commands end with a semicolon.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \\c watchlist \u003c/span\u003e\r\nYou are now connected to database \u003cspan class=\"s2\"\u003e\"watchlist\"\u003c/span\u003e as user \u003cspan class=\"s2\"\u003e\"james\"\u003c/span\u003e.\r\n\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then connect to the database using the Postgres\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\c\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand followed by the database name.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \\dt\u003c/span\u003e\r\nNo relations found.\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\dt\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand to check what tables are in our database. Since we have no tables created we get a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eNo relations found.\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eresponse.\u003c/p\u003e\r\n\u003cp\u003eYou can get all PostgreSQL commands by typing\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehelp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhile in the Postgres server.\u003c/p\u003e\r\n\u003cp\u003eNext SQLAlchemy needs one important configuration.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSQLALCHEMY_DATABASE_URI\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- this is the location of the database with authentication.\u003c/p\u003e\r\n\u003cp\u003eThe format for the URI is\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb+driver://username:password@host/database\u003c/code\u003e. We can define this URI inside our configuration file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eMOVIE_API_BASE_URL\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'https://api.themoviedb.org/3/movie/{}?api_key={}'\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eMOVIE_API_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSECRET_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'SECRET_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSQLALCHEMY_DATABASE_URI\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'postgresql+psycopg2://username:password@localhost/watchlist'\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create this configuration inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.Replace the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eusername\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith user we created when configuring PostgreSQL and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith the user's password.\u003c/p\u003e\r\n\u003cp\u003eWe can now initialize our extension.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_sqlalchemy\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eSQLAlchemy\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBootstrap\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003edb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSQLAlchemy\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSQLAlchemy\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# ....\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Initializing flask extensions\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhile in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eapplication factory function we then call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einit_app\u003c/code\u003emethod and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance.\u003c/p\u003e\r\n\u003cp\u003eWe will next consider how we can create models for our database. And then we can see how we can authenticate users.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here :\u003c/p\u003e\r\n\u003cp\u003e\u003ca href=\"https://github.com/mbuthiya/watchlist/tree/17-Configuring-database\"\u003ehttps://github.com/mbuthiya/watchlist/tree/17-Configuring-database\u003c/a\u003e\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"weekend-sql-basics-sql-alchemy"}]},{"id":61,"name":"Week 3","status":"completed","unlockDate":null,"prereqs":[60],"requirement":"all","sequential":false,"exportId":"i1389821f61f3b93b9ce69e889c976650","items":[{"id":2110,"title":"Monday: User Authentication Objectives","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003eThis week we will add a few additional features to our application. To start with, we are going to add a way to authenticate users who visit our application. This means creating a user authentication system which is going to entail user registration, password hashing and a login form. We'll also go further and create a user profile for our users where they can upload their pictures. \u003c/p\u003e\r\n\u003cp\u003eYour work this week will cover:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eCreating a User model.\u003c/li\u003e\r\n\u003cli\u003eRelational database basic such as One to Many relationships.\u003c/li\u003e\r\n\u003cli\u003eCRUD functionality implementation.\u003c/li\u003e\r\n\u003cli\u003eHow to migrate changes made in our models to the database schema.\u003c/li\u003e\r\n\u003cli\u003eUploading an image.\u003c/li\u003e\r\n\u003cli\u003eSending a welcome email to our users when they sign up.\u003c/li\u003e\r\n\u003cli\u003eUpdating our review model so that reviews are saved in the database.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e","exportId":"monday-user-authentication-objectives"},{"id":444,"title":"Monday: User Model","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eCreating The User model.\u003c/h2\u003e\r\n\u003cp\u003eModels are a way of abstracting and giving a common interface to data. We can now start creating a model to define our user data.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'users'\u003c/span\u003e\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__repr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'User {self.username}'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that will help us create new users. We pass in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.Model\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas an argument. This will connect our class to our database and allow communication.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e__tablename__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable allows us to give the tables in our database proper names. If not used SQLAlchemy will assume that the tablename is the lowercase of the class name.\u003c/p\u003e\r\n\u003cp\u003eSince a single user will represent a row in our table. We create columns using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.Column\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass which will represent a single column. We pass in the type of the data to be stored as the first argument.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.Integer\u003c/code\u003e\u003cspan\u003e \u003c/span\u003especifies the data in that column should be an Integer. Every row must have a primary key set to it. By default the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eColumn\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass has\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprimary_key\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eset to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e. We want to set it to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eon the id column to set it as the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprimary_key\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecolumn.\u003c/p\u003e\r\n\u003cp\u003eThe\u003ccode\u003edb.String\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass specifies the data in that column should be a string with a maximum of 255 characters.\u003c/p\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__repr__\u003c/code\u003emethod is not really important. It makes it easier to debug our applications.\u003c/p\u003e\r\n\u003ch3\u003eFlask-script shell\u003c/h3\u003e\r\n\u003cp\u003eFlask script allows us to create a Python shell inside our application. It will be useful to test features in our app and for debugging. We create this shell inside the _manage.py_ script\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# .....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp/__init__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile. We then import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003eclass from the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@manager.shell\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emake_shell_context\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003edict\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@manage.shell\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edecorator to create a shell context and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emake_shell_context\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction allows us to pass in some properties into our shell. We return the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eapplication instance,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edatabase instance and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003eWe can access the shell by running this command on the terminal:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py shell\r\n\u0026gt;\u0026gt;\u0026gt; db\r\n\u0026lt;SQLAlchemy \u003cspan class=\"nv\"\u003eengine\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003epostgresql+psycopg2://james:***@localhost/watchlist\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can confirm that our items have been passed into the shell by just typing them in and pressing enter. When we type\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewe get the database URI.\u003c/p\u003e\r\n\u003ch3\u003eCreating and Destroying Tables\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.create_all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst we need to create the table in our database. We run the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.create_all\u003c/code\u003ecommand to create tables and columns in our database.\u003c/p\u003e\r\n\u003cp\u003eUnfortunately SQLAlchemy does not have a way to automatically update when we have changed the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eschema\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eof our database. We have to drop everything and start again. To do this we run the command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.drop_all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eCRUD using SQLAlchemy\u003c/h3\u003e\r\n\u003cp\u003eEvery database follows the CRUD principles. 1. Create 2. Read 3. Update 4. Delete\u003c/p\u003e\r\n\u003ch4\u003e1) Create\u003c/h4\u003e\r\n\u003cp\u003eWe can now create users and insert them into our database. But first, we need to create the table in our database again since we dropped it.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.create_all()\u003cbr\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_james\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'James'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_christine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Christine'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe define two user models now we are ready to save them to our database. Notice we do not pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eparameter. This is because this is a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprimary_key\u003c/code\u003evalue that will auto increment as we keep adding users.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.session.add\u003cspan class=\"o\"\u003e(\u003c/span\u003euser_james\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.add\u003cspan class=\"o\"\u003e(\u003c/span\u003euser_christine\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSQLAlchemy uses sessions as a storage location for our database changes. They mark changes as ready for saving and committing.\u003c/p\u003e\r\n\u003cp\u003eWe then need to commit the data and save the changes to our database\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.session.commit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the session commit method to save our changes to the database. We can confirm all the changes have been saved when we go to the PostgreSQL server\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#watchlist \u003cbr\u003eselect * from users;\u003c/span\u003e\r\n id \u003cspan class=\"p\"\u003e|\u003c/span\u003e username  \r\n----+----------\r\n\u003cspan class=\"m\"\u003e1\u003c/span\u003e   \u003cspan class=\"p\"\u003e|\u003c/span\u003e  James\r\n\u003cspan class=\"m\"\u003e2\u003c/span\u003e   \u003cspan class=\"p\"\u003e|\u003c/span\u003e  Christine\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAdding users one at a time to our sessions can be tedious. Luckily there is an easier way to do it.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_lisa\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'lisa'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_victor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'victor'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.add_all\u003cspan class=\"o\"\u003e([\u003c/span\u003euser_lisa,user_victor\u003cspan class=\"o\"\u003e])\u003cbr\u003e\u0026gt;\u0026gt;\u0026gt; db.session.commit()\u003cbr\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e2) Read\u003c/h4\u003e\r\n\u003cp\u003eWe can now start querying our database to retrieve saved data.\u003c/p\u003e\r\n\u003ch5\u003ea) all() query.\u003c/h5\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eall()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003equery function to get all the items in the model.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003eusers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; users\r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eUser James, User Christine, User lisa, User victor\u003cspan class=\"o\"\u003e]\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe \u003ccode\u003e.all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\u003c/code\u003e function returns a list of all the entries listed with that model.\u003c/p\u003e\r\n\u003ch5\u003eb) first query.\u003c/h5\u003e\r\n\u003cp\u003eWe can also get the a single entry from our model.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003esingle_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.first\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; single_user\r\nUser James\r\n\u0026gt;\u0026gt;\u0026gt; \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efirst()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003equery function to get the first entry of our model.\u003c/p\u003e\r\n\u003ch5\u003ec) filter_by query\u003c/h5\u003e\r\n\u003cp\u003eWe can also filter out data we are receiving using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efilter_by\u003c/code\u003e\u003cspan\u003e \u003c/span\u003equery function.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.filter_by\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'James'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e.first\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; user\r\nUser James\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe pass in what we want to filter as an argument then we can choose whether to get all the items or just the first item.\u003c/p\u003e\r\n\u003ch5\u003ed) filter query\u003c/h5\u003e\r\n\u003cp\u003eThis is used as an alternative to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efilter_by\u003c/code\u003e\u003cspan\u003e \u003c/span\u003equery.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003eusers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.filter\u003cspan class=\"o\"\u003e(\u003c/span\u003eUser.id \u0026gt; \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e.all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; users\r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eUser Christine, User lisa, User victor\u003cspan class=\"o\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNotice how the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser James\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance is not displayed. This is because we started filtering our data from ids' that are greater than one.\u003c/p\u003e\r\n\u003ch5\u003ee) limit query\u003c/h5\u003e\r\n\u003cp\u003eWe can also limit the amount of responses we get.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e \u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003eusers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.limit\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e.all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; users\r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eUser James, User Christine\u003cspan class=\"o\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the limit query and pass in how many queries we need.\u003c/p\u003e\r\n\u003ch4\u003e3) Update\u003c/h4\u003e\r\n\u003cp\u003eWe can also use SQLAlchemy to update entries from our database.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003esingle_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.filter_by\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e.update\u003cspan class=\"o\"\u003e({\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"username\"\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\"James Muriuki\"\u003c/span\u003e\u003cspan class=\"o\"\u003e})\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.commit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we filter a query by getting the entry with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eof 1 and we call in the update function. We then pass in the property we want to update with the new value.\u003c/p\u003e\r\n\u003cp\u003eFinally we have to commit any changes we have in our database. We can confirm that the entry has been changed from the PostgreSQL server.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# select * from users;\u003c/span\u003e\r\n id \u003cspan class=\"p\"\u003e|\u003c/span\u003e   username    \r\n----+---------------\r\n  \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e Christine\r\n  \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e lisa\r\n  \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e victor\r\n  \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e James Muriuki\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e4\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e4) Delete\u003c/h4\u003e\r\n\u003cp\u003eWe can also remove entries from the database.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003esingle_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.filter_by\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e.first\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; single_user\r\nUser James Muriuki\r\n\u0026gt;\u0026gt;\u0026gt; db.session.delete\u003cspan class=\"o\"\u003e(\u003c/span\u003esingle_user\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.commit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the session delete function that we pass in the entry to delete. We finally commit the changes to the database. We can confirm that the entry has been removed from the PostgreSQL server.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# select * from users;\u003c/span\u003e\r\n id \u003cspan class=\"p\"\u003e|\u003c/span\u003e username  \r\n----+-----------\r\n  \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e Christine\r\n  \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e lisa\r\n  \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e victor\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eYou can find our application at this point from here https://github.com/mbuthiya/watchlist/tree/18-creating-first-model\u003c/p\u003e","exportId":"monday-user-model"},{"id":445,"title":"Monday: One to Many Relationships","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eOne to Many Relationship\u003c/h2\u003e\r\n\u003cp\u003eUsers have different levels of access in the application. We need to connect the users access with the User and the their level of access in our application.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRole\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'roles'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__repr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'User {self.name}'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a Role class that will define all the different roles. We create two columns for the ID and the name.\u003c/p\u003e\r\n\u003ch3\u003eCreating the relationship.\u003c/h3\u003e\r\n\u003cp\u003eRelationships are between two models that allow the models to reference each other. We want to create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eOne-Many\u003c/code\u003e\u003cspan\u003e \u003c/span\u003erelationship between our models. This is that one role can be shared by many different users.\u003c/p\u003e\r\n\u003cp\u003eWe need to create a connection between roles and users by using a Foreign Key. A Foreign key is a field in one table that references a primary key in another table.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'users'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003erole_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForeignKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'roles.id'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__repr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'User {self.username}'\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# .....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a new column in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erole_id\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand we give it an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eInteger\u003c/code\u003etype. We also pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.ForeignKey\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and pass in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'roles.id'\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument. This tells SQLAlchemy that this is a foreign key and is the ID of a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRole\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel.\u003c/p\u003e\r\n\u003cp\u003eWe also need to define that relationship inside our Roles model.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ....\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRole\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'roles'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erelationship\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'User'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ebackref\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'role'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"dynamic\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__repr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'User {self.name}'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.relationship\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto create a virtual column that will connect with the foreign key. We pass in 3 arguments. The first one is the class that we are referencing which is\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e. Next\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebackref\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eallows us to access and set our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass. We give it the value of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erole\u003c/code\u003e\u003cspan\u003e \u003c/span\u003enow because when we want to get the role of a user instance we can just run\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser.role\u003c/code\u003e. Lazy parameter is how SQLAlchemy will load our projects. The lazy option is our objects will be loaded on access and filtered before returning.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eRole\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@manager.shell\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emake_shell_context\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003edict\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRole\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRole\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRole\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and pass it into our shell context. Now we can update our database schema.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py shell\r\n\u0026gt;\u0026gt;\u0026gt; db.drop_all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.create_all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first have to drop the database and recreate it with the new model. We need to create the roles in our application\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003erole_admin\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Role\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Admin'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003erole_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Role \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'User'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.add_all\u003cspan class=\"o\"\u003e([\u003c/span\u003erole_admin,role_user\u003cspan class=\"o\"\u003e])\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.commit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create two roles and save them to our database.We can confirm these items have been added to our database .\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# select * from roles;\u003c/span\u003e\r\n id \u003cspan class=\"p\"\u003e|\u003c/span\u003e name  \r\n----+-------\r\n  \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e Admin\r\n  \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e User\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can now create Users.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_james\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"James Muriuki\"\u003c/span\u003e,role \u003cspan class=\"o\"\u003e=\u003c/span\u003e role_admin\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_christine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Christine\"\u003c/span\u003e,role \u003cspan class=\"o\"\u003e=\u003c/span\u003e role_user\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.add_all\u003cspan class=\"o\"\u003e([\u003c/span\u003euser_james,user_christine\u003cspan class=\"o\"\u003e])\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.commit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create our user instances by passing the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eusername\u003c/code\u003e. We also pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erole\u003c/code\u003evalue and equate it to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRole\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstances we created above. We can confirm the enries have been added by checking the PostgreSQL server.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# select * from users;\u003c/span\u003e\r\n id \u003cspan class=\"p\"\u003e|\u003c/span\u003e   username    \u003cspan class=\"p\"\u003e|\u003c/span\u003e role_id \r\n----+---------------+---------\r\n  \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e James Muriuki \u003cspan class=\"p\"\u003e|\u003c/span\u003e       \u003cspan class=\"m\"\u003e1\u003c/span\u003e\r\n  \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e Christine     \u003cspan class=\"p\"\u003e|\u003c/span\u003e       \u003cspan class=\"m\"\u003e2\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can query our data now.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003efirst_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.first\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; first_user.role\r\nUser Admin\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe target the first entry and then we check what role that user has. You can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/19-one-to-many-relationships\u003c/p\u003e","exportId":"monday-one-to-many-relationships"},{"id":446,"title":"Monday: Migration; Password Hashing","type":"WikiPage","indent":0,"locked":false,"requirement":"must_mark_done","completed":true,"content":"\u003ch2\u003eDatabase Migrations\u003c/h2\u003e\r\n\u003cp\u003eFunctionality of web apps changes and we need to track changes to our database. In our small application it is easy to just drop our database when we change the schema of our database. But when we have a large application we can't really afford to lose data everytime we change the structure of our models.\u003c/p\u003e\r\n\u003ch3\u003eAlembic\u003c/h3\u003e\r\n\u003cp\u003eAlembic is a tool that automatically creates and tracks\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003edatabase migrations\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003efrom changes to our SQL models. Database migrations are records of all the changes of our database schema.\u003c/p\u003e\r\n\u003cp\u003eAlembic allows us to upgrade or downgrade our database to saved versions\u003c/p\u003e\r\n\u003ch3\u003eFlask-Migrate\u003c/h3\u003e\r\n\u003cp\u003eWe will use the flask-migrate extension to create database migrations\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-migrate\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use pip to install the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eflask-migrate\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eextension.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.drop_all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNext we will drop our current database schema and use Flask-Migrate to create a new schema. We then need to initialize the flask extension\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#... \u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e  \u003cspan class=\"nn\"\u003eflask_migrate\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMigrate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMigrateCommand\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#... \u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMigrate\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMigrateCommand\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#.......\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003emigrate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMigrate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd_command\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'db'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eMigrateCommand\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#......\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then initialize the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMigrate\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance and the \u003ccode\u003edb\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eSQLAlchemy instance. We then create a new manager command\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'db'\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMigrateCommand\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003ch4\u003eInitializing\u003c/h4\u003e\r\n\u003cp\u003eTo use migrations we first need to Initialize our application to use Migrations.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py db init\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis will create a migrations folder in our root directory. This will be where our migration versions will be stored.\u003c/p\u003e\r\n\u003cp\u003eWe can now create the first migration\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py db migrate -m \u003cspan class=\"s2\"\u003e\"Initial Migration\"\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis will create a migration version.We can now upgrade to that version of the database.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py db upgrade\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can go to our psql server and see that all the tables and columns of our database have been created.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/20-Migrating-database\u003c/p\u003e\r\n\u003ch2\u003eUser Authentication\u003c/h2\u003e\r\n\u003cp\u003eWe now want to make sure our users are authenticated before they create a review on our application.\u003c/p\u003e\r\n\u003cp\u003eWe first need to create a Column in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eusers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etable that stores our passwords .\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epass_secure\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then update our database by running our migrate commands to record the change in the database schema and to upgrade to the new schema with the added column.\u003c/p\u003e\r\n\u003ch3\u003eSecuring our passwords\u003c/h3\u003e\r\n\u003cp\u003eThe key to making our users' information secure in our application, is not to store their passwords but\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ehashes\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eof the passwords. Password hashing is the act of taking a password and performing a series of cryptographic transformations to it.\u003c/p\u003e\r\n\u003cp\u003eHashed passwords can be verified in place of actual passwords because identical inputs produce an identical hash.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003emodels.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewerkzeug.security\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_password_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003echeck_password_hash\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFlask's Werkzeug’s security module provides hashing functionality with 2 methods.\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\n\u003cstrong\u003egenerating_password_hash \u003c/strong\u003e- This function takes in a password and generates a password hash.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003echeck_password_hash\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- This function takes in a hash password and a password entered by a user and checks if the password matches to return a True or False response.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eWe import these 2 functions and we will use them in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"n\"\u003epass_secure\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n        \u003cspan class=\"nd\"\u003e@property\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"ne\"\u003eAttributeError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'You cannot read the password attribute'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"nd\"\u003e@password.setter\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epass_secure\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_password_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n        \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003everify_password\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003echeck_password_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epass_secure\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@property\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edecorator to create a write only class property\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e. When we set this property we generate a password hash and pass the hashed password as a value to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epass_secure\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecolumn property to save to the database.\u003c/p\u003e\r\n\u003cp\u003eWe raise an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eAttributeError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto block access to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty. This is because it is not secure for Users to have access to that property.\u003c/p\u003e\r\n\u003cp\u003eWe create a method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003everify_password\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in a password, hashes it and compares it to the hashed password to check if they are the same.\u003c/p\u003e\r\n\u003cp\u003eWe can create a test file to test this. Create a new file\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_user.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einside our tests folder.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etest_user.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserModelTest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'banana'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_password_setter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_user\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epass_secure\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that creates an instance of our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass we then pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty. We then create a testcase\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_password_setter\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethis ascertains that when password is being hashed and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epass_secure\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econtains a value.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etest_user.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e    def test_no_access_password(self):\r\n            with self.assertRaises(AttributeError):\r\n                self.new_user.password\r\n\r\n        def test_password_verification(self):\r\n            self.assertTrue(self.new_user.verify_password('banana'))\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eThe second taste case confirms that our application raises an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eAttributeError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhen we try and access the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty The third test confirms that our password_hash can be verified when we pass in the correct password.\u003c/p\u003e\r\n\u003cp\u003e## Authentication Blueprint\u003c/p\u003e\r\n\u003cp\u003eWe now need to create a blueprint that will handle all our application authentication requests. Create a Python Package\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epackage. Create an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__.py\u003c/code\u003e. We also create a new _views.py__ file inside the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth\u003c/code\u003epackage.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBlueprint\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eauth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we simply create a Blueprint instance\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand we import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eviews module.\u003c/p\u003e\r\n\u003cp\u003e_app/auth/views.py_\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eauth\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@auth.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/login'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003elogin\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth/login.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogin\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function that renders a template file. This template is stored in a subfolder inside the templates folder\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etemplates/auth/login.html\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n    \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.auth\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eauth\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_blueprint\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregister_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eauth_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_prefix\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/authenticate'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe register our Blueprint instance in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction. We pass in a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_prefix\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument that will add a prefix to all the routes registered with that blueprint. We can access the login route\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elocalhost:5000/authenticate/login\u003c/code\u003e\u003c/p\u003e","exportId":"monday-migration-password-hashing"},{"id":447,"title":"Monday: Flask Login","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eFlask-Login\u003c/h2\u003e\r\n\u003cp\u003eThe Flask-Login is an extension that helps us manage the user authentication system\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-login\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe install the extension and we can Initialize it inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_login\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eLoginManager\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003elogin_manager\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eLoginManager\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elogin_manager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession_protection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'strong'\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elogin_manager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elogin_view\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'auth.login'\u003cbr\u003e\u003cbr\u003edef create_app(config_name):\u003cbr\u003e\u003c/span\u003e    #....\u003cbr\u003e    #Initializing Flask Extensions\u003cbr\u003e    bootstrap.init_app(app)\u003cbr\u003e    db.init_app(app)\u003cbr\u003e    login_manager.init_app(app)\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eLogin Manager\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the flask-login extension. We then create an instance of the class.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003elogin_manager.session_protection\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eattribute provides different security levels and by setting it to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estrong\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewill monitor the changes in a user's request header and log the user out.\u003c/p\u003e\r\n\u003cp\u003eWe prefix the login endpoint with the blueprint name because it is located inside a blueprint.\u003c/p\u003e\r\n\u003ch3\u003eAuthenticated routes\u003c/h3\u003e\r\n\u003cp\u003eSome routes like submitting a new review should only be accessible to users who are authenticated and need to be secured.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e#....\r\nfrom flask_login import login_required\r\n#....\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eflask_login has a decorator\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogin_required\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat will intercept a request and check if the user is authenticated and if not the user will be redirected to the login page.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e#....\r\n@main.route('/movie/review/new/\u0026lt;int:id\u0026gt;', methods = ['GET','POST'])\r\n@login_required\r\ndef new_review(id):\r\n#....\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eWe place the decorator after our new review route decorator.\u003c/p\u003e\r\n\u003ch3\u003eConfiguring Models\u003c/h3\u003e\r\n\u003cp\u003eWe need to configure our User model to work with the extension. For this to happen we need our model to implement four methods:\u003c/p\u003e\r\n\u003cp style=\"padding-left: 150px;\"\u003e1. is_authenticated() - Returns a boolean if a User is authenticated or not.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 150px;\"\u003e2. is_active()- Checks if a user is allowed to authenticate.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 150px;\"\u003e3. is_anonymous()- Returns a boolean if a user is anonymous.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 150px;\"\u003e4. get_id()- Returns a unique identifier for User.\u003c/p\u003e\r\n\u003cp\u003eFlask-login provides a class that has the basic implementations of these methods.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_login\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUserMixin\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUserMixin\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that we will pass into our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel. This helps us not to have to implement the methods for ourselves.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUserMixin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'users'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"n\"\u003eunique\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003erole_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForeignKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'roles.id'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epassword_hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe also add an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eemail\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecolumn to our module, this will help our users to have a better access to their accounts. Remember to create a new Migration after you change the model.\u003c/p\u003e\r\n\u003cp\u003eFlask-login also requires a callback function that retrieves a user when a unique identifier is passed.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_manager\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@login_manager.user_loader\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eload_user\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_id\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_id\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFlask-login has a decorator\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@login_manage.user_loader\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat modifies the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eload_user\u003c/code\u003efunction by passing in a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser_id\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto the function that queries the database and gets a User with that ID.\u003c/p\u003e\r\n\u003ch2\u003eRegistering New Users\u003c/h2\u003e\r\n\u003cp\u003eWe can now register new Users to our application. We first need to create the registration form. We create a new file inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epackage\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eforms.py\u003c/code\u003e. We then need to import it to our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth/___init___.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003eauth/__init__.py\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eforms\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can now create our registration form\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eauth /forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_wtf\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ePasswordField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms.validators\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eEmail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eEqualTo\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first need to import a few items. First, we import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlaskForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the\u003ccode\u003eflask_wtf\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eextension. Secondly, we also import some input fields to facilitate user input. We then import some Validators;\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eEmail\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evalidator makes sure that the input follows a proper email address structure and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eEqualTo\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e helps us in comparing the two password inputs.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eauth /forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRegistrationForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Your Email Address'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\u003cspan class=\"n\"\u003eEmail\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Enter your username'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePasswordField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Password'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e(), \u003c/span\u003e\u003cspan class=\"n\"\u003eEqualTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'password_confirm'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Passwords must match'\u003c/span\u003e\u003cspan class=\"p\"\u003e)])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epassword_confirm\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePasswordField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Confirm Passwords'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esubmit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Sign Up'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRegistrationForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eform class. We create four input fields.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eemail\u003c/code\u003efor the users email address, and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRequired\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eEmail\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evalidators.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eusername\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efor the username field,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword_confirm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efields. We pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eEqualTo\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evalidator to the password to make sure both passwords are the same before the form is submitted.\u003c/p\u003e\r\n\u003ch3\u003eCustom Validators\u003c/h3\u003e\r\n\u003cp\u003eWe can also add our own custom validators.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eauth /forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRegistrationForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e# .......\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidate_email\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edata_field\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003edata_field\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n                \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'There is an account with that email'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidate_username\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edata_field\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edata_field\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'That username is taken'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eValidationError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efrom wtforms and then create two methods.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003evalidate_email\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etakes in the data field and checks our database to confirm there is no user registered with that email address. If a user with the same email address is found,  a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eValidationError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis raised and the error message passed in is displayed. As a result, the form is not submitted.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003evalidate_username\u003c/code\u003e\u003cspan\u003e \u003c/span\u003echecks to see if the username is unique and raises a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eValidationError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eif another user with a similar username is found.\u003c/p\u003e\r\n\u003cp\u003eWhen a method inside a form class begins with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evalidate_\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eit is considered as a validator and is run with the other validators for that input field.\u003c/p\u003e\r\n\u003ch3\u003eRegistration route\u003c/h3\u003e\r\n\u003cp\u003e\u003cem\u003eauth/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.forms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eRegistrationForm\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# ....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@auth.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/register'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"GET\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"POST\"\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eregister\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRegistrationForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth.login'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"New Account\"\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth/register.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eregistration_form\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create the form instance and pass it into our template. When the form is submitted we create a new user from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel and pass in the email,username and password. We add the new user to the session and commit the session to add the user to our database.\u003c/p\u003e\r\n\u003cp\u003eOur user can then log in to the application and we redirect them to the login route.\u003c/p\u003e\r\n\u003cp\u003eWe can render the registration form with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewtf.quick_form()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/auth/register.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e{% extends 'base.html'%}\u003cbr\u003e{% import 'bootstrap/wtf.html' as wtf%}\u003cbr\u003e\u003cbr\u003e{% block content %}\u003cbr\u003e\u0026lt;div class=\"container\"\u0026gt;\u003cbr\u003e\u0026lt;div class=\"row\"\u0026gt;\u003cbr\u003e\u0026lt;div class=\"col-md-2\"\u0026gt; \u0026lt;/div\u0026gt;\u003cbr\u003e\u0026lt;div class=\"col-md-8\"\u0026gt;\u003cbr\u003e\u003cbr\u003e{{wtf.quick_form(registration_form)}}\u003cbr\u003e\u003cbr\u003e\u0026lt;/div\u0026gt;\u003cbr\u003e\u0026lt;div class=\"col-md-2\"\u0026gt;\u0026lt;/div\u0026gt;\u003cbr\u003e\u0026lt;/div\u0026gt;\u003cbr\u003e\u0026lt;/div\u0026gt;\u003cbr\u003e\u003cbr\u003e{% endblock%}\u003ccode\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch2\u003eLogin Users\u003c/h2\u003e\r\n\u003cp\u003eWe need to create a Login form that will give users access to some of the features of our application.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ePasswordField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eBooleanField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e.....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eBooleanField\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einput field that will render a checkbox in our form.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eLoginForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Your Email Address'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\u003cspan class=\"n\"\u003eEmail\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePasswordField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Password'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eremember\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBooleanField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Remember me'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esubmit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Sign In'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create 3 input fields for the users email,password and a boolean to confirm wheter the user wants to be logged out after the session.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003cbr\u003e\u003c/span\u003efrom flask import render_template,redirect,url_for, flash,request\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_login\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_user\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.forms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eLoginForm\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eRegistrationForm\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@auth.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/login'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emethods\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'GET'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'POST'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003elogin\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eLoginForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003everify_password\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003elogin_user\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremember\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'next'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'main.index'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003eflash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Invalid username or Password'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"watchlist login\"\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth/login.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst, we import flash and request functions from the flask module. The flash function helps us display error messages to the user.\u003c/p\u003e\r\n\u003cp\u003eWe create an instance of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eLoginForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass it into the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogin.html\u003c/code\u003etemplate. Then we check if the form is validated where we search for a user from our database with the email we receive from the form.\u003c/p\u003e\r\n\u003cp\u003eWe then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003everify_password\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to confirm that the password entered matches with the password hash stored in the database. If they match, we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogin_user\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction provided by the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eflask_login\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eextension to record the user as logged for that current session. It takes user object and the remember form data. If True it sets a long time cookie in your browser.\u003c/p\u003e\r\n\u003cp\u003eWe can now render the form in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogin.html\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etemplate using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewtf.quick_forms()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction.\u003c/p\u003e\r\n\u003cp\u003eTo confirm login state we can update our navigation bar.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/navbar.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e#....\r\n                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"nav navbar-nav navbar-right\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  {% if current_user.is_authenticated %}\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli style=\"color:white;padding:15px;\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{current_user.username}}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('auth.logout')}}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eSign out\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  {% else %}\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('auth.login')}}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eSign in\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  {%endif%}\r\n                \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n#....\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCurrent user is a variable that is defined by flask-login and is made available to all the view functions and templates.\u003c/p\u003e\r\n\u003cp\u003eNow that we have all that taken care of, let's update our login.html file to have a form and a link to the sign up page.\u003c/p\u003e\r\n\u003cp\u003elogin.html\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bootstrap/wtf.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003ewtf\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;div class=\"container\"\u0026gt; \u003cbr\u003e    \u0026lt;div class=\"row\"\u0026gt;\u003cbr\u003e      \u0026lt;div class= \"col-md-2\"\u0026gt; \u0026lt;/div\u0026gt;\u003cbr\u003e      \u0026lt;div class=\"col-md-8\"\u0026gt;\u003cbr\u003e      \u0026lt;!--Flash message --\u0026gt;\u003cbr\u003e      {% for message in get_flashed_messages() %}\u003cbr\u003e        \u0026lt;div class=\"alert alert-danger\"\u0026gt;\u003cbr\u003e        \u0026lt;button type=\"button\" class=\"close\" data-dismiss=\"alert\"\u0026gt;\u0026amp;times;\u0026lt;/button\u0026gt;\u003cbr\u003e        {{ message }}\u003cbr\u003e        \u0026lt;/div\u0026gt;\u003cbr\u003e      {% endfor %}\u003cbr\u003e      \u0026lt;!-- Login form --\u0026gt;\u003cbr\u003e      {{wtf.quick_form(login_form)}}\u003cbr\u003e      \u0026lt;p\u0026gt; Don't have an account? \u0026lt;a href=\"{{url_for('auth.register')}}\"\u0026gt;Sign up here\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt;\u003cbr\u003e     \u0026lt;/div\u0026gt;\u003cbr\u003e     \u0026lt;div clas=\"col-md-2\"\u0026gt; \u0026lt;/div\u0026gt;\u003cbr\u003e    \u0026lt;/div\u0026gt;\u003cbr\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eLog out\u003c/h3\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_login\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_user\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elogout_user\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elogin_required\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@auth.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/logout'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@login_required\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003elogout\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003elogout_user\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"main.index\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create an authenticated route\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogout\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat calls the flask_login's\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogout_user\u003c/code\u003efunction. This will logout the user from our application. We then redirect the user to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epage.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here \u003ca href=\"https://github.com/mbuthiya/watchlist/tree/25-creating-registration-form\"\u003ehttps://github.com/mbuthiya/watchlist/tree/25-creating-registration-form\u003c/a\u003e\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"monday-flask-login"},{"id":448,"title":"Tuesday: User Profile","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eCreating a Profile page\u003c/h2\u003e\r\n\u003cp\u003eWe can now create a profile for our new user. But first we need to update\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eso we can store more properties.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUserMixin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'users'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"n\"\u003eunique\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003erole_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForeignKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'roles.id'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eprofile_pic_path\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epassword_secure\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add two new columns; one for the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebio\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich is the users biography and\u003cspan\u003e  the other for \u003c/span\u003e\u003ccode\u003eprofile_pic_path\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto store the path of the profile photo. We can update our database by creating an updated migration file and upgrade the database.\u003c/p\u003e\r\n\u003cp\u003eNow let's create a profile view function.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eabort\u003cbr\u003efrom ..models import Reviews, User\u003cbr\u003e\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#.....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/user/\u0026lt;uname\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eprofile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eabort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"profile/profile.html\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#.....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eabort\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction, that stops a request, and returns a response according to the status code passed in. We then create a dynamic route that is handled by the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprofile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function.\u003c/p\u003e\r\n\u003cp\u003eWe then query the database to find the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eaccording to the username passed. If no user is found the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eabort\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis called and a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e404\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatus code is returned as a response. If a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis found we render a template and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas a variable.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/profile/profile.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;div class=\"container\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;div class=\"row\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- displaying  Username--\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e  \u0026lt;div class=\"col-md-4\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;h3\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003euser.username\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"nf\"\u003ecapitalize\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e \u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u0026lt;!--Displaying user bio--\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003euser.bio\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e      \u0026lt;p\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003euser.bio\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e      \u0026lt;p\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003euser.username\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"nf\"\u003ecapitalize\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e has no bio \u0026lt;/p\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendif\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e  \u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e  \u0026lt;!--Display profile photo--\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e  \u0026lt;div class=\"col-md-4\"\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003euser.profile_pic_path\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;img src=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'static'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003efilename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003euser.profile_pic_path\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\" alt=\"\" class=\"img-thumbnail\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;p\u0026gt;No profile picture\u0026lt;/p\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendif\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e  \u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a template file for our profile where we display our username, bio and profile picture of the User.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/navbar.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e....\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;ul class=\"nav navbar-nav navbar-right\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003ecurrent_user.is_authenticated\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u0026lt;li\u0026gt;\u0026lt;a href=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'main.profile'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003euname\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003ecurrent_user.username\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt;Profile\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u0026lt;li\u0026gt;\u0026lt;a href=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth.logout'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt;Sign out\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u0026lt;li\u0026gt;\u0026lt;a href=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth.login'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt;Sign in\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e\u003cspan class=\"k\"\u003eendif\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a link on our navigation bar to direct us to the profile page. This link will be visible only if a user is authenticated.\u003c/p\u003e\r\n\u003ch2\u003eEdit Profile\u003c/h2\u003e\r\n\u003cp\u003eWe want to update our bio to say something interesting about us.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUpdateProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTextAreaField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Tell us about you.'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esubmit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Submit'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a new form class\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUpdateProfile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat has only the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebio\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eTextarea form field.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.forms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eReviewForm\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eUpdateProfile\u003cbr\u003efrom .. import db\u003cbr\u003e\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the new form class into our _views.py_ module in our main blueprint. Also, we import db from our app since we will need it when saving profile information changes to the database.\u003c/p\u003e\r\n\u003cp\u003eWe can now create a view function that will handle an update request\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/user/\u0026lt;uname\u0026gt;/update'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'GET'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'POST'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@login_required\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate_profile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eabort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUpdateProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebio\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'.profile'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'profile/update.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eupdate_profile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function that takes in a username, and instantiates the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUpdateProfile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eform class.\u003c/p\u003e\r\n\u003cp\u003eWe query the database to find a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith the same\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eusername\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eIf the form is validated we update the content of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser.bio\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty to fill in what the user has submitted and redirect the user back to the profile page where he can see the new bio.\u003c/p\u003e\r\n\u003cp\u003eIf not we render the _update.html_ template and pass in the form instance.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/profile/profile.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e{% if user == current_user %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('main.update_profile',uname=user.username)}}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eEdit profile\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n{% endif %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a link to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eupdate_profile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function inside our _profile.html_ file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/profile/update.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bootstrap/wtf.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003ewtf\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003cbr\u003e\u003c/span\u003e\u0026lt;div class=\"container\"\u0026gt;\r\n\u003cspan class=\"x\"\u003e  \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003ewtf.quick_form\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003cbr\u003e\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\u0026lt;/div\u0026gt;\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eInside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eupdate.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003etemplate we call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewtf.quick_form()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in the form instance. This will display our update bio form with bootstrap styling.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/26-Creating-a-user-profile\u003c/p\u003e","exportId":"tuesday-user-profile"},{"id":449,"title":"Tuesday: Image Upload and Sending Email","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eUploading Images\u003c/h2\u003e\r\n\u003cp\u003eWe want our users to be able to upload their profile pictures to their profile. Flask-uploads is a very good extension that allows us to upload files to our flask application\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-uploads\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first install the extension then we can set it up.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_uploads\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUploadSet\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003econfigure_uploads\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eIMAGES\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#.............\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ephotos\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUploadSet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'photos'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eIMAGES\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#....................\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUploadSet\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that defines what type of file we are uploading. We pass in a name and the Type of file to upload which is an Image.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#........\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# configure UploadSet\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003econfigure_uploads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ephotos\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e#.......\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfigure_uploads\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUploadSet\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# ....\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eUPLOADED_PHOTOS_DEST\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'app/static/photos'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a new configuration\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUPLOADED_PHOTOS_DEST\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich specifies the destination to where we want to store our Images. We set the destination to be a photos folder inside our static folder.\u003c/p\u003e\r\n\u003cp\u003eIt is not advisable to store files inside the database. Instead we store the files inside our application and we store the path to the files in our database.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/profile/profile.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e........\r\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-md-4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    {% if user.profile_pic_path %}\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eimg\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('static',filename=user.profile_pic_path)}}\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"img-thumbnail\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    {%else%}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eNo profile picture\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    {% endif %}\r\n\r\n        {% if user == current_user %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e  \u003cspan class=\"na\"\u003eaction\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('main.update_pic',uname=user.username)}}\"\u003c/span\u003e \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"post\"\u003c/span\u003e \u003cspan class=\"na\"\u003eenctype \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"multipart/form-data\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"file\"\u003c/span\u003e  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"photo\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"form-control\"\u003c/span\u003e \u003cspan class=\"na\"\u003erequired\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"submit\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003cbr\u003e\u003c/span\u003e    \u0026lt;/form\u0026gt;\r\n      {% endif %}\r\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n .........\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a file upload form. To upload a file we need to use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eenctype = \"multipart/form-data\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eattribute on form tag.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e......\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ephotos\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e......\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/user/\u0026lt;uname\u0026gt;/update/pic'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emethods\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'POST'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@login_required\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate_pic\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s1\"\u003e'photo'\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003efilename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ephotos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efiles\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'photo'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'photos/{filename}'\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprofile_pic_path\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epath\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'main.profile'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ephotos\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance from our application factory module. We then create a route that will process our form submission request. This route only accepts post requests.\u003c/p\u003e\r\n\u003cp\u003eWe then query the database to pick a user with the same username we passed in. We then use the flask\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erequest\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to check if any parameter with the name\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ephoto\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ehas been passed into the request.\u003c/p\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to save the file into our application. We then create a path variable to where the file is stored. We then update the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprofile_pic_path\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty in our user table and store the path to the file.\u003c/p\u003e\r\n\u003cp\u003eWe finally commit the changes to the database and redirect the user back to the profile page.\u003c/p\u003e\r\n\u003ch2\u003eSending an Email\u003c/h2\u003e\r\n\u003cp\u003eWe want to thank our users and welcome them when they register for our application. Flask uses the Flask-Mail extension to send emails to users.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-mail\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe extension connects to a Simple Mail Transfer Protocol server. It passes the messages we want to send to the SMTP server and it delivers the server.\u003c/p\u003e\r\n\u003ch3\u003eConnecting To Gmail\u003c/h3\u003e\r\n\u003cp\u003eWe need our application to send emails through a google account. We need to setup some configuration files to connect to the gmail smtp server.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e#  email configurations\r\n    MAIL_SERVER = 'smtp.googlemail.com'\r\n    MAIL_PORT = 587\r\n    MAIL_USE_TLS = True\r\n    MAIL_USERNAME = os.environ.get(\"MAIL_USERNAME\")\r\n    MAIL_PASSWORD = os.environ.get(\"MAIL_PASSWORD\")\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eWe setup the SMTP server and configure the port to use the gmail SMTP server port.\u003cspan\u003e Then we set \u003c/span\u003e\u003ccode\u003eMAIL_USE_TLS\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econfiguration to true which enables a transport layer security to secure the emails when sending the emails.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003eMAIL_USERNAME\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMAIL_PASSWORD\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eare our email address and password to authenticate to the gmail SMTP server. We set them as environment variables.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003estart.sh\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e#.....\r\nexport MAIL_USERNAME=\u0026lt;Your Email Address\u0026gt;\r\nexport MAIL_PASSWORD=\u0026lt;Your Email Password\u0026gt;\r\npython3.6 manage.py server\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eHere we add the export code for the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMAIL_USERNAME\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMAIL_PASSWORD\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto our start script. This will export the variables to the environment every time we run our start script.\u003c/p\u003e\r\n\u003cp\u003eWe then can initialize the extension.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#........\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_mail\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMail\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#........\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003email\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMail\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#........\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003email\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#........\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMail\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the flask_mail extension and Initialize it.\u003c/p\u003e\r\n\u003cp\u003eWe now can create a module that will handle the email logic. We create the _email.py_ module inside the app directory.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/email.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_mail\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003email\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMessage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from flask_mail extension. We also import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003email\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance from the application factory module.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/email.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003email_message\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esubject\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etemplate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eto\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esender_email\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eYour\u003c/span\u003e \u003cspan class=\"n\"\u003eEmail\u003c/span\u003e \u003cspan class=\"n\"\u003eaddress\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esubject\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esender\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esender_email\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erecipients\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eto\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebody\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\".txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehtml\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\".html\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003email\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first create\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003esender_email\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewhere we store our email address.\u003c/p\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003email_message\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in 4 parameters which are the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003esubject\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eof the email, the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etemplate\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewhich is where we create the message body, We pass in the template without an extension because we need to create the text version and a HTML version, the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003erecipient\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand any keyword arguments.\u003c/p\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMessage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esubject\u003c/code\u003e, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esender_email\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erecipient\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe then set up the email body and HTML. We use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esend\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003email\u003c/code\u003einstance and pass in the email instance.\u003c/p\u003e\r\n\u003ch3\u003eSending Welcome Email\u003c/h3\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..email\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003email_message\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003email_message\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction in our auth blueprint _views.py_ file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@auth.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/register'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"GET\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"POST\"\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eregister\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRegistrationForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003email_message\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Welcome to watchlist\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"email/welcome_user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth.login'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"New Account\"\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth/register.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eregistration_form\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then call the function inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eregister\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function. We pass in the the subject and template file where our message body will be stored. We then pass in the new user's email address which we get from the registration form. We then pass in a user as a keyword argument.\u003c/p\u003e\r\n\u003cp\u003eWe can then create the email body and html templates. Create 2 new files\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewelcome_user.html\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewelcome_user.txt\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einside an email subfolder in our template folder.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/email/welcome_user.txt\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003eHello {{user.username}}\r\nWelcome to Watchlist\r\nWe have just seen you have signed up for our application and want to welcome you to the family. Please enjoy the reviews of all your  favourite films.\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eNow each time a user registers with our application they receive a welcome email from our application. You can find the application at this point here https://github.com/mbuthiya/watchlist/tree/28-sending-email\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"tuesday-image-upload-and-sending-email"},{"id":1077,"title":"Wednesday: White Board Interview Practice","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a text entry box","graded":true,"pointsPossible":12.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv class=\"description user_content teacher-version enhanced\"\u003e\r\n\u003cp\u003e\u003cspan\u003eTake time this morning and split into groups of 5. You will be practicing for white board interviews that will be touched on more during your project period. Pick one of you to take the mock white board interview, set a toy problem for them to go through, and at the end use the rubric below to grade and give feedback.\u003c/span\u003e\u003c/p\u003e\r\n\u003c/div\u003e","exportId":"i33647bfd10feec0165b0648d8317f719"},{"id":450,"title":"Wednesday: Updating Reviews Model and Tests","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003eUpdating Reviews Model\u003c/h2\u003e\r\n\u003cp\u003eNow that we have a database we can start saving our reviews to it. We need to update our reviews model.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edatetime\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e........\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'reviews'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_title\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eimage_path\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_review\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eposted\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edefault\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eutcnow\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003euser_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForeignKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"users.id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.Model\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass to create a connection to our database. We then add in 6 columns. We use in Python's datetime module to create a timestamp column\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eposted\u003c/code\u003e.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edatetime.utcnow\u003c/code\u003e\u003cspan\u003e \u003c/span\u003egets the current time and saves it to our database. We then create Foreign key column where we store the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eof the user who wrote the review.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUserMixin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'users'\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e.............\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erelationship\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Review'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ebackref\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'user'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"dynamic\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e..........\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe the define the relationship inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel. We can then create our Review methods\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e........\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'reviews'\u003c/span\u003e\r\n      \u003cspan class=\"o\"\u003e...........\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create two methods. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod will save the instance of the Review model to the session and commit it to the database. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method will take in a movie id and retrieve all reviews for that specific movie.\u003c/p\u003e\r\n\u003cp\u003eLet us now update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enew_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function.\u003cspan\u003e \u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003efrom flask_login import login_required, current_user\u003cbr\u003e#....\u003cbr\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/review/new/\u0026lt;int:id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'GET'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'POST'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@login_required\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003enew_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReviewForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n\r\n        \u003cspan class=\"c1\"\u003e# Updated review instance\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003enew_review\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_title\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eimage_path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_review\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent_user\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"c1\"\u003e# save review method\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'.movie'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'{movie.title} review'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'new_review.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereview_form\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we update how we define our save review instance. Let us also update our database.\u003cspan\u003e \u003c/span\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e.......\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eRole\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eReview\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e.......\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the Review model to\u003cspan\u003e \u003c/span\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. We can now create a new migration and upgrade our schema.\u003c/p\u003e\r\n\u003ch2\u003eUpdating Review Tests\u003c/h2\u003e\r\n\u003cp\u003eWe now need to update the review tests to test changes to our review model. First we need to create a test database and link it to our application. Let us activate our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epsql\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eserver and create a test database.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ psql\r\n\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# CREATE DATABASE watchlist_test WITH TEMPLATE watchlist\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create a new database\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewatchlist_test\u003c/code\u003e. We use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eWITH TEMPLATE\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto copy the schema of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewatchlist\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edatabase so both databases can be identical.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e........\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSQLALCHEMY_DATABASE_URI\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'postgresql+psycopg2://james:password@localhost/watchlist_test'\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSQLALCHEMY_DATABASE_URI\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'postgresql+psycopg2://james:password@localhost/watchlist'\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eDEBUG\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003econfig_options\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'development'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'production'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eProdConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'test'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eTestConfig\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then update our configuration files to add a new Config class\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTestConfig\u003c/code\u003e. Here we create a new\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSQLALCHEMY_DATABASE_URI\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto connect to our test database. We then move our development\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSQLALCHEMY_DATABASE_URI\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDevConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003eLet us now update our tests.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst, we need to import the SQLAlchemy database instance and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003cbr\u003e#....\u003cbr\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euser_James\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'James'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'potato'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'james@ms.com'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e12345\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_title\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Review for movies'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eimage_path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://image.tmdb.org/t/p/w500/jdjdjdjn\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_review\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'This movie is the best thing since sliced bread'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euser_James\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst we update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod. We create an instance of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand the instance of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReview\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhere we pass in the user instance.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etearDown\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe also update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etearDown\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod. Here we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003equery.delete\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that deletes all elements from the database after every test.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_check_instance_variables\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e12345\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Review for movies'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimage_path\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://image.tmdb.org/t/p/w500/jdjdjdjn\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_review\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'This movie is the best thing since sliced bread'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euser_James\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then check if the values of variables are correctly being placed.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_save_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a test for our save review method. We also query the database to confirm that we actually have data saved.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_get_review_by_id\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003egot_reviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e12345\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egot_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then test the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method that we pass in the id of a movie and get a response which is a review for that movie.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'test'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then need to update our app instance so that we can use the test database URI.\u003c/p\u003e\r\n\u003cp\u003eNow we can run our tests\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py \u003cspan class=\"nb\"\u003etest\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e","exportId":"wednesday-updating-reviews-model-and-tests"},{"id":451,"title":"Wednesday: Simple Review Editor; Converting Markdown to HTML","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eSimple Review Editor\u003c/h2\u003e\r\n\u003cp\u003eWriting our reviews in the textArea field can be tedious. Especially if we have really long reviews. We want to have a simple editor that will make it easier for us to write all our reviews\u003c/p\u003e\r\n\u003cp\u003eWe will use a plug in called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eflask-simplemde\u003c/strong\u003e, that will help us create a simple markdown editor allowing us to write our review in markdown. We will then download another python module\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emarkdown2\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat will help us convert the markdown to HTML code that we can use in our template.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evirtual\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epip\u003c/span\u003e \u003cspan class=\"n\"\u003einstall\u003c/span\u003e \u003cspan class=\"n\"\u003eflask\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003esimplemde\u003c/span\u003e \u003cspan class=\"n\"\u003emarkdown2\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then need to instantiate it inside our application factory function.\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e..........\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_simplemde\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eSimpleMDE\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e.....\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003esimple\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSimpleMDE\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e........\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esimple\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNext we need to set up configurations for the extension.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e# simple mde  configurations\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSIMPLEMDE_JS_IIFE\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSIMPLEMDE_USE_CDN\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThese two extensions are required by the extension for it function. We can then connect the SimpleMDE CDN to our application template\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etemplates/base.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e........\r\n\r\n{%block styles %}\r\n  {{super()}}\r\n  \u003cspan class=\"c\"\u003e\u0026lt;!--Importing the simple mde css and js files  --\u0026gt;\u003c/span\u003e\r\n  {{ simplemde.css}}\r\n  {{ simplemde.js }}\r\n\r\n{% endblock %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblock styles\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock where we use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{super()}}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto maintain any code that was defined in that code block inside our bootstrap's\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. We then define the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{ simplemde.css}}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{ simplemde.js }}\u003c/code\u003e. These two define the link to the simpleMDE CDN.\u003c/p\u003e\r\n\u003cp\u003eWe can now load the markdown editor where we load our new review form.\u003cem\u003etemplates/new_review.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-md-4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            {{ wtf.quick_form(review_form) }}\r\n            {{simplemde.load}}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe load the simpleMDE editor by calling\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{simplemde.load}}\u003c/code\u003e. This find the text area field and apply changes to it. Now when we launch our application we will see a simple markdown editor on our review page.\u003c/p\u003e\r\n\u003ch2\u003eConvert Markdown To HTML\u003c/h2\u003e\r\n\u003cp\u003eOur reviews are saved as markdown and we need to convert it to a readable HTML code that we can use in our template. We first create a route to handle viewing a single review.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003emain/views.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e........\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003emarkdown2\u003c/span\u003e  \r\n\u003cspan class=\"o\"\u003e.....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/review/\u0026lt;int:id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esingle_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eabort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eformat_review\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emarkdown2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emarkdown\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_review\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eextras\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"code-friendly\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"fenced-code-blocks\"\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'review.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eformat_review\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eformat_review\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst we import the\u003cspan\u003e \u003c/span\u003e\u003cem\u003emarkdown2\u003c/em\u003e\u003cspan\u003e \u003c/span\u003emodule which will be responsible for the conversion from markdown to HTML.\u003c/p\u003e\r\n\u003cp\u003eWe then create the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esingle_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function that will be responsible for handling requests for a single review. It takes in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty of the review. We query the database to get a single review with the the same id as the one passed in and we check if the review is available. We then call markdown2's\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emarkdown\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in two arguments.The first is the markdown that is being converted, here, we pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereview.movie_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich is the movie review that is in markdown. The second argument is a lists of styling to style the HTML.\u003c/p\u003e\r\n\u003cp\u003eWe then render the template and pass in the formatted HTML\u003cspan\u003e \u003c/span\u003e\u003cem\u003ereview.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e{% extends 'base.html'%}\r\n\r\n{% block content%}\r\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"container-fluid\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"row\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-sm-4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eimg\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{review.image_path}}\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"img-responsive\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-sm-8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      {{format_review|safe}}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n{%endblock%}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esafe\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efilter to prevent jinja template from formatting our html. Then we create a link to our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esingle_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function inside our macros file.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- Displaying reviews macro --\u0026gt;\u003c/span\u003e\r\n{% macro displayReviews(review_list) %}\r\n\r\n    {% for review in review_list %}\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"row\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-xs-2 col-sm-2 col-md-4 col-lg-4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh4\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eAuthor\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh4\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{review.user.username}}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-xs-10 col-sm-10 col-md-8 col-lg-8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('main.single_review',id=review.id)}}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{review.movie_title}}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    {% endfor %}\r\n{% endmacro %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create an anchor tag that links to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esingle_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function and passes in the review id.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003emain/forms.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv\u003e\r\n\u003cpre\u003e\u003cspan\u003e#.....\u003cbr\u003eclass\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eReviewForm\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eFlaskForm\u003c/span\u003e\u003cspan\u003e):\u003c/span\u003e\u003cbr\u003e\u003cbr\u003e\u003cspan\u003e title \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e StringField(\u003c/span\u003e\u003cspan\u003e'Review title'\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003evalidators\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e[Required()])\u003c/span\u003e\u003cbr\u003e\u003cbr\u003e\u003cspan\u003e review \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e TextAreaField(\u003c/span\u003e\u003cspan\u003e'Movie review'\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cbr\u003e\u003cbr\u003e\u003cspan\u003e submit \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e SubmitField(\u003c/span\u003e\u003cspan\u003e'Submit'\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003eLastly, we modify our forms.py to remove the validator field in the \u003ccode\u003ereview\u003c/code\u003efield.\u003c/p\u003e\r\n\u003cp\u003eWe can launch our application to see everything is properly set.\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"wednesday-simple-review-editor-converting-markdown-to-html"},{"id":452,"title":"Thursday:  Deploying to Heroku","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eDeploy Database apps to Heroku\u003c/h2\u003e\r\n\u003ch3\u003eDeploy Configuration Variables\u003c/h3\u003e\r\n\u003cp\u003eWe need to now configure our Heroku server for deployment.We have made a lot of changes since we last deployed. First we need to set configuration variables for our email username and password.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku config:set \u003cspan class=\"nv\"\u003eMAIL_USERNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;YOUR EMAIL ADDRESS\u0026gt;\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku config:set \u003cspan class=\"nv\"\u003eMAIL_PASSWORD\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;YOUR EMAIL PASSWORD\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eSet up Postgres on Heroku\u003c/h3\u003e\r\n\u003cp\u003eNext we want to set up a Postgres database on our Heroku server.\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003eheroku addons:create heroku-postgresql\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eThis database's URI will be stored in Heroku in the configuration variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDATABASE_URL\u003c/code\u003e. We then need to define this new Database URI inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003econfig.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProdConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSQLALCHEMY_DATABASE_URI\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"DATABASE_URL\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eProdConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass by placing the production\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSQLALCHEMY_DATABASE_URI\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand setting it to the environment variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDATABASE_URL\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe then need to update the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile to access the new database URI.\u003c/p\u003e\r\n\u003ch3\u003eUpdating application for production\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003emanage.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e..........\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'production'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e..........\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eproduction\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eoption from our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfig_options\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edictionary. This will change our app's configurations to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eProdConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003eNext we need to update our requirements.txt file to pick the new extensions and modules we have used.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip freeze \u0026gt; requirements.txt\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRemember to remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epkg-resources==0.0.0\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eline to prevent throwing an error when deploying.\u003c/p\u003e\r\n\u003ch3\u003ePushing To Heroku\u003c/h3\u003e\r\n\u003cp\u003eWe can now add and commit our changes and push the application to Heroku.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ git push heroku master\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe now need to define our database schema on our Heroku database.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku run python3.6 manage.py db upgrade\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis will create a database schema on Heroku. We can now visit the website to make sure everything works.\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","exportId":"thursday-deploying-to-heroku-2"},{"id":908,"title":"Thursday: General Interview Questions","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample General Questions\u003c/span\u003e\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eTell me about yourself\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eState three adjectives that best describe you\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat do you know about the company?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat do you find interesting about this job?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat do you consider to be your weaknesses?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat is your greatest achievement?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhere do you see yourself in 5 years?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eGiven a tight deadline, how would you handle the pressure?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eHow would you handle a case of criticism?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eHow much are you looking to get paid?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhy should we hire you over someone else?\u003c/span\u003e\u003c/li\u003e\r\n\u003col\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat makes you the best candidate for the job?\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDo you have any questions for us?\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ol\u003e","exportId":"thursday-general-interview-questions"},{"id":909,"title":"Thursday: Answering General Interview Questions","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch2\u003e\u003cspan style=\"font-weight: 400;\"\u003eGeneral Interview Questions\u003c/span\u003e\u003c/h2\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“Tell me about yourself”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThis seems like such a simple question, but it can really make you sweat especially in an interview. This is not an invitation to recite your entire life story or your CV. Instead, it’s your first and best chance to pitch the hiring manager on who you are and why you’re the right one for the job. Use your personal narrative to answer this question, tailoring to the job you’re applying for and person you’re talking to.\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSo, first start with the present, where you are right now.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThen, segue into the past. If you have had an employment history, talk a little bit about the experiences you’ve had and the skills you gained at previous positions.   Also, Just because you didn't get paid for something doesn't mean that it doesn't count as experience. Responsibilities volunteering and side jobs count! You can apply the skills you learned doing those tasks to any position. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAim to focus on skills that are relevant to the job you are interviewing for. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eFinally, finish with the future, why you are really excited for this particular opportunity.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eUse your personal narrative.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What do you know about our company?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThis question is asked\u003c/span\u003e\u003cspan style=\"font-weight: 400;\"\u003e to gauge your real interest in the job and the employer. Make a point of researching the potential employer, including:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat they do \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eProducts or services\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMajor partnerships\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSize of the company\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMajor competitors and how they compare with those competitors\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ePlans for growth or expansion\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eCompany culture\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWork environment\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eValues, mission, and vision\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYour answer should highlight why you are a good fit for the position in context of the information you have about the company. Your potential employer wants to see that you are aware of the nature and strengths of the business and how you can contribute.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou can also weave this information into your answers to other questions they ask to show that you’ve researched the organization and are genuinely interested in the role.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI see that your company has been in business for fifteen years now, with an excellent reputation for creating Mobile Apps and  payment systems for major companies in Africa. Your clients range from the common man to major companies and banks. I am very interested to learn about the Mobile Apps that you create to support payments systems for different clients and \u003c/span\u003e\u003cspan style=\"font-weight: 400;\"\u003eI am particularly attracted to the vision of your company. I appreciate that the business has focused on meeting customers needs in a friendly and innovative way. Your approach is admirable, and I believe my orientation to customer service plus my software engineering skills will allow me to build products for [company name] that are high-quality and user-focused.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What do you find interesting about this job?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen asked this question, the interviewer wants to know why you decided to apply specifically for this job, and why the position fits you and your career plans. Here are a few tips on how you can answer this question:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe specific: make sure that your answers are to the point and not ambiguous. Mention specific job qualities and career advantages that you find on this role that interest you.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe truthful: simply put, if you like a job you will excel at it. If you are working somewhere just for the money, there are chances that you will not like the job and will leave quickly.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe real: show your true excitement over the problems you will be solving, and how you and the organization will grow through your contributions.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI’m really excited about this role because of the opportunity to work in such a solid team environment. I always wanted to work with hard-working, professional, experienced people. I love contributing to the team effort, bringing out the best in myself and in my teammates for fulfilling our work goals and reaching top results.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI trust that I can perform well by applying sound principles of teamwork. I appreciate receiving timely and consistent feedback designed to improve not only my performance as well but the team’s performance as well. I consult with people, try my best and treat everyone positively and equally.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI also love the agriculture sector - in my last job, I worked in agriculture and decided to become a software engineer to solve problems faced by people like myself.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What do you consider to be your weaknesses?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen the interviewer asks you this question, they are trying to see how well you respond to a question that is intentionally meant to throw you off. When you prepare for this question, you will want to pick a weakness that is a strength in disguise, or one that presents a current strength as a recovered weakness. The answer to this question has two parts. First is the confession to the problem. The last part is the recovery: how did you minimize the weakness, and how are you working to improve on it.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI do not like confrontation, and in the past found myself at times compromising what I wanted or needed in order to keep the peace. This was a real problem, especially in team situations or when I was supposed to be leading a group because there are times when you need to tell people things they might not necessarily want to hear. Since then I’ve realized this is a weakness of mine and I’ve worked very hard to overcome it. Now instead of avoiding those situations, I take it as an opportunity to practice being more assertive without coming across as difficult. I take the time to listen to each side of the situation and make sure that if I have any comments or criticisms that they are constructive and that the solutions I offer are actual solutions and not just “peace patches” (which in this case means opting for peace for the sake of keeping the peace but the truth is that the situation has not been solved. You choose to maintain peace by sweeping everything under the rug).\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What is your greatest achievement?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eChoose an achievement that is related to the position and is fairly recent. Review the job description. What skills are listed as necessary for the job? This will guide you to the most relevant answer for this employment interview question. Reflect upon achievements that demonstrated the required skill. Describe your accomplishment and highlight the job-related skills you used. Point out how the results of your accomplishment.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExamples\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eRecently I was asked to implement a new system to reduce our debtors days. I analyzed the problems with the current system, got input from all the stakeholders, and developed a faster way of getting the accounts out and monitoring follow up. Our debtors days reduced significantly and we are currently on target for collections.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI was part of the rowing team that recently won the championships. It was a particularly satisfying win as we had trained very hard, requiring a lot of discipline and perseverance, to come up from the bottom of the league. We also really had to work together as a team and keep each other motivated.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“Where do you see yourself in 5 years?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe interviewer wants to understand more about your career goals and \u003c/span\u003e\u003ca href=\"http://biginterview.com/blog/2012/01/what-employers-want-job-interview.html\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ehow this position would fit\u003c/span\u003e\u003c/a\u003e\u003cspan style=\"font-weight: 400;\"\u003e into your grand plan. They care about your career goals because they want to hire someone who is motivated, proactive, and likely to stick around and work hard if hired. To answer this question:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eKeep your answer fairly general and truthful, but broad enough that it doesn’t raise doubts about whether you would be a good fit for this position at this organization. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eStress your interest in a long-term career at the company because the interviewer wants to know that you’re ready to settle in and grow with the firm.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDemonstrate your enthusiasm for the job as an exciting next step for you. Most importantly, make it clear that you are motivated to take on this opportunity right now.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI am driven to be the best at what I do and I want to work somewhere where I’ll have opportunities to develop my skills, take on interesting projects, and work with people I can really learn from. M\u003c/span\u003e\u003cspan style=\"font-weight: 400;\"\u003eost importantly, I want to work for an organization where I can build a career.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“Given a tight deadline how would you handle the pressure?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003ePressure and stress are unavoidable aspects of the world we live in. The interviewer will be looking to identify that you recognise that pressure and stress are facts of life, that you understand the effect pressure and stress has on you and that you are sufficiently robust to be able to take them in your stride.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eT\u003c/span\u003e\u003cspan style=\"font-weight: 400;\"\u003ehe key to formulating your answer to this question is to:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSeize this as an opportunity to talk about a situation or an occasion where you were under pressure and you how rose to the challenge. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAvoid conveying the impression that the fact you were under pressure was in any way your own fault or due to your own personal failings. Place the ‘blame’ firmly on external factors outside of your control.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eFrom a personal perspective, I manage stress by prioritizing my responsibilities so that I have a clear idea of what needs to be done when it needs to be done. This has helped me effectively manage pressure when working on projects. For example, there was a time I not only had my own personal projects to work on but a group project as well that we were working on with a  few friends for a client and they were all due in a week's time and on the same day. When faced with such a situation I usually prioritize my tasks by working on the easier projects first then narrowing down to the most challenging projects that need more time. And in this case that is what I did and I was able to complete all projects and deliver quality work..\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e\"How would you handle a case of criticism?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eInterviewers might be interested to hear about some mistakes you have done in your experience as a developer, but what they are really asking is how you respond in stressful situations and whether you can take correction with a good attitude. They are wondering if you are able to work well under a variety of management styles or if criticism will make you feel angry or undervalued. \u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen you answer this question, you want to emphasize your ability to handle criticism. This is your opportunity to showcase how you are willing to humbly make improvements in projects or professionalism when required.\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eTalk about how you listened and made changes when a someone critiqued your work.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eExplain a situation where you improved your performance after receiving constructive criticism.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eEmphasize that you enjoy doing quality work and have learned to value the input of experienced leaders.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMention why you are flexible and professional when working with others with whom you may at times disagree.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eDuring my stay at Moringa School I received input from my Technical Mentor that helped me to see how my work could be improved. Once I was asked to revise a project that I had spent a lot of time on, but after listening carefully to the critique, I saw how I could make changes that would strengthen the finished product. Through fixing those critiques, my project was much higher quality and I became a much stronger engineer in the process. I am eager to learn from people with different views and experiences, and appreciate constructive feedback.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“How much are you looking to get paid?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eDepending on your answer, you can price yourself out of a job offer by saying a number that is too high, or you can get less than the company can afford to pay you by saying a number that is lower than their budget for the position (companies always create budgets of what they can pay for each position they hire for). \u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThis is one of the trickiest questions to answer since it's so easy to give a self-defeating response. The key to answering this question well is to prepare in advance by researching salaries at the company, and in similar positions in the same industry. Here are some strategies to try when asked how much you expect to get paid.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eBy providing a number, two big things can go wrong:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou say a number that is too high for the company’s budget, and they remove you as a candidate for the position because you are too expensive.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou say a number that is lower than their budget for the position, and you end up not making as much money because you have told them that you are willing to work for less.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eInstead, say:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003e“I am very interested in this opportunity, and am excited to contribute to [company name]. Given my skills and experience, I believe my salary should be competitive to market rates. What is your budgeted range for this position, and what do you think is fair based off other people in the organization in this position?”\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eOther important tactics:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDo your research. Not only should you know the average salary for your industry, but it's also wise to know geographical information as well. Salaries can vary widely based on the cost of living in the area, as well as the number of qualified applicants nearby.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ePlay it coy. Avoid saying a number first. You can say something like, \"I would love to know more about the position and its responsibilities before thinking about salary.\"\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eKeep your cost-of-living needs in mind. It can feel game-like to negotiate a strategy, but it's important to keep your financial needs front and center. Will the salary you request cover your expenses? If not, how will you make up the difference? Weigh your needs against the research you've done about salary and if the two numbers aren't as close to each other, it could be a sign that the role isn't a good match.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eGet information from the interviewer. Use this question as an opportunity to flip the tables on the interviewer, and find out what the salary range is for the position. You can ask \u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What is the range you have in mind for the position?”\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What are some non-salaried benefits available?”\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eIf you have to answer, provide a range, rather than an actual number.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“Why should we hire you and not anybody else?/ What makes you the best candidate for the job?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen a hiring manager asks you this question she or he is really asking, “What makes you the best fit for this position?” \u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYour answer to this question should be a concise “sales pitch” that explains what you have to offer the employer. Remember that employers hire workers to solve a problem, whether it’s boosting sales or streamlining processes or building a brand. Your goal when making your pitch is to show that you’re the best person to solve that problem.The better you do that, the better your chances of landing the job.\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou want your answer to be brief no more than a minute or two long.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003e Begin by explaining what you believe the employer is looking for, and how you fulfill that need. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe interviewer wants to know how you stand out among the other applicants. Therefore, focus on one or two qualities you possess that are different from what other interviewees might offer, or are more difficult to find in candidates generally. \u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou describe in the job listing that you are looking for a junior developer who is hardworking and has a quick learning ability. Having served as a tutor an intern at Craft Silicon, I have developed my ability to be extremely hardworking and handle pressure. My experience as an intern has taught me strategies for working in a professional environment for example team work, time management and flexibility. \u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“Do you have any questions for us?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003e!!!ALWAYS HAVE QUESTIONS TO ASK TO THE INTERVIEWER!!!\u003c/strong\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYour answer to this question should \u003c/span\u003e\u003cstrong\u003ealways\u003c/strong\u003e\u003cspan style=\"font-weight: 400;\"\u003e be yes. It shows that you’re engaged and interested in the position, and you are seriously considering the role.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou will have to use your judgment about the number of questions you ask and when to ask them. Think of this as a \u003c/span\u003e\u003ca href=\"https://www.monster.com/career-advice/article/interview-as-a-conversation\"\u003e\u003cspan style=\"font-weight: 400;\"\u003econversation\u003c/span\u003e\u003c/a\u003e\u003cspan style=\"font-weight: 400;\"\u003e. There will be an appropriate time to ask certain types of questions, like those about benefits and vacation. Don’t ask about those questions upfront, they make it sound like you’re just looking for an easy paycheck. Instead, concentrate on questions about the job's responsibilities and how you fit the position until you get the actual offer.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen you begin to think of the interview as a two way process, you will see it is important for you to find out as much as possible about the company. Questions will give you the opportunity to find out if this is a good place for you to work before you say yes.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExamples\u003c/span\u003e\u003c/h4\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat are the first three projects that I would be working on?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli\u003eWhat does a typical day look like?\u003c/li\u003e\r\n\u003cli\u003eWhat are the biggest challenges that someone in this position would face?\u003c/li\u003e\r\n\u003cli\u003eWhat are the skills and experiences you’re looking for in an ideal candidate?\u003c/li\u003e\r\n\u003cli\u003eWhat attributes does someone need to have in order to be really successful in this position?\u003c/li\u003e\r\n\u003c/ol\u003e","exportId":"thursday-answering-general-interview-questions"},{"id":711,"title":"Friday: Independent Project","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a text entry box or a website url","graded":true,"pointsPossible":23.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003ch3\u003eGoal\u003c/h3\u003e\r\n\u003cp\u003eThe purpose of this independent project is to demonstrate your understanding of the content you covered throughout the week. \u003c/p\u003e\r\n\u003ch3\u003eOverall Project Description\u003c/h3\u003e\r\n\u003cp\u003eIn life, you only have 60 seconds to impress someone. 1 minute can make or break you. How do we make sure that you use your 1 minute to actually say something meaningful?\u003c/p\u003e\r\n\u003cp\u003eYour task this week is to create an application that allows users to use that one minute wisely. The users will submit their one minute pitches and other users will vote on them and leave comments to give their feedback on them.\u003c/p\u003e\r\n\u003cp\u003eThe pitches are organized by category. You can have different categories like pickup lines, interview pitch, product pitch, promotion pitch.(You don't have to use these categories, you can come up with your own creative categories) \u003c/p\u003e\r\n\u003cp\u003eThe pitches should be arranged by category and the new posts should be displayed first.\u003c/p\u003e\r\n\u003ch3\u003eUser Story\u003c/h3\u003e\r\n\u003cp\u003eHere are some user stories to help you get started:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eAs a user, I would like to see the pitches other people have posted.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to vote on the pitch they liked and give it a downvote or upvote.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to be signed in for me to leave a comment\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to receive a welcoming email once I sign up.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to view the pitches I have created in my profile page.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to comment on the different pitches and leave feedback.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to submit a pitch in any category.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to view the different categories.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003eUI Design\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan\u003eYour application should have a clean, simple, well-organized user interface. Ensure you choose a consistent colour scheme and use appropriate fonts for your application. Also, you\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eMUST\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecreate a mockup design for your application before you begin development.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003eYou can use the following resources to design your application:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003ePen and Paper - For Mockup design.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"http://getbootstrap.com/\" target=\"_blank\"\u003e\u003cspan\u003eBootstrap\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For simple responsive UI elements\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"https://coolors.co/\" target=\"_blank\"\u003e\u003cspan\u003eCoolors\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For Color scheme generation.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"https://dillinger.io/fonts.google.com\" target=\"_blank\"\u003e\u003cspan\u003eGoogle fonts\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For beautiful fonts\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003ch3\u003eProject Objectives\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eYour project must have a user model.\u003c/li\u003e\r\n\u003cli\u003eIn your models, implement at least 1 one-to-many relationship.\u003c/li\u003e\r\n\u003cli\u003eYour project should have a comment model.\u003c/li\u003e\r\n\u003cli\u003eYour project should have a profile page.\u003c/li\u003e\r\n\u003cli\u003eYour project should follow the proper folder structure.\u003c/li\u003e\r\n\u003cli\u003eYour project should have a functioning authentication system.\u003c/li\u003e\r\n\u003cli\u003eYour project should contain migration files for the different model structure.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eTechnical Requirements\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eCreate a specs markdown file that lists down all the projects specifications.\u003c/li\u003e\r\n\u003cli\u003eAll your models should contain unittests to test the different behaviours. All your test should pass.\u003c/li\u003e\r\n\u003cli\u003eYour project should be deployed to Heroku.\u003c/li\u003e\r\n\u003cli\u003eYour project should contain proper commit messages.\u003c/li\u003e\r\n\u003cli\u003eProject is polished and in portfolio-quality state\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eFurther exploration\u003c/h3\u003e\r\n\u003cp\u003eYou can create a favourite pitch section where you list all the favourite pitches\u003c/p\u003e","exportId":"i0f55083b1c9bd6c2a9600d25fe879ecf"},{"id":1091,"title":"Friday: IP review","type":"Assignment","indent":0,"locked":false,"submissionTypes":null,"graded":true,"pointsPossible":18.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cp\u003eThe following scale will be used to grade your Independent Project based on the criteria, please submit your links to your TM.\u003c/p\u003e","exportId":"ibcaa5bd754e036330c2ac47f036ade78"}]},{"id":62,"name":"Week 4","status":"completed","unlockDate":null,"prereqs":[61],"requirement":null,"sequential":false,"exportId":"i75a9ea3b24a0782646dc92710293f42f","items":[{"id":2114,"title":"Monday: Project Week Objectives","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eThe past few weeks we have learnt a lot. We have learnt on: 1. Proper application structure. 2. Creating a virtual environment. 3. Working with views and templates. 4. Creating and working with models. 5. Unittesting. 6. Object Oriented programming in python. 7. Working with databases. 8. Using extensions to customize our application\u003c/p\u003e\r\n\u003cp\u003eWe can now test that knowledge by creating a series of projects that you and your pair can tackle. Take each project as if it was given by a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ereal client\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand work with your pair to complete it in a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eprofessional\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003emanner.\u003c/p\u003e\r\n\u003cp\u003eYou will be given a set of two optional Projects. You and your pair can pick one that you can complete. Every Morning You and your pair will have to present the project to your class during standup\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2018 Moringa School.\u003c/p\u003e","exportId":"monday-project-week-objectives"},{"id":689,"title":"Monday: Team Week - Project Pitch","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003eIn the 5th week of this course we will be working on web applications in groups of four. In preparation, we'll take the coming week to generate ideas and sign up for teams, so we'll be organized and ready to go first thing Monday of week 5!\u003c/p\u003e\r\n\u003ch3\u003eHomework\u003c/h3\u003e\r\n\u003chr\u003e\r\n\u003cp\u003eGenerate an idea you would like to help develop into a working application. It could be a game, a new business idea, something educational, something fun, something to help others or something to change the world, an application or website a friend or family member could use, etc.\u003c/p\u003e\r\n\u003ch4\u003ePast Student Work\u003c/h4\u003e\r\n\u003cp\u003eHere are just a few examples of the types of projects past students have built during Team Week:\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eSites to plan activities.\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eVacations, camping trips, road trips, weddings, pub crawls, organizing your friends together for a weekend.\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eRide sharing\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eA car pooling site fro people using the same routes\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eApps to lend a hand.\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eLocate stolen bikes, missing pets, organize resources after natural disasters,\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eTools to connect people.\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eHelping musicians find other musicians for jam sessions, puppy play date finders, dating sites, interest-based meetups or communication tools, virtual study groups.\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eGames\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eText-oriented games like \"Choose your own adventure\"-style storytelling games, room escape, RPGs, word games, Oregon Trail.\u003c/p\u003e\r\n\u003cp\u003eDigital versions of your favorite games, such as Clue, Poker, Magic, Chess, Monopoly, Cards Against Humanity, Breakout, matching games, etc.\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eProductivity Tools\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eChecklists, organizers, note-taking, household grocery or to-do lists.\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eWebsites for real people.\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eWebsites and apps for local businesses, family friends, etc.\u003c/p\u003e\r\n\u003ch3\u003eTimeline\u003c/h3\u003e\r\n\u003chr\u003e\r\n\u003ch4\u003e\u003cstrong\u003eMonday and Tuesday\u003c/strong\u003e\u003c/h4\u003e\r\n\u003ch5\u003e\u003cstrong\u003e\u003cem\u003eBrainstorm Ideas\u003c/em\u003e\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eMonday morning, begin listing project ideas on the glass wall including:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eA Title and brief description of the project\u003c/li\u003e\r\n\u003cli\u003eYour name\u003c/li\u003e\r\n\u003cli\u003eThe language you are learning\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eOver the first two days of the week, ideas will be added and updated on the board. Students may sign up as they see projects that interest them. Talk to potential groups; ask questions; sign up for a project you feel most interested in and passionate about!\u003c/p\u003e\r\n\u003ch4\u003e\u003cstrong\u003eWednesday\u003c/strong\u003e\u003c/h4\u003e\r\n\u003ch5\u003e\u003cstrong\u003e\u003cem\u003eSign Up\u003c/em\u003e\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eEveryone is required to sign up for a team no later than Wednesday. Remember, all teams should contain 4 students. If a team already has 4 people, it is full and cannot take on additional members. Sign up by entering your full name next to a project.\u003c/p\u003e\r\n\u003ch4\u003e\u003cstrong\u003eThursday\u003c/strong\u003e\u003c/h4\u003e\r\n\u003ch5\u003e\u003cstrong\u003e\u003cem\u003eConfirmation\u003c/em\u003e\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eOn Thursday Technical Mentors will confirm all teams have 4 members and a project idea to begin working on next week. If teams are short of members we'll help facilitate connecting with additional teammates, or re-arranging teams as necessary.\u003c/p\u003e\r\n\u003cp\u003eWhile you won't begin work on your project until the following Monday, you're encouraged to trade contact information with your teammates and start any planning or brainstorming outside of class\u003c/p\u003e","exportId":"monday-team-week-project-pitch"},{"id":690,"title":"Monday: Pomodoro","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003eYour office is full of workaholics. No one takes breaks, No one goes for lunch, and the only interesting thing that you can ever talk about with your workmates, are the new cool updates on\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eSlack\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eYour team lead is afraid at this pace people will start burning out soon. He contracts you to build an application that will remind your coworkers to take a break.\u003c/p\u003e\r\n\u003ch4\u003eSpecifications\u003c/h4\u003e\r\n\u003col\u003e\r\n\u003cli\u003eA user should be able to log into the application.\u003c/li\u003e\r\n\u003cli\u003eA user should be able to set the amount of time he/she wants to work. It should not be more than an hour.\u003c/li\u003e\r\n\u003cli\u003eA user should be able to set the amount of time he/she wants to be on break. It should not be more than 10 min and not less than 5 min.\u003c/li\u003e\r\n\u003cli\u003eA user should specify what he/she wants to do with their break time before they start working.\u003c/li\u003e\r\n\u003cli\u003eA user should see how much time they are have left for working or taking a break. (A countdown clock).\u003c/li\u003e\r\n\u003cli\u003eA user should see how many work sessions he/she has completed.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eProject specs\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eShould be presented in a high quality manner.\u003c/li\u003e\r\n\u003cli\u003eShould be well documented with comments and have a detailed\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eREADME\u003c/strong\u003e.\u003c/li\u003e\r\n\u003cli\u003eIt should have a detailed specs file with what your project can actually do.\u003c/li\u003e\r\n\u003cli\u003eIt should be published to heroku.\u003c/li\u003e\r\n\u003cli\u003eYou and your pair should be listed as contributors to the project.\u003c/li\u003e\r\n\u003cli\u003eThe project should have a requirements.txt file with all the projects dependencies.\u003c/li\u003e\r\n\u003cli\u003eThe project should be deployed and hosted.\u003c/li\u003e\r\n\u003c/ol\u003e","exportId":"monday-pomodoro"},{"id":691,"title":"Tuesday: Pizza Shop","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003eThe local pizza shop is trying to get more customers in by creating an online pizza ordering system. They have contacted you and your pair to build the system for them and have promised you a years worth of pizza as payment.\u003c/p\u003e\r\n\u003ch3\u003eUser Story\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eA user can see the available pizzas\u003c/li\u003e\r\n\u003cli\u003eA user can choose any pizza he/she wants and add it to cart.\u003c/li\u003e\r\n\u003cli\u003eA user should be prompted if he wants any extra toppings with the pizza.\u003c/li\u003e\r\n\u003cli\u003eA user should receive an email with a receipt for the pizza he/she ordered with the total price.\u003c/li\u003e\r\n\u003cli\u003eThe pizza shop should be able to update the pizza menu by adding or removing pizzas Even by updating pizza prices.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eProject specs\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eShould be presented in a high quality manner.\u003c/li\u003e\r\n\u003cli\u003eShould be well documented with comments and have a detailed\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eREADME\u003c/strong\u003e.\u003c/li\u003e\r\n\u003cli\u003eIt should have a detailed specs file with what your project can actually do.\u003c/li\u003e\r\n\u003cli\u003eIt should be published to heroku.\u003c/li\u003e\r\n\u003cli\u003eYou and your pair should be listed as contributors to the project.\u003c/li\u003e\r\n\u003cli\u003eThe project should have a requirements.txt file with all the projects dependencies.\u003c/li\u003e\r\n\u003cli\u003eThe project should be deployed and hosted.\u003c/li\u003e\r\n\u003c/ol\u003e","exportId":"tuesday-pizza-shop"},{"id":1078,"title":"Wednesday: White Board Interview Practice","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a text entry box","graded":true,"pointsPossible":12.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cdiv class=\"description user_content teacher-version enhanced\"\u003e\r\n\u003cp\u003e\u003cspan\u003eTake time this morning and split into groups of 5. You will be practicing for white board interviews that will be touched on more during your project period. Pick one of you to take the mock white board interview, set a toy problem for them to go through, and at the end use the rubric below to grade and give feedback.\u003c/span\u003e\u003c/p\u003e\r\n\u003c/div\u003e","exportId":"i33647bfd10feec0165b0648d8317f719"},{"id":692,"title":"Wednesday: Movie of the day","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003eSome people just have terrible taste in entertainment and might need some help. Your Job is to make an application that sends a daily movie recommendation to a person via email.\u003c/p\u003e\r\n\u003cp\u003eUsing\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://www.themoviedb.org/\"\u003eTMDB\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eapi to fetch movie data and sort it according to the users taste.\u003c/p\u003e\r\n\u003ch3\u003eUser Story\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eA user can sign up for your subscription service.\u003c/li\u003e\r\n\u003cli\u003eA user can input the different genres of movies that he/she is interested in.\u003c/li\u003e\r\n\u003cli\u003eA user gets daily movie recommendations straight to their email.\u003c/li\u003e\r\n\u003cli\u003eA user can also get Youtube trailer link to watch the movie trailer on Youtube.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eProject specs\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eShould be presented in a high quality manner.\u003c/li\u003e\r\n\u003cli\u003eShould be well documented with comments and have a detailed\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eREADME\u003c/strong\u003e.\u003c/li\u003e\r\n\u003cli\u003eIt should have a detailed specs file with what your project can actually do.\u003c/li\u003e\r\n\u003cli\u003eIt should be published to Heroku.\u003c/li\u003e\r\n\u003cli\u003eYou and your pair should be listed as contributors to the project.\u003c/li\u003e\r\n\u003cli\u003eThe project should have a requirements.txt file with all the projects dependencies.\u003c/li\u003e\r\n\u003cli\u003eThe project should be deployed and hosted.\u003c/li\u003e\r\n\u003c/ol\u003e","exportId":"wednesday-movie-of-the-day"},{"id":693,"title":"Thursday: Interview Questions","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003col\u003e\r\n\u003cli\u003eWhat is Python ?\u003c/li\u003e\r\n\u003cli\u003eIn what areas can we use the Python Language?\u003c/li\u003e\r\n\u003cli\u003eWhat is the disadvantage of using Python compared to other compiled languages like Java?\u003c/li\u003e\r\n\u003cli\u003eDefine a Python module, script and package.\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference in using Python 2+ and Python 3+?\u003c/li\u003e\r\n\u003cli\u003eName the top 3 programmer caused Python errors.\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between a list and a tuple ?\u003c/li\u003e\r\n\u003cli\u003eWhat is a set?\u003c/li\u003e\r\n\u003cli\u003eName the various data types in Python.\u003c/li\u003e\r\n\u003cli\u003eWhat is a decorator?\u003c/li\u003e\r\n\u003cli\u003eDefine pypi?\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between Python built in modules and external modules?\u003c/li\u003e\r\n\u003cli\u003eWhat is flask?\u003c/li\u003e\r\n\u003cli\u003eHow does flask differ from other frameworks?\u003c/li\u003e\r\n\u003cli\u003eWhat comes built in in flask?\u003c/li\u003e\r\n\u003cli\u003eWhat is a virtual environment and why is it useful?\u003c/li\u003e\r\n\u003cli\u003eWhat is a template?\u003c/li\u003e\r\n\u003cli\u003eWhat is a view function?\u003c/li\u003e\r\n\u003cli\u003eDefine a http request?\u003c/li\u003e\r\n\u003cli\u003eWhat is a flask extension?\u003c/li\u003e\r\n\u003cli\u003eWhat is a Model ?\u003c/li\u003e\r\n\u003cli\u003eWhat is an ORM and how does it differ from conventional ways of interacting with a database?\u003c/li\u003e\r\n\u003cli\u003eWhat is needed to connect to SQLALCHEMY?\u003c/li\u003e\r\n\u003cli\u003eWhat is an application factory?\u003c/li\u003e\r\n\u003cli\u003eWhat is a blueprint?\u003c/li\u003e\r\n\u003cli\u003eHow can you connect a blueprint to an application factory?\u003c/li\u003e\r\n\u003cli\u003eWhat is a migration file?\u003c/li\u003e\r\n\u003cli\u003eWhy are migration files useful?\u003c/li\u003e\r\n\u003cli\u003eWhy do we use flask-script in our application?\u003c/li\u003e\r\n\u003cli\u003eExplain the http request response cycle when a person visits a url.\u003c/li\u003e\r\n\u003cli\u003eState 4 types of responses that can be returned by a view function.\u003c/li\u003e\r\n\u003cli\u003eWhat is the purpose of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction?\u003c/li\u003e\r\n\u003cli\u003eWhat is the purpose of a requirements.txt file?\u003c/li\u003e\r\n\u003cli\u003eWhat are app configurations?\u003c/li\u003e\r\n\u003cli\u003eHow are different kind of variables defined in Jinja2 templates ?\u003c/li\u003e\r\n\u003cli\u003eWhat are macros?\u003c/li\u003e\r\n\u003cli\u003eDefine template Inheritance.\u003c/li\u003e\r\n\u003cli\u003eWhat are\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblocks\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein Jinja templates ?\u003c/li\u003e\r\n\u003cli\u003eHow are templates reused in Jinja2 ?\u003c/li\u003e\r\n\u003cli\u003eWhat are variable filters ?\u003c/li\u003e\r\n\u003cli\u003eHow are static files stored in a flask application ?\u003c/li\u003e\r\n\u003cli\u003eHow is authentication managed in a flask application ?\u003c/li\u003e\r\n\u003cli\u003eWhat are database sessions ?\u003c/li\u003e\r\n\u003cli\u003eDescribe one-many database relationships.\u003c/li\u003e\r\n\u003cli\u003eHow do you create a one-many database relationship with SQLAlchemy?\u003c/li\u003e\r\n\u003cli\u003eWhat is a Foreign Key?\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between a SQL database and a Nosql database?\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between a GET and POST request?\u003c/li\u003e\r\n\u003cli\u003eWhat is CSRF and why do we need to protect our applications from it?\u003c/li\u003e\r\n\u003cli\u003eWhat is a status code and what do the various status codes mean?\u003c/li\u003e\r\n\u003c/ol\u003e","exportId":"thursday-interview-questions"},{"id":699,"title":"Friday: Independent Project ","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a text entry box or a website url","graded":true,"pointsPossible":22.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003ch3\u003eGoal\u003c/h3\u003e\r\n\u003cp\u003eThe purpose of this independent project is to demonstrate your understanding of the content you covered throughout the week\u003c/p\u003e\r\n\u003ch3\u003eOverall Project Description\u003c/h3\u003e\r\n\u003cp\u003eThe past few weeks have proven that you can learn anything. And a great way to solidify your knowledge is to teach it to other people. There is no better way to express your ideas and opinions than with a personal blog.\u003c/p\u003e\r\n\u003cp\u003eYour task for this week is to create a personal blogging website where you can create and share your opinions and other users can read and comment on them.\u003c/p\u003e\r\n\u003ch3\u003eUser story\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eAs a user, I would like to view the blog posts submitted\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to comment on blog posts\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to view the most recent posts\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to alerted when a new post is made by joining a subscription.\u003c/li\u003e\r\n\u003cli\u003eAs a writer, I would like to sign in to the blog.\u003c/li\u003e\r\n\u003cli\u003eAs a writer, I would also like to create a blog from the application.\u003c/li\u003e\r\n\u003cli\u003eAs a writer, I would like to delete comments that I find insulting or degrading.\u003c/li\u003e\r\n\u003cli\u003eAs a writer, I would like to update or delete blogs I have created.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eUI Design\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan\u003eYour application should have a clean, simple, well-organized user interface. Ensure you choose a consistent colour scheme and use appropriate fonts for your application. Also, you\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eMUST\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecreate a mockup design for your application before you begin development.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003eYou can use the following resources to design your application:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003ePen and Paper - For Mockup design.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"http://getbootstrap.com/\" target=\"_blank\"\u003e\u003cspan\u003eBootstrap\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For simple responsive UI elements\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"https://coolors.co/\" target=\"_blank\"\u003e\u003cspan\u003eCoolors\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For Color scheme generation.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"https://dillinger.io/fonts.google.com\" target=\"_blank\"\u003e\u003cspan\u003eGoogle fonts\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For beautiful fonts\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eProject Objectives\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eYour project should have a functioning authentication system.\u003c/li\u003e\r\n\u003cli\u003eYour project should contain migration files for the different model structure.\u003c/li\u003e\r\n\u003cli\u003eYour project must have a user model.\u003c/li\u003e\r\n\u003cli\u003eYour project should have a comment model.\u003c/li\u003e\r\n\u003cli\u003eYour project should have a profile page.\u003c/li\u003e\r\n\u003cli\u003eYour project should implement Ajax functionality.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eTechnical Requirements\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eCreate a specs markdown file that lists down all the projects specifications.\u003c/li\u003e\r\n\u003cli\u003eAll your models should contain unit tests to test the different behaviours. All your test should pass.\u003c/li\u003e\r\n\u003cli\u003eYour project should follow the proper folder structure.\u003c/li\u003e\r\n\u003cli\u003eYour project should be deployed to Heroku.\u003c/li\u003e\r\n\u003cli\u003eYour project should contain proper commit messages.\u003c/li\u003e\r\n\u003c/ol\u003e","exportId":"iaa6f6db92ef0a3b7ee11a636858b691e"},{"id":1092,"title":"Friday: IP review","type":"Assignment","indent":0,"locked":false,"submissionTypes":null,"graded":true,"pointsPossible":18.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cp\u003eThe following scale will be used to grade your Independent Project based on the criteria, please submit your links to your TM.\u003c/p\u003e","exportId":"ibcaa5bd754e036330c2ac47f036ade78"},{"id":910,"title":"Weekend: Agile Methodologies","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSCRUM Master \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe SCRUM master is a facilitator for an agile development team. They have a deep understanding of SCRUM principles and how to enact them in a team. The SCRUM master is responsible for:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eHelping the team to reach consensus on what can be achieved during a specific sprint.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eHelping the team to reach consensus during the daily stand up.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eHelping the team to stay focused and follow the agreed-upon rules for daily SCRUMs.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eRemoving obstacles that are impeding the team's progress.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eProtecting the team from outside distractions.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eProduct Owner \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe SCRUM product owner is typically a project's key stakeholder. Part of the product owner responsibilities is to have a vision of what he or she wishes to build, in conjunction with the customer’s vision, and convey that vision to the SCRUM team. This is key to successfully starting any agile software development project. The agile product owner does this in part through the product backlog, which is a prioritized features list for the product.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch2\u003e\u003cspan style=\"font-weight: 400;\"\u003eSCRUM Events \u003c/span\u003e\u003c/h2\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003ePrescribed events are used in SCRUM to create regularity and to minimize the need for meetings not defined in SCRUM. All events are time-boxed events, such that every event has a maximum duration. \u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eOther than the Sprint itself, which is a container for all other events, each event in SCRUM is a formal opportunity to inspect and adapt something. These events are specifically designed to enable critical transparency and inspection. Failure to include any of these events results in reduced transparency and is a lost opportunity to inspect and adapt.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSprint \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe heart of Scrum is a Sprint, a time-box of one month or less during which a “Done,” which means it must be in useable condition and meet the Scrum Team's definition of “Done.”, useable, and potentially releasable product increment(a sum of all the Product Backlog items completed during a Sprint and the value of the increments of all previous Sprints.) is created. Sprints best have consistent durations throughout a development effort. A new Sprint starts immediately after the conclusion of the previous Sprint. Sprints contain and consist of the Sprint Planning, Daily stand up, the development work, the Sprint Review, and the Sprint Retrospective. During the Sprint:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eNo changes are made that would endanger the sprint goal.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eQuality goals do not decrease.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eScope may be clarified and re-negotiated between the Product Owner and Development Team as more is learned.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSprint Planning \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe work to be performed in the Sprint is planned at the Sprint Planning. This plan is created by the collaborative work of the entire Scrum Team. The output of this is called the sprint backlog.The Sprint Goal is an objective set for the Sprint that can be met through the implementation of Product Backlog. It provides guidance to the Development Team on why it is building the Increment. It is created during the Sprint Planning meeting. Sprint Planning is time-boxed to a maximum of eight hours for a one-month Sprint. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches the Scrum Team to keep it within the time-box. Sprint Planning answers the following:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat can be delivered in the Increment resulting from the upcoming Sprint?\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eHow will the work need to deliver the Increment be achieved?\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eDaily Stand-up\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Daily Scrum is a 15-minute time-boxed event for the Development Team to synchronize activities and create a plan for the next 24 hours. This is done by inspecting the work since the last Daily Scrum and forecasting the work that could be done before the next one. The Daily Scrum is held at the same time and place each day to reduce complexity. During the meeting, the Development Team members explain:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat did I do yesterday that helped the Development Team meet the Sprint Goal?\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat will I do today to help the Development Team meet the Sprint Goal?\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eDo I see any impediment that prevents me or the Development Team from meeting the Sprint Goal?\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSprint Review /Demo\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eA Sprint Review is held at the end of the Sprint to inspect the Increment and adapt the Product Backlog if needed. During the Sprint Review, the Scrum Team and stakeholders collaborate about what was done in the Sprint. Based on that and any changes to the Product Backlog during the Sprint, attendees collaborate on the next things that could be done to optimize value. This is an informal meeting, not a status meeting, and the presentation of the Increment is intended to elicit feedback and foster collaboration. A demo of the increment is to be shown at this point as per the MVPs(discussed later) set. This is a four-hour time-boxed meeting for one-month Sprints. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches all to keep it within the time-box. The Sprint Review includes the following elements:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eAttendees include the Scrum Team and key stakeholders invited by the Product Owner.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Product Owner explains what Product Backlog items have been “Done” and what has not been “Done”.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Development Team discusses what went well during the Sprint, what problems it ran into, and how those problems were solved.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Development Team demonstrates the work that it has “Done” and answers questions about the Increment.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Product Owner discusses the Product Backlog as it stands. He or she projects likely completion dates based on progress to date (if needed).\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe entire group collaborates on what to do next so that the Sprint Review provides valuable input to subsequent Sprint Planning.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eReview of how the marketplace or potential use of the product might have changed what is the most valuable thing to do next.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eReview of the timeline, budget, potential capabilities, and marketplace for the next anticipated release of the product.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe result of the Sprint Review is a revised Product Backlog that defines the probable Product Backlog items for the next Sprint. The Product Backlog may also be adjusted overall to meet new opportunities.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSprint Retrospective \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Sprint Retrospective is an opportunity for the Scrum Team to inspect itself and create a plan for improvements to be enacted during the next Sprint. The Sprint Retrospective occurs after the Sprint Review and prior to the next Sprint Planning. This is a three-hour time-boxed meeting for one-month Sprints. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches all to keep it within the time-box. The Scrum Master participates as a peer team member in the meeting from the accountability over the Scrum process. The purpose of the Sprint Retrospective is to:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eInspect how the last Sprint went with regards to people, relationships, process, and tools.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eIdentify and order the major items that went well and potential improvements.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eCreate a plan for implementing improvements to the way the Scrum Team does its work.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch2\u003e\u003cspan style=\"font-weight: 400;\"\u003eSCRUM Artifacts \u003c/span\u003e\u003c/h2\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eScrum Artifacts provide key information that the Scrum Team and the stakeholders need to be aware of for understanding the product under development, the activities done, and the activities being planned in the project.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eProduct backlog \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Product Backlog is an ordered list of everything that might be needed in the product and is the single source of requirements for any changes to be made to the product. The Product Owner is responsible for the Product Backlog, including its content, availability, and ordering. The Product Backlog lists all features, functions, requirements, enhancements, and fixes that constitute the changes to be made to the product in future releases. Product Backlog items have the attributes of a description, order, estimate and value.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSprint Backlog \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Sprint Backlog is the set of Product Backlog items selected for the Sprint, plus a plan for delivering the product Increment and realizing the Sprint Goal. The Sprint Backlog is a forecast by the Development Team about what functionality will be in the next Increment and the work needed to deliver that functionality into a “Done” Increment. The Sprint Backlog makes visible all of the work that the Development Team identifies as necessary to meet the Sprint Goal. The Sprint Backlog is a plan with enough detail that changes in progress can be understood in the Daily Scrum.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eIncrement\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Increment is the sum of all the Product Backlog items completed during a Sprint and the value of the increments of all previous Sprints. At the end of a Sprint, the new Increment must be “Done,” which means it must be in useable condition and meet the Scrum Team’s definition of “Done.” It must be in useable condition regardless of whether the Product Owner decides to actually release it.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cbr\u003e\u003cbr\u003e\u003c/p\u003e","exportId":"weekend-agile-methodologies"}]},{"id":77,"name":"Week 5","status":"completed","unlockDate":null,"prereqs":[62],"requirement":null,"sequential":false,"exportId":"i21dd83d5353fda36748eefca3e9abe61","items":[{"id":707,"title":"Monday: Team Week Objectives","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003eYou're a team and you're building something awesome!\u003c/p\u003e\r\n\u003cp\u003eSpend time together as a team brainstorming your vision. Decide how you want to communicate and work together over the next 4 days. All ideas should be welcome and all members given roles. You can change partners daily or play to the strengths and preferences of your members (business logic vs user interface logic). Remember that in addition to coding skills, communication is one of the most important elements of building great applications. Let your team be one that fosters direct, honest communication and encourages every member's voice!\u003c/p\u003e\r\n\u003cp\u003eFor the presentation/demonstration, determine what the minimum viable product for demonstration is.. A minimum viable product, or MVP, is a development approach where an application is created with the minimum sufficient features necessary to demonstrate it to users and/or investors. Additional features are implemented when/if time and resources allow. When you create an MVP, it should be a prototype of your idea and have the basic core elements in place so your audience (e.g. peers, investors, clients, future employers, future users, etc.) can understand what your vision is. Try to be both ambitious and realistic. Use a whiteboard or paper or online storyboard application if that would help everyone with the overview and the plan!\u003c/p\u003e\r\n\u003cp\u003eYou are going to create something incredible. Dive in!\u003c/p\u003e\r\n\u003ch3\u003eCode Review Objectives\u003c/h3\u003e\r\n\u003cp\u003eAt the end of the week, you will present your group project on Friday, where it will be reviewed for the following objective:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eParticipation in creating and presenting a project, and collaborating effectively with teammates.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003eMarket Research\u003c/h3\u003e\r\n\u003cp\u003eOur project ideas are coming together and we have an MVP. Before we start building anything, we need to take a look at the market for our product. One thing to consider is the competition: does this product already exist? If it does, that's okay! Many apps in the real world are variations of one another. How many apps have you seen for playing music or requesting a taxi have can you think of? If this is the case, then think about how the user experience be improved or made unique. We also want to consider what kinds of customers our product going to serve. For example, let's say we want to build an event-planning application. How would the presentation and extra features differ if we were building it for:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003esports teams?\u003c/li\u003e\r\n\u003cli\u003etechnology meetups?\u003c/li\u003e\r\n\u003cli\u003eoutdoors enthusiasts?\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eTask: Spend half an hour as a team researching your idea online and refining your MVP according to your findings.\u003c/p\u003e\r\n\u003ch3\u003eProject Pitch\u003c/h3\u003e\r\n\u003cp\u003eSo, you have an idea for the app you'd like to build as a team. If we recall our earlier discussion about the MVP, we need to understand what our user wants before actually building anything. What's the best way to do that? By talking to users!\u003c/p\u003e\r\n\u003cp\u003eTask: For the next two hours, we're going to go out and do just that. Go out in groups (at least two people) to an area with potential users you can ask questions about your product. Designate one group member as the note-taker to record answers to questions.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eApproach someone and introduce yourselves and your project\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eExample: \"Hi there! We are [your names] and we're students at Moringa School. We're building an application and we are hoping to get some opinions on it.\"\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003col\u003e\r\n\u003cli\u003eAsk them for their time politely\r\n\u003cul\u003e\r\n\u003cli\u003eSet a timeline for the pitch, and don't go over your time limit - respect their time\u003c/li\u003e\r\n\u003cli\u003eExample: \"Would you mind if we take three minutes of your time?\"\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003eIntroduce the problem you're setting out to solve\u003c/li\u003e\r\n\u003cli\u003eInstead of asking questions about an already-finished application, ask about ways to solve the problem. You're still in the planning phase - user experience research about the finished product will come later.\u003c/li\u003e\r\n\u003cli\u003eMake it a conversation. Ask open-ended questions - you'll get more information that way\r\n\u003cul\u003e\r\n\u003cli\u003eInstead of \"What is your favorite ice cream flavor?\" try, \"Can you tell me about a dessert you would go out of your way to try again?\"\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003eHave a few questions ready. Some themes to think about:\r\n\u003cul\u003e\r\n\u003cli\u003eAccessibility: are you able to use this technology? Example: Do you have a phone or laptop with internet access?\u003c/li\u003e\r\n\u003cli\u003eRelevance: Is your project relevant? Example: For a money tracking app: how do you use money (mPesa, credit card, cash)?\u003c/li\u003e\r\n\u003cli\u003eUsability: do you have a system for doing this? Would you have to change a lot of things in your life to use this app? Can you integrate it into your life?\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003eThank them for their time\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e\u003cstrong\u003eTask\u003c/strong\u003e: Now that you've conducted market research, re-evaluate your MVP and integrate your findings into your user stories. Feel free to divide your user stories into sections: \"MVP\" and \"Bonus features\". What did you get right the first time around? Did any findings surprise you? Were you making any assumptions in your product design?\u003c/p\u003e","exportId":"monday-team-week-objectives"},{"id":708,"title":"Thursday: Team Week Presentation","type":"WikiPage","indent":0,"locked":false,"requirement":null,"completed":false,"content":"\u003cp\u003eTomorrow, teams will give a presentation and demonstration of their applications to staff and students. Determine how you want to present and demonstrate your work. Each team member may speak or a spokesperson may be designated for the group. Presenting technical content is something we will be doing many times throughout our time at Moringa School, and tomorrow is an opportunity to practice those skills and improve. \u003c/p\u003e\r\n\u003cp\u003eReview this lesson for a general structure for technical presentations, as well as guidelines to follow when putting presentations together.\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003ePresentation Structure\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eEach group should p\u003c/span\u003elan to spend ~5 minutes covering the following information:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eTeam Members - Who worked on the project?\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eProject Name and Objective - Why did you choose this project? What purpose does it fulfill?\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eDemonstration - Show and describe the features of your work.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eProcess - Describe how the team development process worked in your group.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eChallenges - Share the biggest technical challenges you faced.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eAlso, allow a bit of time for any questions your audience may have.\u003c/p\u003e\r\n\u003cp\u003ePlease review the next sections in preparation for presentations. \u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSubject Knowledge\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eGive a clear explanation of the problem statement and have a deep understanding of each part of the presentation - be able to elaborate on and defend every point that you make (you never know what the audience will ask)\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThink carefully about what message you want to send. Assume that the audience knows very little and then give them all the information they need to know about your project. Give explanations that make sense to all skill levels, defining terms if necessary.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe able to justify the decisions and technicalities of your application\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe able to answer audience questions truthfully and comprehensively without hesitation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDo not refer to your work as a “project” - it sounds juvenile and unprofessional. Use “application” or “product” instead.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eOrganization and preparedness\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ePresent the information in a logical, interesting sequence that is easy to follow. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eTransition smoothly from one stage to the next. Avoid awkward pauses in between stages and group members.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe sure to rehearse as a group to establish chemistry between team members\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eRespect the time limit set aside for the presentation and makes good use of time.\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe secret to keeping time is to time yourself while practising so that you understand how long each part of the presentation actually takes.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAll group members should speak during the presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMake sure all group members are equally prepared.\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eIf one group member speaks clearly and confidently while the others do not portray the same quality, the difference is easily noticeable by the audience.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen preparing for presentations, make sure you are conversant in each part of the presentation even though you have allocated specific parts of the presentation to different team members. You never know what unexpected challenges may arise, and a group member may not be available for the presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDress the part - wear something smart and presentable on the day of the presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ePractice: build confidence and make the presentation sound effortless. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eEnsure that the equipment you will be using for example a projector or a laptop is working.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDouble check to make sure that your project is complete and fully functioning: all links are working, and everything matches well with the information you are communicating.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eMechanics\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSlides are a must-have for presentations\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe content on the slides should support your presentation and reaffirm the message. They should contain images, graphics, and key points. \u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe slides should not replace the presentation. In general, they should not contain a lot of text.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eReview and revise your slides prior to the presentation and make sure they are free of grammatical errors. Even small errors can indicate carelessness and unprofessionalism.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\n\u003cspan style=\"font-weight: 400;\"\u003eGraphics should be clear and portray accurate information related to the presentation content.\u003c/span\u003e\u003cspan style=\"font-weight: 400;\"\u003e\u003c/span\u003e\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2\u003e\u003cspan style=\"font-weight: 400;\"\u003ePresentation Skills\u003c/span\u003e\u003c/h2\u003e\r\n\u003cp\u003eNo matter how your presentation is structured, your presentation skills can have just as much, if not more, of an effect on how your presentation is received by the audience. Review this section for information on how to deliver a presentation effectively.\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eBody Language\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMovements and gestures should be natural and not look rigid or rehearsed.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eStand or move naturally. Don’t be stiff. However, don’t move too much. Do not pace. Do not dance or stand like a statue. Repetitive movements, such as swinging your arm or pacing, are distracting to the audience and makes you seem unconfident.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eYour body language should be in sync with the presentation and help the audience understand the message.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003ePoise\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eYour demeanor should be relaxed and portray self-confidence.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAt times, no matter how prepared you are, mistakes happen - the important thing is that you recover from them effortlessly so that the audience does not take notice.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBeing confident has a lot to do with managing your stress levels. If you feel particularly nervous and anxious, then those emotions will probably show. The audience can detect if you're nervous, which can take away from the impact of your presentation. A little nervousness is useful because it can build energy, but that energy may quickly turn negative if nerves build to the point where you can't control them. If you have anxiety before a presentation, try some of these stress management tools:\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eTake a few deep breaths.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eVisualize yourself delivering a successful presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBuild your self-confidence by:\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eRehearsing! Rehearsing! Rehearsing!\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSimplifying your speech to make it short and simple\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eActing confident even if you do not feel it, stand upright!\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eTaking slow, deep breaths through your nose, filling your belly. \u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSmile, but not too much. Not only does smiling make you look more relaxed and confident to the audience, it actually makes you more relaxed and confident.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eEye Contact\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eHold the attention of the entire audience through steady eye contact and focus.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMake sure that you hold the attention of everyone in the audience. Shift your focus to different sections of the audience from time to time instead of looking at one section throughout the entire presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eIf you only pay attention to one part of the audience, the rest of the audience may not feel included and stop paying attention to the presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAvoid referring to notes or slides - your attention should be on the audience.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eEnthusiasm\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eShow that you are excited and have positive feelings about the product you're presenting. When you love what you're doing, the audience feels excited about the subject as well.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eElocution\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSpeak slowly - unnaturally slowly, even - especially if you talk fast habitually. Listeners are absorbing a huge amount of information, and need extra time to process what you are saying.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ePause from time to time. A pause is powerful, it forces the audience to pay attention, forces you to slow down, and gives you time to gather your thoughts.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSpeak clearly. With practise, even a memorized script can become more natural and interesting. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eProject your voice and use precise language with clear and correct pronunciation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eUse appropriate tonal variation and speed while talking to make sure your message is heard.\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAvoid using a defensive tone when answering questions from the audience. Assume that the audience is genuinely curious and has valuable feedback to offer.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003c/ul\u003e","exportId":"thursday-team-week-presentation"},{"id":709,"title":"Thursday: Team Week Code Review","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a text entry box or a website url","graded":true,"pointsPossible":10.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003ch3\u003eCode Review\u003c/h3\u003e\r\n\u003cp\u003eGroup projects count as one of your required code reviews, and must be submitted on time. Remember, successful completion of each code review is required to pass the course.\u003c/p\u003e\r\n\u003cp\u003eYour presentation on at the end of the project will take the place of a one-on-one code review with your instructor. You will receive feedback directly.\u003c/p\u003e\r\n\u003ch3\u003eObjectives\u003c/h3\u003e\r\n\u003cp\u003eYour code will be reviewed for the following objective:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eParticipation in creating and presenting a project; including collaborating effectively with teammates.\u003c/li\u003e\r\n\u003c/ul\u003e","exportId":"ie088c19c90e7bb4cbc1a1ad1fd5945a0"},{"id":927,"title":"Team week project submission","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a website url","graded":true,"pointsPossible":9.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cp\u003e\u003cspan\u003eThis rubric is a technical retrospective of the technical group dynamics and application of concepts that were gone through the module. Submit the link of your github repo and deployed site to your TM, and review the scores in your groups.\u003c/span\u003e\u003c/p\u003e","exportId":"idf1cbee6d0f78a5a52f596bb7f3f4a0a"},{"id":922,"title":"Team Week Retrospective","type":"Assignment","indent":0,"locked":false,"submissionTypes":"a text entry box","graded":true,"pointsPossible":25.0,"dueAt":null,"lockAt":null,"unlockAt":null,"requirement":null,"completed":false,"content":"\u003cp\u003eThis rubric describes different parts of being a team member. Review the categories and score descriptions, and fill one out for each of your teammates. The review is anonymous and does not count for any final grade, so that you can give candid and honest feedback to help each other grow.\u003c/p\u003e","exportId":"i706262b6671945df951c974c3ad224a6"}]}],"pages":[{"exportId":"thursday-general-interview-questions","title":"Thursday: General Interview Questions","type":"WikiPage","content":"\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample General Questions\u003c/span\u003e\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eTell me about yourself\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eState three adjectives that best describe you\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat do you know about the company?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat do you find interesting about this job?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat do you consider to be your weaknesses?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat is your greatest achievement?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhere do you see yourself in 5 years?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eGiven a tight deadline, how would you handle the pressure?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eHow would you handle a case of criticism?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eHow much are you looking to get paid?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhy should we hire you over someone else?\u003c/span\u003e\u003c/li\u003e\r\n\u003col\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat makes you the best candidate for the job?\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDo you have any questions for us?\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ol\u003e","frontPage":false},{"exportId":"weekend-sql-basics-sql-alchemy","title":"Weekend: SQL Basics; SQL ALchemy","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eSQL basics\u003c/h2\u003e\r\n\u003cp\u003eLet us learn how to interact with our database.\u003c/p\u003e\r\n\u003cp\u003eWe can access our database using the following command.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ psql\r\n\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e1) Creating a Database\u003c/h4\u003e\r\n\u003cp\u003eLet us create a new database\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e#  CREATE DATABASE school;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSQL commands are usually case insensitive but by convention we capitalize them. Every SQL command ends with a semicolon\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e;\u003c/code\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \\c school\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\c\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epsql command to connect to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eschool\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edatabase. We can view all the databases we have using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\l\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand.\u003c/p\u003e\r\n\u003ch4\u003e2) Creating Tables\u003c/h4\u003e\r\n\u003cp\u003eLet us create our course tables\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# CREATE TABLE courses (name varchar,full_time boolean);\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a course table with two columns for name and whether it is a full time or not. After we create the column name we then have to define the datatype of the column\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evarchar\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edefines that all data stored in the column is will be a String.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edata type states all the data stored will be a boolean either\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe can change the scheme of the table and add Items to it.\u003c/p\u003e\r\n\u003ch4\u003e3) Altering Tables\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# ALTER TABLE courses ADD student_number integer;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add an Integer column to the table where we can store the number of students taking the course.\u003c/p\u003e\r\n\u003cp\u003eWe can also drop columns\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# ALTER TABLE courses DROP student_number;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e4) Inserting into Tables\u003c/h4\u003e\r\n\u003cp\u003eWe can insert data into our table.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# INSERT INTO courses (name, full_time) VALUES ('Advanced Math',True);\u003c/span\u003e\r\n\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# INSERT INTO courses (name, full_time) VALUES ('Literature',True);\u003c/span\u003e\r\n\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# INSERT INTO courses (name, full_time) VALUES ('Computer science',True);\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e5) Retrieving data\u003c/h4\u003e\r\n\u003cp\u003eWe can select all the data from a particular column\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# SELECT name FROM courses ;\u003c/span\u003e\r\n       name       \r\n------------------\r\n Advanced Math\r\n Literature\r\n Computer science\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can also select all entries from the table\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# SELECT * FROM courses ; \u003c/span\u003e\r\nfull_time  \u003cspan class=\"p\"\u003e|\u003c/span\u003e       name       \r\n-----------+------------------\r\n t         \u003cspan class=\"p\"\u003e|\u003c/span\u003e Advanced Math\r\n t         \u003cspan class=\"p\"\u003e|\u003c/span\u003e Literature\r\n t         \u003cspan class=\"p\"\u003e|\u003c/span\u003e Computer science\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe wildcard\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e*\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etells psql to pick all the tables.\u003c/p\u003e\r\n\u003ch4\u003e6) Deleting data\u003c/h4\u003e\r\n\u003cp\u003eWe can delete values we set in our table\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e#  DELETE FROM courses * ;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis deletes all items from our table.\u003c/p\u003e\r\n\u003ch4\u003e7) Adding a Primary Key\u003c/h4\u003e\r\n\u003cp\u003eA\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eprimary key\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eis a unique identifier inside a table. It is assigned to a new row and is not repeated anywhere else in the table.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# ALTER TABLE course ADD id serial PRIMARY KEY;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eserial\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edata type to define an auto incremented integer.\u003c/p\u003e\r\n\u003ch3\u003eCreating a Password\u003c/h3\u003e\r\n\u003cp\u003eTo connect to our psql server we need to create a password for the User Role we created when setting up:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003eschool\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# ALTER USER james password 'New Pasword'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eReplace \u003ccode\u003e\u003cspan class=\"c1\"\u003ejames\u003c/span\u003e\u003c/code\u003e with your username and \u003ccode\u003e\u003cspan class=\"c1\"\u003e'New Pasword'\u003c/span\u003e\u003c/code\u003e with your desired password\u003c/p\u003e\r\n\u003ch4\u003eCommon SQL commands\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003eCREATE DATABASE database_name\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# From the $USER database.\u003c/span\u003e\r\n\r\nCREATE TABLE table_name \u003cspan class=\"o\"\u003e(\u003c/span\u003eid serial PRIMARY KEY, some_column varchar, another_column int\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\nALTER TABLE table_name ADD column_name boolean\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\n\r\nALTER TABLE table_name DROP column_name\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\n\r\n\r\nSELECT * FROM table_name WHERE id \u0026gt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\nSELECT * FROM contacts WHERE NOT id \u0026gt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\n\r\nUPDATE courses SET \u003cspan class=\"nv\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Poetry'\u003c/span\u003e WHERE \u003cspan class=\"nv\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\r\nDROP TABLE table_name\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# From the database that holds the table.\u003c/span\u003e\r\nDROP DATABASE test_database\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# From the $USER database.\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003ePostgresql commands\u003c/h4\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eList all databases: \\l.\u003c/li\u003e\r\n\u003cli\u003eExit out of help menu: \\q\u003c/li\u003e\r\n\u003cli\u003eConnect to database: \\c database_name\u003c/li\u003e\r\n\u003cli\u003eList tables in current database: \\dt\u003c/li\u003e\r\n\u003cli\u003eList columns in a table: \\d table_name\u003c/li\u003e\r\n\u003cli\u003eSee a list of all psql commands: \\? (Press the down arrow to scroll through, or q to exit list.)\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2\u003eSQLAlchemy\u003c/h2\u003e\r\n\u003cp\u003eSQLAlchemy is an Object relational mapper that allows us to create a mapping between the database and the Python Objects in our application. It allows us to interact with the database using Python objects that will be translated and mapped into SQL statements.\u003c/p\u003e\r\n\u003cp\u003eGoing back to our watchlist app, we will use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlask-SQLAlchemy\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eextension that will allow us to connect SQLAlchemy to our application\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-SQLAlchemy\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSQLAlchemy supports many kinds of databases. For our Postgres database, we will need a driver that will be helpful in connecting our application to our database\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install psycopg2\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe install\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epsycopg2\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich is our Postgres driver.\u003c/p\u003e\r\n\u003ch3\u003eSetting up SQLAlchemy\u003c/h3\u003e\r\n\u003cp\u003eFirst, we need to create a new database for our application.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ psql\r\npsql \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e9\u003c/span\u003e.5.8\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\nType \u003cspan class=\"s2\"\u003e\"help\"\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e help.\r\n\r\n\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe type in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epsql\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto connect to the postgres server.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e#  CREATE DATABASE watchlist;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then use an SQL command to create a database\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewatchlist\u003c/code\u003e.Note that all SQL commands end with a semicolon.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \\c watchlist \u003c/span\u003e\r\nYou are now connected to database \u003cspan class=\"s2\"\u003e\"watchlist\"\u003c/span\u003e as user \u003cspan class=\"s2\"\u003e\"james\"\u003c/span\u003e.\r\n\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then connect to the database using the Postgres\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\c\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand followed by the database name.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# \\dt\u003c/span\u003e\r\nNo relations found.\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\dt\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand to check what tables are in our database. Since we have no tables created we get a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eNo relations found.\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eresponse.\u003c/p\u003e\r\n\u003cp\u003eYou can get all PostgreSQL commands by typing\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehelp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhile in the Postgres server.\u003c/p\u003e\r\n\u003cp\u003eNext SQLAlchemy needs one important configuration.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSQLALCHEMY_DATABASE_URI\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- this is the location of the database with authentication.\u003c/p\u003e\r\n\u003cp\u003eThe format for the URI is\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb+driver://username:password@host/database\u003c/code\u003e. We can define this URI inside our configuration file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eMOVIE_API_BASE_URL\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'https://api.themoviedb.org/3/movie/{}?api_key={}'\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eMOVIE_API_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSECRET_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'SECRET_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSQLALCHEMY_DATABASE_URI\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'postgresql+psycopg2://username:password@localhost/watchlist'\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create this configuration inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.Replace the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eusername\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith user we created when configuring PostgreSQL and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith the user's password.\u003c/p\u003e\r\n\u003cp\u003eWe can now initialize our extension.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_sqlalchemy\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eSQLAlchemy\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBootstrap\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003edb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSQLAlchemy\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSQLAlchemy\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# ....\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Initializing flask extensions\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhile in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eapplication factory function we then call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einit_app\u003c/code\u003emethod and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance.\u003c/p\u003e\r\n\u003cp\u003eWe will next consider how we can create models for our database. And then we can see how we can authenticate users.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here :\u003c/p\u003e\r\n\u003cp\u003e\u003ca href=\"https://github.com/mbuthiya/watchlist/tree/17-Configuring-database\"\u003ehttps://github.com/mbuthiya/watchlist/tree/17-Configuring-database\u003c/a\u003e\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"tuesday-introduction-template-inheritance-adding-bootstrap","title":"Tuesday: Introduction, Template Inheritance; Adding Bootstrap","type":"WikiPage","content":"\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eWe have seen how useful templating is and how we can add dynamic information and logic to our templates. Now we will consider how to customize our templates.\u003c/p\u003e\r\n\u003cp\u003eWe will learn how to use Bootstrap framework, How to customize our the look of our templates using CSS and How to add Links to our templates.\u003c/p\u003e\r\n\u003ch2\u003eTemplate Inheritance\u003c/h2\u003e\r\n\u003cp\u003eNotice how every time we create a new template we have to define the HTML structure. In a small application like ours it does not seem like a lot of work. But in a large application with dozens of pages it can be very tedious . Jinja allows for\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etemplate inheritance\u003c/strong\u003e. That is we can inherit some properties of a template in other child (or derived) templates.\u003c/p\u003e\r\n\u003cp\u003eLets see what that looks like. We start by creating a new template file\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003emeta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"utf-8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% if title %}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ title }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% else %}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Welcome to the best Movie Review website \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% endif %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"c\"\u003e\u0026lt;!-- Content block --\u0026gt;\u003c/span\u003e\r\n\r\n        {% block content %}\r\n\r\n        {% endblock%}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a base file with the basic HTML structure. We then Inside the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebody\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etag we have the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblock\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econtrol block that defines elements that can be changed by the derived template.\u003c/p\u003e\r\n\u003cp\u003eWe can create as many blocks as we want to replace in our content. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblock content\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis what we will be replacing in our other templates.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'macros.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first extend our\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile to the top of our index page.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e\u0026lt;!-- Content block --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Popular movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;h3\u0026gt; Popular Movies\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003epopular\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Upcoming movie  --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;h3\u0026gt; Upcoming Movies \u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eupcoming\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Now showing movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;h3\u0026gt;Now Showing\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003enow_showing\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then replace our HTML structure with our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblock content\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand place our body content inside the blocks.\u003c/p\u003e\r\n\u003ch3\u003eTask\u003c/h3\u003e\r\n\u003cp\u003eReplace the HTML in the\u003cspan\u003e \u003c/span\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile and extend the\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003c/p\u003e\r\n\u003ch2\u003eAdding Bootstrap\u003c/h2\u003e\r\n\u003cp\u003eOur application looks a bit stale we can add some styling using twitter bootstrap framework. We use the Flask-Bootstrap extension.\u003c/p\u003e\r\n\u003cp\u003eLet us download the extension.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-bootstrap\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then need to initialize the extension. Most flask extensions need to be initialized before we can start using them. We do that in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003e__init__.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile .\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003e__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_bootstrap\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBootstrap\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003ccode\u003eBootstrap\u003c/code\u003eclass from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eflask_bootstrap\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eextension.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003e__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# Initializing application\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003einstance_relative_config\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Setting up configuration\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_pyfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"config.py\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Initializing Flask Extensions\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBootstrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then initialize the Bootstrap class by passing in the app instance. This is how most extensions are initialized. We can now use bootstrap in our application.\u003c/p\u003e\r\n\u003cp\u003eWe can now replace\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eall\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethe content in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile with the following code.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bootstrap/base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFlask-Bootstrap contains its own\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003ewhich has defined blocks that we can refer to and add our own data.\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://pythonhosted.org/Flask-Bootstrap/basic-usage.html#available-blocks\"\u003eFull List of Flask-Bootsrap available blocks\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eWe can run our application and see it still runs as normal.\u003c/p\u003e\r\n\u003cp\u003eLet us add a navigation bar to our application. Create a new template file\u003cspan\u003e \u003c/span\u003e\u003cem\u003enavbar.html\u003c/em\u003e.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003enavbar.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navbar navbar-inverse\"\u003c/span\u003e \u003cspan class=\"na\"\u003erole\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navigation\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"container-fluid\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navbar-header\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"button\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navbar-toggle\"\u003c/span\u003e \u003cspan class=\"na\"\u003edata-toggle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"collapse\"\u003c/span\u003e \u003cspan class=\"na\"\u003edata-target\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\".navbar-collapse\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"sr-only\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eToggle navigation\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"icon-bar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"icon-bar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"icon-bar\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navbar-brand\"\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Watchlist \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"navbar-collapse collapse\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"nav navbar-nav\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eHome\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a bootstrap navbar and we can now include it in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bootstrap/base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Navbar block  --\u0026gt; \u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003enavbar\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003einclude\u003c/span\u003e \u003cspan class=\"s1\"\u003e'navbar.html'\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we have sections of our template that are reused in multiple parts or in multiple templates we can separate it into its own template file and include it wherever we need it.\u003c/p\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebootstrap/base.html\u003c/code\u003e\u003cspan\u003e \u003c/span\u003enavbar block and we use the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eincludes\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003econtrol block to include our _navbar.html_ file to that section of the\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003etemplate.\u003c/p\u003e\r\n\u003cp\u003eWe can now run our application and see our new navbar.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/09-Adding-Bootstrap\u003c/p\u003e","frontPage":false},{"exportId":"getting-started-with-python","title":"Getting started with Python","type":"WikiPage","content":"\u003cp\u003eWelcome to the exciting world of Python! You are about to embark on a web development journey using Python's object-oriented programming language.\u003c/p\u003e\r\n\u003cp\u003eIn this module, we are going to learn the fundamentals of building web applications using Python and its web frameworks. The web frameworks we will use are Flask and Django, but that will come in a bit later.\u003c/p\u003e\r\n\u003cp\u003eTo start with, we'll focus on the basics of Python as a programming language. Here, we will learn how to install python in our computers, we'll also learn about variables, modules, control flows and loops. Make sure you understand these Python basics, they will help you to easily grasp the more complex concepts that we will encounter in this course.\u003c/p\u003e\r\n\u003cp\u003eLet's get started!\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e","frontPage":false},{"exportId":"wednesday-wtf-forms","title":"Wednesday: WTF Forms","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eWTF Forms\u003c/h2\u003e\r\n\u003cp\u003eTo handle forms in our application, we are going us Flask-WTF extension which is a flexible form rendering and validation library.\u003c/p\u003e\r\n\u003cp\u003eWTF forms make working with web forms much easier. It provides a lot of out of the box functionality Like security against\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Cross-site_request_forgery\"\u003eCSRF\u003c/a\u003e\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eCross site Request Forgery. And also offers validation.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-wtf \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo enable CSRF protection we need to create a Secret Key that will verify authenticity of requests with form data.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003einstance/config.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eMOVIE_API_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u0026lt;Movie API Key\u0026gt;'\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSECRET_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u0026lt;Flask WTF Secret Key\u0026gt;'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow we can start creating our web Form to create Reviews for the movies. Inside the app directory, create a forms.py file\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eforms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_wtf\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eTextAreaField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms.validators\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReviewForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Review title'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTextAreaField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Movie review'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalidators\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esubmit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Submit'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first Import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlaskForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eflask_wtf\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule this will help us create a Form class.\u003c/p\u003e\r\n\u003cp\u003eWe then import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eStringField\u003c/code\u003e,\u003ccode\u003eTextAreaField\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSubmitField\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efield classes. These will help us create a text field, a text Area field and a submit button.\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://wtforms.readthedocs.io/en/latest/fields.html#basic-fields\"\u003eList of all the available fields\u003c/a\u003e lastly, we import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRequired\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass validator that will prevent the user from submitting the form without Inputting a value.\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://wtforms.readthedocs.io/en/latest/validators.html#built-in-validators\"\u003eList of all the available validators\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eWe then create the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReviewForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that inherits from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlaskForm\u003c/code\u003eclass. We Initialize the Field types by passing in two parameters. The first is the label and the second is a list of Validators where we initialize the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRequired\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evalidator.\u003c/p\u003e\r\n\u003cp\u003eLet us first create the template file that will display our form. Create a new file\u003cspan\u003e \u003c/span\u003e\u003cem\u003enew_review.html \u003c/em\u003einside the templates folder.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003enew_review.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e{% extends 'base.html'%}\r\n{% import \"bootstrap/wtf.html\" as wtf %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFlask-Bootstrap provides a high level function that allows us to render forms with bootstrap styling. We import _bootstrap/wtf.html_ from Flask-Bootstrap that defines helper functions to render web forms\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003enew_review.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e{% extends 'base.html'%}\r\n{% import \"bootstrap/wtf.html\" as wtf %}\r\n\r\n{% block content %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"container\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-md-8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eimg\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{movie.poster}}\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{movie.title}}\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"img-responsive\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-md-4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n            {{ wtf.quick_form(review_form) }}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n{% endblock %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewtf.quick_form()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction takes in a Flask-WTF form object and renders it with bootstrap styling.\u003c/p\u003e\r\n\u003cp\u003eLet us create the view function for that will handle this template.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.forms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eReviewForm\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eReview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eReview\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReview\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from our models folder. We also import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReviewForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from our forms file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/review/new/\u0026lt;int:id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'GET'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'POST'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003enew_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReviewForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003enew_review\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'{movie.title} review'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'new_review.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereview_form\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a new dynamic route for our new_review function and pass in the movie id. We also add the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emethods\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument to our decorator which tells flask to register the view function as a handler for both\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eGET\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ePOST\u003c/code\u003e\u003cspan\u003e \u003c/span\u003erequests. When\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emethods\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument is not given the view function is registered to handle\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eGET\u003c/code\u003e\u003cspan\u003e \u003c/span\u003erequests only.\u003c/p\u003e\r\n\u003cp\u003eWe then create an instance of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReviewForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and name it\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eform\u003c/code\u003e\u003cspan\u003e . \u003c/span\u003eWe also call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the ID to get the movie object for the movie with that ID.\u003c/p\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evalidate_on_submit()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod returns\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhen the form is submitted and all the data has been verified by the validators. If\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewe gather the data from the form input fields and create a new review object and save it. We then redirect the response to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function and pass in the dynamic movie ID.\u003c/p\u003e\r\n\u003cp\u003eIf the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evalidate_on_submit()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod returns\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewe will render our\u003cspan\u003e \u003c/span\u003e\u003cem\u003enew_review.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003etemplate file and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etitle\u003c/code\u003e, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eform\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eobject and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie\u003c/code\u003eobject.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e\u0026lt;div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6 movie-details\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;h3\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.title\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e            \u0026lt;p class=\"overview\"\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.overview\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e            \u0026lt;p class=\"ratings\"\u0026gt; \u0026lt;b\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.vote_average\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/b\u0026gt; - \u0026lt;i\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.vote_count\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e votes \u0026lt;/i\u0026gt; \u0026lt;/p\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;a class=\"ratings\" href=\"/movie/review/new/\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003emovie.id\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt; Write a new review\u0026lt;/a\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie-details\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecolumn in the\u003cspan\u003e \u003c/span\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile to add a link to a review page where we will display the form.\u003c/p\u003e\r\n\u003cp\u003eWhen we run the application and click on the link we should see our reviews form displayed for us and we can add new reviews to our movie.\u003c/p\u003e\r\n\u003ch3\u003eDisplaying Reviews\u003c/h3\u003e\r\n\u003cp\u003eWe need to create a method that will display all the reviews for a particular movie.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels/review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e......\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Some code is here\u003c/span\u003e\r\n    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a new class method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in an ID. It loops through all the reviews in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eall_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist and checks for reviews that have the same movie ID as the id passed. We then append those reviews to a new\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eresponse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist and return that response list.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/\u0026lt;int:id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View movie page function that returns the movie details page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'{movie.title}'\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function and call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method that takes in a movie ID and will return a list of reviews for that movie. We then pass in the reviews list to our template\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- Displaying reviews macro --\u0026gt;\u003c/span\u003e\r\n{% macro displayReviews(review_list) %}\r\n    {% for review in review_list %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-xs-12 col-sm-4 col-md-4 col-lg-4 review-card\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ review.title}} \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ review.review | truncate(30) }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    {% endfor %}\r\n{% endmacro %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn our\u003cspan\u003e \u003c/span\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003etemplate we create a new macro\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplayReviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in a list of reviews and loops through them to display each review by title and short snippet of the review.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e...\r\n{% import 'macros.html' as macro%}\r\n...\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import\u003cspan\u003e \u003c/span\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003etemplate file so that we can use our newly created macro.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e...\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"row\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eReviews\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehr\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        {% if reviews %}\r\n            {{macro.displayReviews(reviews)}}\r\n\r\n        {% else%}\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh3\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"text-center\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eThis movie has no reviews \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh3\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"btn btn-success btn-lg text-center\"\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/movie/review/new/{{movie.id}}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Write a new review\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% endif %}\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n...\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a new row where first we check if any review exists for that particular movie and if True we call our macro and pass in the reviews list. If not we put in a helpful statement and a link to write a new review.\u003c/p\u003e\r\n\u003cp\u003eNow when we run our application and create a new review it will be displayed on the movie page.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/14-wtf-forms\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"weekend-intro-to-python","title":"Weekend: Intro to Python","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eIntroduction To Python\u003c/h2\u003e\r\n\u003cp\u003ePython was created in the late 1980's by Guido Van Rossum as a hobby project developed over the Christmas holiday. Since then, it has grown into one of the largest, and most extensive programming languages out there.\u003c/p\u003e\r\n\u003cp\u003ePython code is maintained and supported by the Python Software Foundation. Its creator Guido is actively involved in its progress and was given the title Benevolent Dictator For Life.\u003c/p\u003e\r\n\u003cp\u003ePython is a general-purpose programming language. It is used in various fields such as mathematics, agriculture, electronics, and mechanics.\u003c/p\u003e\r\n\u003cp\u003eIt is a \u003cstrong\u003eStrongly Typed\u003c/strong\u003e language- meaning that every object in Python has a definite type associated with it.\u003c/p\u003e\r\n\u003cp\u003eIt is also \u003cstrong\u003eDynamically Typed\u003c/strong\u003e- meaning that no type checking is done prior to running Python code.\u003c/p\u003e\r\n\u003cp\u003ePython is an \u003cstrong\u003eInterpreted Language\u003c/strong\u003e. This means that code \u003cem\u003ecompilation\u003c/em\u003e and \u003cem\u003eexecution\u003c/em\u003e is done at the same time.\u003c/p\u003e\r\n\u003ch3\u003eWhere can we use Python?\u003c/h3\u003e\r\n\u003cp\u003eThe Python language is used in many different fields.\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eWeb Development\u003c/strong\u003e - Python is used to create really dynamic websites using frameworks like \u003cstrong\u003eFlask\u003c/strong\u003e, \u003cstrong\u003eDjango\u003c/strong\u003e, and \u003cstrong\u003ePyramid\u003c/strong\u003e.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eScientific Computing\u003c/strong\u003e - It has several libraries dedicated to it for scientific computing like \u003cstrong\u003enumpy\u003c/strong\u003e, and \u003cstrong\u003eearthpy\u003c/strong\u003e for earth sciences.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eGame Development\u003c/strong\u003e - Python has a gaming library called \u003cstrong\u003epygame\u003c/strong\u003e for creating games that use keyboard and mouse interactions.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eDesktop Applications\u003c/strong\u003e - Python comes with \u003cstrong\u003etkinter\u003c/strong\u003e a graphical user interface library that allows us to create user interfaces for our applications.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eThese are just a few examples of where Python language is applied.\u003c/p\u003e\r\n\u003ch3\u003eWho uses Python?\u003c/h3\u003e\r\n\u003cp\u003eSeveral companies use Python in their day to day runnings. Here is a list of just a few:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eGoogle (YouTube)\u003c/li\u003e\r\n\u003cli\u003eFacebook (Tornado)\u003c/li\u003e\r\n\u003cli\u003eDropbox\u003c/li\u003e\r\n\u003cli\u003eYahoo\u003c/li\u003e\r\n\u003cli\u003eNASA\u003c/li\u003e\r\n\u003cli\u003eIBM\u003c/li\u003e\r\n\u003cli\u003eMozilla\u003c/li\u003e\r\n\u003cli\u003eQuora\u003c/li\u003e\r\n\u003cli\u003eInstagram\u003c/li\u003e\r\n\u003cli\u003eReddit\u003c/li\u003e\r\n\u003cli\u003eDisney\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2\u003eHelpful Resources\u003c/h2\u003e\r\n\u003ch4\u003e\u003ca href=\"https://docs.python.org/3/\"\u003eOfficial Python Documentation\u003c/a\u003e\u003c/h4\u003e\r\n\u003cp\u003eDocumentation for Python's standard library, along with tutorials and guides, are available . The Python documentation might look scary at first, but as we go along you will find it is really easy to understand and a very powerful resource.\u003c/p\u003e\r\n\u003ch4\u003e\u003ca href=\"https://www.google.com\"\u003eGoogle\u003c/a\u003e\u003c/h4\u003e\r\n\u003cp\u003eWhen in doubt, \u003cstrong\u003eGoogle\u003c/strong\u003e it. We will find most of the problems we might encounter in programming have been encountered by other developers as well. Google should be our first line of defense when we encounter an error we have never seen before or for research.\u003c/p\u003e\r\n\u003ch4\u003e\u003ca href=\"https://www.stackoverflow.com\"\u003eStackOverflow\u003c/a\u003e\u003c/h4\u003e\r\n\u003cp\u003eWith a large active community of developers, StackOverflow is the place where we will find ourselves looking for answers to our programming questions. It is a very useful resource to have.\u003c/p\u003e\r\n\u003ch4\u003e\u003ca href=\"https://www.tutorialspoint.com/python3/\"\u003eTutorialspoint\u003c/a\u003e\u003c/h4\u003e\r\n\u003cp\u003eThis is a good resource for quick information, and examples of different concepts in Python.\u003c/p\u003e\r\n\u003ch4\u003e\u003ca href=\"https://learnpythonthehardway.org/python3/\"\u003eLearn Python the Hard Way\u003c/a\u003e\u003c/h4\u003e\r\n\u003cp\u003eThis is really awesome for a hands-on approach to Python. At this site, you will get to learn Python topics and complete exercises on them.\u003c/p\u003e\r\n\u003ch2\u003eInstallations\u003c/h2\u003e\r\n\u003cp\u003eMost Mac and Linux systems have Python pre-installed.\u003c/p\u003e\r\n\u003cp\u003eIn this course we will be using \u003cstrong\u003ePython3\u003c/strong\u003e . This was a major version update from \u003cstrong\u003ePython2\u003c/strong\u003e with new features and syntax changes. Python3 is also the future of Python and is best we learn how to use it.\u003c/p\u003e\r\n\u003ch3\u003eLinux Installation\u003c/h3\u003e\r\n\u003ch4\u003eStep 1: Check if Python3.6 is Installed\u003c/h4\u003e\r\n\u003cp\u003eOpen the terminal and type in \u003ccode\u003epython3.6\u003c/code\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIf you get the following error:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003epython3.6: \u003cspan class=\"nb\"\u003ecommand\u003c/span\u003e not found\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eit means that Python is not installed - follow the next steps in this section for installation instructions.\u003c/p\u003e\r\n\u003cp\u003eThe console may give you a message that Python is not installed, followed by a command that will install it for you. In that case, follow the instructions in the console.\u003c/p\u003e\r\n\u003cp\u003eIf it does not give an error, it means you have \u003ccode\u003epython3.6\u003c/code\u003e installed and you can move on to the \u003cstrong\u003eInstalling Third Party Modules\u003c/strong\u003e section below.\u003c/p\u003e\r\n\u003ch4\u003eStep 2: Install Python3.6\u003c/h4\u003e\r\n\u003cp\u003eOn the terminal copy the following individual commands on your console.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo add-apt-repository ppa:jonathonf/python-3.6\r\n$ sudo apt-get update\r\n$ sudo apt-get install python3.6\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen prompted put in your password and leave the commands to run.\u003c/p\u003e\r\n\u003ch4\u003eStep 3 : Confirm Installation\u003c/h4\u003e\r\n\u003cp\u003eOn the terminal type in \u003ccode\u003epython3.6\u003c/code\u003e. If the output looks like this, it means that Python has installed successfully.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e $ python3.6\r\n\r\nPython \u003cspan class=\"m\"\u003e3\u003c/span\u003e.6.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003edefault, Nov \u003cspan class=\"m\"\u003e17\u003c/span\u003e \u003cspan class=\"m\"\u003e2016\u003c/span\u003e, \u003cspan class=\"m\"\u003e17\u003c/span\u003e:05:23\u003cspan class=\"o\"\u003e)\u003c/span\u003e \r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eGCC \u003cspan class=\"m\"\u003e5\u003c/span\u003e.4.0 \u003cspan class=\"m\"\u003e20160609\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e on linux\r\nType \u003cspan class=\"s2\"\u003e\"help\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"copyright\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"credits\"\u003c/span\u003e or \u003cspan class=\"s2\"\u003e\"license\"\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e more information.\r\n\u0026gt;\u0026gt;\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo get out of this interface use the \u003ccode\u003eexit()\u003c/code\u003e function like this:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6\r\n\u0026gt;\u0026gt;\u0026gt;exit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow go to Installing third party modules below.\u003c/p\u003e\r\n\u003ch3\u003eMac Installation\u003c/h3\u003e\r\n\u003ch4\u003eStep 1: Check if Python3.6 is Installed\u003c/h4\u003e\r\n\u003cp\u003eOpen the terminal and type in \u003ccode\u003epython3.6\u003c/code\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIf you get the following error:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003epython3.6: \u003cspan class=\"nb\"\u003ecommand\u003c/span\u003e not found\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eit means that Python is not installed - follow the next steps in this section for installation instructions.\u003c/p\u003e\r\n\u003cp\u003eIf it does not give an error, it means you have \u003ccode\u003epython3.6\u003c/code\u003e installed and you can move on to the \u003cstrong\u003eInstalling Third Party Modules\u003c/strong\u003e section below.\u003c/p\u003e\r\n\u003ch4\u003eStep 2: Download Python3 latest release\u003c/h4\u003e\r\n\u003cp\u003eGo to the \u003ca href=\"https://www.python.org/downloads/\"\u003eDownloads page\u003c/a\u003e on the Python website and download the latest release of Python 3 by clicking the button at the top of the page.\u003c/p\u003e\r\n\u003ch4\u003eStep 3: Install Downloaded File\u003c/h4\u003e\r\n\u003cp\u003eInstall the downloaded file by following the installation instructions that follow.\u003c/p\u003e\r\n\u003ch4\u003eStep 4 : Confirm Installation\u003c/h4\u003e\r\n\u003cp\u003eOn the terminal type in \u003ccode\u003epython3.6\u003c/code\u003e. If the output looks like this, it means that Python has installed successfully.\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003ePython 3.6.0 (default, Nov 17 2016, 17:05:23)\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\u0026gt;\u0026gt;\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eTo get out of this interface use the \u003ccode\u003eexit()\u003c/code\u003e function like this:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e $ python3.6\r\n\r\nPython \u003cspan class=\"m\"\u003e3\u003c/span\u003e.6.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003edefault, Nov \u003cspan class=\"m\"\u003e17\u003c/span\u003e \u003cspan class=\"m\"\u003e2016\u003c/span\u003e, \u003cspan class=\"m\"\u003e17\u003c/span\u003e:05:23\u003cspan class=\"o\"\u003e)\u003c/span\u003e \r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eGCC \u003cspan class=\"m\"\u003e5\u003c/span\u003e.4.0 \u003cspan class=\"m\"\u003e20160609\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e on linux\r\nType \u003cspan class=\"s2\"\u003e\"help\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"copyright\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"credits\"\u003c/span\u003e or \u003cspan class=\"s2\"\u003e\"license\"\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e more information.\r\n\u0026gt;\u0026gt;\u0026gt;exit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eInstalling Third Party Modules\u003c/h3\u003e\r\n\u003cp\u003eOther than the built-in standard library of modules, Python developers have created their own modules to further extend Python's functionality.\u003c/p\u003e\r\n\u003cp\u003eThe best way to install these Python modules is to use Python's \u003cstrong\u003epip\u003c/strong\u003e tool. Pip is a tool for installing and managing Python packages, many of which are found in the \u003ca href=\"https://pypi.python.org/\"\u003ePython Package Index\u003c/a\u003e. It's kind of like a free application store for Python modules.\u003c/p\u003e\r\n\u003ch4\u003eInstalling pip3\u003c/h4\u003e\r\n\u003cp\u003ePip comes installed with Python on Mac when you install Python3.\u003c/p\u003e\r\n\u003cp\u003eFor Linux, run this command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo apt-get install python3-pip \u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAlternatively, if you run into any error using the above command you can use the following:\u003c/p\u003e\r\n\u003cp\u003eThis command downloads the script that we will use to install pip.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThen, using python3.6, we run the downloaded script to install pip.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo python3.6 get-pip.py\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eOnce installations are done, we can move on and start learning some Python.\u003c/p\u003e\r\n\u003c/div\u003e","frontPage":false},{"exportId":"weekend-welcome-to-flask-the-internet-virtual-environment","title":"Weekend: Welcome to Flask; The Internet Virtual Environment","type":"WikiPage","content":"\u003ch2\u003eWelcome to Flask\u003c/h2\u003e\r\n\u003cp\u003eFlask is a web framework that has tools that allow us to create web applications.\u003c/p\u003e\r\n\u003cp\u003eIt belongs to a category of web frameworks known as a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emicro-framework\u003c/strong\u003e. This means Flask contains very few dependencies out of the box. It allows the developer to take the driver's seat and have full creative control over the application.\u003c/p\u003e\r\n\u003cp\u003eIt comes packed with a robust core that is also supplemented by many other third party extensions that can be picked to fit our different needs.\u003c/p\u003e\r\n\u003cp\u003eFlask has two main dependencies:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eWerkzeug\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- This provides flask with _routing_,_debugging_ and _web server_ capabilities.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eJinja 2\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- This provides template support for flask.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003eWeb Clients and Servers\u003c/h2\u003e\r\n\u003cp\u003eYou're about to learn your first Python web framework! Before we begin, let's address several language independent concepts that apply to the internet in general.\u003c/p\u003e\r\n\u003cp\u003eIn this lesson, we will walk through details of how the web works; From your browser, known as the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eclient\u003c/strong\u003e, to a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eweb server\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand back again.\u003c/p\u003e\r\n\u003ch3\u003eIP Addresses and the Internet\u003c/h3\u003e\r\n\u003cp\u003eFirst, let's talk about the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eInternet\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eWhen we use the term Internet, we refer to millions of networks that are connected to allow devices (computers, laptops, tablets, phones, etc) to communicate with one another, and access content.\u003c/p\u003e\r\n\u003cp\u003eSimilar to the address of your home, the device you use to browse the Internet also has an address called an\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eInternet Protocol\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eaddress, or\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eIP address\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003efor short. This address is assigned by an\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eInternet Service Provider (ISP)\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eSimilarly, the server for a website you visit also has an IP address. IP addresses are represented with a set of four groups of numbers separated by periods, like this:\u003c/p\u003e\r\n\u003cp\u003e_198.185.159.145_\u003c/p\u003e\r\n\u003cp\u003eYou may also see an additional number after an IP Address that's separated from the others by a colon, like this:\u003c/p\u003e\r\n\u003cp\u003e_198.185.159.145:43_\u003c/p\u003e\r\n\u003cp\u003eThis additional number is a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eport\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003enumber. A port number is like an apartment number or box number after your mailing or home address. It indicates an even more specific location information will travel to at the particular address.\u003c/p\u003e\r\n\u003ch3\u003eCommunicating Between Addresses\u003c/h3\u003e\r\n\u003cp\u003eTo recap, we've covered two addresses so far: Your device's address and a website's address. Next, let's walk through how your address and the website's address interact when you visit a website on your device.\u003c/p\u003e\r\n\u003ch4\u003eClient-Server Process\u003c/h4\u003e\r\n\u003ch5\u003eRequests\u003c/h5\u003e\r\n\u003cp\u003eFirst, in order to access a website you must make a request from a client. The client is usually a web browser, like Chrome, Firefox, Safari, or Internet Explorer. Essentially,anything that facilitates your interaction with the web and web addresses. And making a request usually looks like entering a web address in the browser's _URL bar_, clicking a link, or submitting a form. Anything that triggers a navigational change to a new location on the internet.\u003c/p\u003e\r\n\u003cp\u003eWhen you create a request, the client constructs a message (similar to mailing something from one address to another). This message must be formatted using a strict set of rules, or protocol, known as\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eHypertext Transfer Protocol (HTTP)\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003ePart of this message includes the web address that you are sending your request to: For example, when we click a link to visit this area of the website, the web address _http://moringaschool.com/_ is included.\u003c/p\u003e\r\n\u003cp\u003eContinuing with the metaphor of mailing a letter, Hypertext Transfer Protocol (HTTP) is similar to the formatting rules of addressing an envelope. You can't place the address just anywhere, or format it in any manner you please. There is a protocol for what information is required (street address, city, state, zip), the format it is written in, and where these pieces of information are placed on the envelope. Deviation from this protocol will result in your message, or \"letter\", not reaching its intended destination.\u003c/p\u003e\r\n\u003cp\u003eHTTP has similar standards. It requires certain kinds of information, placed and formatted in a specific manner in order for the client to reach its destination. For instance, when the request message for http://moringaschool.com/ leaves the client, the ISP is the first stop on the round trip to collect the Moringa School's web content from the server where it is stored.\u003c/p\u003e\r\n\u003cp\u003eBefore the location of the server can be found, the IP address must be identified using the web address provided in the client's request message. This is the job of the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eDomain Naming System\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eDNS servers\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eThere are hundreds of DNS servers that house databases with the single purpose of resolving web addresses to IP addresses. In our example, a DNS server matches _http://moringaschool.com/_ to the IP address: _198.54.116.26_. Once resolved to an IP address, your request message is sent to its identified destination, 198.54.116.26, or, the server that contains our Moringa School's website.\u003c/p\u003e\r\n\u003cp\u003eThe web server receives the message and determines the resource that is being located or acted upon in the request. In our example, the request to view _http://moringaschool.com/_ will gather the resource for displaying the main Courses page. This resource is an an HTML document. Depending on the website, other resources may need to be gathered too, such as images, stylesheets, scripts, videos, etc.\u003c/p\u003e\r\n\u003ch5\u003eResponses\u003c/h5\u003e\r\n\u003cp\u003eWhen the content is collected, the server returns it in a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eresponse\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eback to the client. The response is interpreted by the client and you see the _http://moringaschool.com/_ main page displayed in your browser window.\u003c/p\u003e\r\n\u003cp\u003eWhen you interact again with the site, by clicking a link, or navigating to a different area, the whole process begins again.\u003c/p\u003e\r\n\u003cp\u003eAlthough you're probably most familiar with making web requests through your web browser, know that any program can actually be a web client. For instance, a program installed on your computer that automatically checks for and downloads updates, an app running on your tablet, or even one web server making a request to another web server are all clients. Each of these must use the same HTTP protocol.\u003c/p\u003e\r\n\u003ch5\u003eTerminology\u003c/h5\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eClient\u003c/strong\u003e: A computer program that sends a request to another program for data or services (e.g., a web browser is a client that sends requests to a web server).\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eServer or Web Server\u003c/strong\u003e: A computer program or device that uses HTTP to distribute information to a client.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eInternet Protocol (IP) Address\u003c/strong\u003e: A set of numbers separated by periods that uniquely identifies a device on the Internet.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003ePort number\u003c/strong\u003e: Part of the addressing information used to identify the sender/receiver of requests at an IP address (e.g., 43 is the port number with this IP address: 198.185.159.145:43).\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eInternet Service Provider (ISP)\u003c/strong\u003e: A company that provides access to the Internet and assigns an IP address to the connecting device.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eHypertext Transfer Protocol (HTTP)\u003c/strong\u003e: A protocol that defines how requests are formatted, transmitted and processed between web clients and web servers.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eDomain Naming System (DNS) Servers\u003c/strong\u003e: The \"address book\" of the Internet; servers that maintain all domain names and translate them to Internet Protocol (IP) addresses.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eWeb Resource\u003c/strong\u003e: The target of a web address; Examples of web resources include files, documents, images, videos, stylesheets, scripts.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eAdditional Resources\u003c/h4\u003e\r\n\u003cp\u003eTo further explore any of these concepts, visit the following articles linked in this lesson:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Client%E2%80%93server_model\"\u003eWeb Server\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Client_(computing)\"\u003eClient\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/IP_address\"\u003eIP Address\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Internet_service_provider\"\u003eInternet Service Provider (ISP)\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\"\u003eHypertext Transfer Protocol (HTTP)\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Domain_Name_System\"\u003eDomain Naming System (DNS)\u003c/a\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eUniform Resource Locator (URL)\u003c/h4\u003e\r\n\u003cp\u003eAs we discussed in the previous lesson, when you navigate to http://www.moringaschool.com/, your browser makes a request to a web server. One of the most important parts of that request is the address you're visiting. That address is technically called the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eURL\u003c/strong\u003e, short for\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eUniform Resource Locator\u003c/strong\u003e, or\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eURI\u003c/strong\u003e, short for\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eUniform Resource Identifier\u003c/strong\u003e. (The difference is largely semantics.) In this lesson, we'll explore the URL in detail.\u003c/p\u003e\r\n\u003ch5\u003eRequired URL elements\u003c/h5\u003e\r\n\u003cp\u003eSome elements must be included in the URL for a request to be successful. Here is an example of a URL.\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e http://www.moringaschool.com/about\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eLet us break it down to see each individual element.\u003c/p\u003e\r\n\u003ch5\u003e1. Scheme\u003c/h5\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003escheme\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003edefines how the client locates or acts upon the requested resource. In our example, the client will make a request using the _http://_ scheme. Other schemes include _ftp_, _mailto_, and _file_. The scheme is always followed by a colon; for the http scheme, a colon and two slashes (://).\u003c/p\u003e\r\n\u003ch5\u003e2. Host\u003c/h5\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ehost\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eprovides the details of where the requested resource is located. The host in a URL is either the domain name for the IP address or the IP address itself. In our example, the host is _www.moringaschool.com_.\u003c/p\u003e\r\n\u003ch5\u003e3.Path\u003c/h5\u003e\r\n\u003cp\u003eThe path consists of one or more segments separated by slashes and provides the name for identifying the resource requested. In our example, the path indicates the resource: _/about_. This directs to the _About_ page of the Moringa school website.\u003c/p\u003e\r\n\u003ch5\u003eOptional URL elements\u003c/h5\u003e\r\n\u003cp\u003eNot all elements in a URL are required. Here are two that are optional.\u003c/p\u003e\r\n\u003ch5\u003e1. ? Query\u003c/h5\u003e\r\n\u003cp\u003eThere may be times where the URL contents must provide additional details for a resource to be identified.\u003c/p\u003e\r\n\u003cp\u003eFor example, if we use the search functionality on _https://www.python.org_, the server will need to know the input that we enter in order to know what search results to return. When we enter \"python3\" as our search parameter and press \"Search\", the request is made to this URL: _https://www.python.org/search/?q=python3_\u003c/p\u003e\r\n\u003cp\u003eAfter the path in the URL, we see a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e?\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esymbol which indicates the beginning of a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003equery string\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eYou'll see our search parameter has a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ekey\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eof _search_ and a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003evalue\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eof _internet_. Query parameters are separated by the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026amp;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esymbol when there is more than one.\u003c/p\u003e\r\n\u003cp\u003eWith this information, the server will use the value to query the database for only the lessons that have the term \"internet\" in them.\u003c/p\u003e\r\n\u003ch5\u003e2. # Fragment\u003c/h5\u003e\r\n\u003cp\u003eAnother optional URL element is called a fragment.\u003c/p\u003e\r\n\u003cp\u003eHere is an example of a URL containing a fragment:\u003c/p\u003e\r\n\u003cp\u003e_https://docs.python.org/3.6/tutorial/#the-python-tutorial_\u003c/p\u003e\r\n\u003cp\u003eFragments begin with a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e#\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esymbol and contain information that's typically processed by the client, rather than the server. In this example, \"the-python-tutorial\" is the id of a div in the HTML document that is returned. The HTML page is extremely long but by adding the fragment, the browser will position the display of the page precisely at that element when displayed.\u003c/p\u003e\r\n\u003cp\u003eIf you remove the fragment, the position returns to the default top of the document.\u003c/p\u003e\r\n\u003ch4\u003eTerminology\u003c/h4\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eUniform Resource Identifier (URI)/Uniform Resource Locator (URL)\u003c/strong\u003e: The web address which specifies the location of the requested web resources.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eScheme\u003c/strong\u003e: The part of the URL that indicates the protocol to be used in communication (e.g. http://).\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eHost\u003c/strong\u003e: The part of the URL that contains the domain name.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003ePath\u003c/strong\u003e: The part of the URL that contains the resource name.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eQuery string\u003c/strong\u003e: An optional part of a URL that contains parameters for querying a database; begins with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e?\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esymbol; often used in a search request.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eFragment\u003c/strong\u003e: An optional part of a URL that contains details for where the browser should display the information (e.g. on a particular div).\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eAdditional Resources\u003c/h4\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Uniform_Resource_Locator\"\u003eUniform Resource Locator\u003c/a\u003e\u003c/p\u003e\r\n\u003ch3\u003eHTTP Requests\u003c/h3\u003e\r\n\u003cp\u003eLet's take a closer look at HTTP. In this lesson, we'll examine the organization and data of HTTP requests.\u003c/p\u003e\r\n\u003ch4\u003eHTTP request-response cycle\u003c/h4\u003e\r\n\u003ch5\u003eClient HTTP Requests\u003c/h5\u003e\r\n\u003cp\u003eWhen the client triggers a new HTTP request, the request includes four elements that will be sent to the server:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eMethod\u003c/li\u003e\r\n\u003cli\u003ePath\u003c/li\u003e\r\n\u003cli\u003eHeaders\u003c/li\u003e\r\n\u003cli\u003eBody\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch5\u003eHTTP Method\u003c/h5\u003e\r\n\u003cp\u003eHTTP methods, also known as _verbs_, indicate the kind of action that the client is requesting be done in the server. The two most frequently used methods are the ones that are supported by all browsers:\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eGET\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ePOST\u003c/strong\u003e. A request with a GET method indicates that a resource is being _retrieved_. A request with a POST method indicates that the resource is being _changed_ - _possibly added_, _updated_ or _deleted_.\u003c/p\u003e\r\n\u003cp\u003eAn example of a GET request would be when we navigate to the Moringa School immersive page. The client requests the resource at the URL, _http://www.moringaschool.com/_ and the / resource(s) is retrieved.\u003c/p\u003e\r\n\u003cp\u003eAn example of a POST request would be when we click submit on a form to add our email to a mailing list. The message would post data to the server by adding our information to the mailing list resource.\u003c/p\u003e\r\n\u003ch5\u003ePath\u003c/h5\u003e\r\n\u003cp\u003eThe path identifies the web resource that should be retrieved (GET) or acted upon (POST). In our example, _http://www.moringaschool.com/_, the resource _/immersive_ is known as the path.\u003c/p\u003e\r\n\u003ch5\u003eHeaders\u003c/h5\u003e\r\n\u003cp\u003eRequest headers are part of the request message protocol and provide the server with more information about the client, the server and the request.\u003c/p\u003e\r\n\u003cp\u003eHere are some examples of header fields that are included in a request message:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eHost: This is the host or domain name of the server. In our example: www.moringaschool.com.\u003c/li\u003e\r\n\u003cli\u003eUser-agent: This is the software acting on behalf of the user to make the request; in our example, this would be our browser (Chrome, Firefox, etc)\u003c/li\u003e\r\n\u003cli\u003eAccept-language: This includes the human languages that are acceptable for the response.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003eBody\u003c/h5\u003e\r\n\u003cp\u003eThe body contains data beyond the contents of the URL and headers that needs to be transmitted to the server. For example, if a user submits a form with data, the resulting POST request would need to include all of the data inputted so the server could store the information. This data is delivered in the body of the request.\u003c/p\u003e\r\n\u003ch4\u003eTerminology\u003c/h4\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eHTTP Method\u003c/strong\u003e: The kind of action that the client is requesting to be done in the web server, also known as a verb. Most frequently used HTTP methods: GET and POST.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eGET\u003c/strong\u003e: A request method that retrieves information from the server but does not change anything on the server. Example: request to see a homepage for a site.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003ePOST\u003c/strong\u003e: A request method that acts upon the resource by adding, updating or deleting information on the server. Example: submitting a form to join a mailing list which adds your name to the list.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eHTTP Request Header\u003c/strong\u003e: The first lines of an HTTP request message that include information about the client, server and the request.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eHTTP Request Body\u003c/strong\u003e: Data that needs to be transmitted to the server in the HTTP request message (like data from a submitted form).\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eAdditional Resources\u003c/h4\u003e\r\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/List_of_HTTP_header_fields\"\u003eList of all HTTP Header Fields\u003c/a\u003e\u003c/p\u003e\r\n\u003ch4\u003eHTTP Responses\u003c/h4\u003e\r\n\u003cp\u003eAfter a server receives an HTTP request, it will respond with a message that consists of the following three elements:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eStatus\u003c/li\u003e\r\n\u003cli\u003eHeaders\u003c/li\u003e\r\n\u003cli\u003eBody\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch5\u003eStatus\u003c/h5\u003e\r\n\u003cp\u003eThe first line of a response message is the status which includes a status code and reason phrase. The HTTP status code is a three-digit number that indicates how the request was processed (or not). Each code is also accompanied by a reason phrase which is not read by the client but is intended for humans to provide a brief description of the status code.\u003c/p\u003e\r\n\u003cp\u003eBelow is a list of the five status code classes determined by the first digit of the code. This lesson shows the most common codes. To see a complete list, visit HTTP Status Codes.\u003c/p\u003e\r\n\u003ch5\u003e1xx Informational\u003c/h5\u003e\r\n\u003cp\u003eStatus codes beginning with 1 indicate the request was received. This class of code is rarely used.\u003c/p\u003e\r\n\u003ch5\u003e2xx Success\u003c/h5\u003e\r\n\u003cp\u003eStatus codes beginning with 2 indicate the request was received and handled successfully.\u003c/p\u003e\r\n\u003cp\u003eExamples\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e200\u003c/strong\u003e: OK\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e201\u003c/strong\u003e: Created\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003e3xx Redirection\u003c/h5\u003e\r\n\u003cp\u003eStatus codes beginning with 3 indicate that additional action is required to complete processing the request.\u003c/p\u003e\r\n\u003cp\u003eExamples\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e301\u003c/strong\u003e: Moved permanently\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e302\u003c/strong\u003e: Moved temporarily\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003e4xx Client errors\u003c/h5\u003e\r\n\u003cp\u003eStatus codes beginning with 4 indicate that something was wrong about the request.\u003c/p\u003e\r\n\u003cp\u003eExamples\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e400\u003c/strong\u003e: Bad Request (the request used invalid syntax)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e401\u003c/strong\u003e: Unauthorized (you have to log in)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e403\u003c/strong\u003e: Forbidden (you're logged in, but not allowed to make this request)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e404\u003c/strong\u003e: Not Found\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e422\u003c/strong\u003e: Unprocessable (the request had valid syntax but the instructions it contained were invalid)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003e5xx Server errors\u003c/h5\u003e\r\n\u003cp\u003eStatus codes beginning with 5 indicate that something went wrong on the server side, such as a bug in the code or a server that went down.\u003c/p\u003e\r\n\u003cp\u003eExamples\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e500\u003c/strong\u003e: Internal Server Error (usually a bug in the server code)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e502\u003c/strong\u003e: Bad Gateway (the server sent the request to another server and got an invalid response)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003e503\u003c/strong\u003e: Service Unavailable (the server is overloaded or down for maintenance)\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003eHeaders\u003c/h5\u003e\r\n\u003cp\u003eLike request headers, response headers include additional protocol providing more details about the HTTP response.\u003c/p\u003e\r\n\u003cp\u003eSome examples of response header fields include:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eServer: The name of the server where the response is coming from.\u003c/li\u003e\r\n\u003cli\u003eContent-Language: The human language(s) of the content.\u003c/li\u003e\r\n\u003cli\u003eContent-Length: How long the response body is in 8-bit bytes.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch5\u003eBody\u003c/h5\u003e\r\n\u003cp\u003eThe response body includes all of the content for the resource requested. You'll often hear it referred to as the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003epayload\u003c/strong\u003e. When we issue a GET request for _http://www.moringaschool.com/_, we expect the body to include an HTML document with the table of contents. This resource may need additional resources such as images, CSS, script files, etc. For each resource, a new request is made by the client and a new response is issued for the resource from the server.\u003c/p\u003e\r\n\u003cp\u003eOnce there is a response to all of the requests, the / resource is displayed in the browser.\u003c/p\u003e\r\n\u003ch4\u003eTerminology\u003c/h4\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eStatus code\u003c/strong\u003e: First line of the response message from the server consisting of a three-digit number indicating the status of the request. Example: 200 indicates that the request was successfully processed.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eStatus reason\u003c/strong\u003e: The human language interpretation of the status code, not read by the client but intended for humans.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003ePayload\u003c/strong\u003e: The data that was requested in the original request message that is not protocol. Example: the payload for a request for the main page of a website would be the actual HTML document content.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eOverview\u003c/h4\u003e\r\n\u003cp\u003eStatus Codes\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003e1xx\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eInformational\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003e2xx\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eSuccess\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003e3xx\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eRedirection\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003e4xx\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eClient errors\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003e5xx\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eServer errors\u003c/p\u003e\r\n\u003cp\u003eAdditional Resources Complete List of HTTP Status Codes may be found\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\r\n\u003ch2\u003eSetting up Flask\u003c/h2\u003e\r\n\u003cp\u003eThe most convenient way to install Flask is using a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003evirtual environment\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eA virtual environment is a private copy of the Python interpreter that allows us to install packages privately. This means all the third party modules will only be available in that environment. This is very useful because it prevents the packages from cluttering our system and also prevents conflicts.\u003c/p\u003e\r\n\u003ch3\u003eCreating a Virtual Environment.\u003c/h3\u003e\r\n\u003cp\u003eLet us create a simple\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eHello World\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eapplication.\u003c/p\u003e\r\n\u003cp\u003eCreate a new directory and name it\u003cspan\u003e \u003c/span\u003e\u003cem\u003eHello-Flask\u003c/em\u003e. Inside it let us create a new virtual environment for our application so that we can install Flask.\u003cspan style=\"font-size: 1rem;\"\u003e\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003ePython3.6 comes with a tool called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evenv\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat allows us to create a virtual environments.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 -m venv --without-pip virtual\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAbove we used the tool to create a virtual environment and called it\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evirtual\u003c/code\u003e. We can give our virtual environment any name provided it is easy to remember.\u003c/p\u003e\r\n\u003ch4\u003eActivating and Deactivating the virtual environment\u003c/h4\u003e\r\n\u003cp\u003eTo activate the virtual environment we run the following command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ \u003cspan class=\"nb\"\u003esource\u003c/span\u003e virtual/bin/activate\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe know the virtual environment is active when the terminal responds with the name of your virtual environment before your computer's name. For the name\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evirtual\u003c/code\u003e, the terminal would return this:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e james@james-P43SJ:~/Desktop/exerciseFiles/Hello-Flask$\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNext, we are going to download the latest version of pip in virtual our environment. We will be using pip to install flask and any other packages that we will need.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ curl https://bootstrap.pypa.io/get-pip.py | python\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eTo deactivate we simply use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edeactivate\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ekeyword\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e james@james-P43SJ:~/Desktop/exerciseFiles/Hello-Flask $ deactivate\r\n\r\njames@james-P43SJ:~/Desktop/exerciseFiles/Hello-Flask $\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003eInstalling Flask\u003c/h4\u003e\r\n\u003cp\u003eLet us first get back to our virtual environment with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esource virtual/bin/activate\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ \u003cspan class=\"nb\"\u003esource\u003c/span\u003e virtual/bin/activate\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow, in the virtual environment, we will install Flask to the project using the following command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ pip install flask\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we use the pip tool to install Flask to our project. In the next lesson, we will create a basic Flask application that displays\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eHello World\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto the browser.\u003c/p\u003e\r\n\u003c/div\u003e","frontPage":false},{"exportId":"weekend-warm-up","title":"Weekend: Warm up","type":"WikiPage","content":"\u003ch2\u003eWarm Up\u003c/h2\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\r\n\u003cp\u003e\u003cstrong\u003eFizz Buzz\u003c/strong\u003e\u003c/p\u003e\r\n\u003cp\u003eWrite a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cstrong\u003eReverse String\u003c/strong\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eEnter a string and the program will reverse it and print it out.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cstrong\u003eCheck if Palindrome\u003c/strong\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003eChecks if the string entered by the user is a palindrome. That is that it reads the same forwards as backwards like “racecar”\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003ch3\u003eQuestions\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eWhat is the Python Shell used for ?\u003c/li\u003e\r\n\u003cli\u003eWhat are the primary Data types in Python ?\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between a list,tuple and dictionary ?\u003c/li\u003e\r\n\u003cli\u003eWhat is slicing ?\u003c/li\u003e\r\n\u003cli\u003eWhy is exception handling useful ?\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between a Python module and Python package ?\u003c/li\u003e\r\n\u003cli\u003eWhat are some of the most common programmer caused errors, and what do they mean ?\u003c/li\u003e\r\n\u003c/ol\u003e","frontPage":false},{"exportId":"monday-movie-apis-macros","title":"Monday: Movie APIs; Macros","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eMovie API\u003c/h2\u003e\r\n\u003cp\u003eWe are going to get our movie data through\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://www.themoviedb.org/\"\u003eThe Movie Database\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eAPI. Head on to https://www.themoviedb.org/ and sign up for an account.\u003c/p\u003e\r\n\u003ch3\u003eCreating an API key\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eFirst go to your accounts settings page\u003cimg src=\"https://www.themoviedb.org/assets/static_cache/da34d170e2ffdb3db4a317314e64b186/images/api-create-1.png\" alt=\"Account settings\"\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eThen click on the API menu on the left\u003cimg src=\"https://www.themoviedb.org/assets/static_cache/41b35724525a13c05bb1d63fe7af7621/images/api-create-2.png\" alt=\"Api Menu\"\u003e\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003eClick on create an API Key to generate a new API key\u003cimg src=\"https://www.themoviedb.org/assets/static_cache/af031c5c6f6787caa956d374c1c3ce9b/images/api-create-3.png\" alt=\"Generate api key\"\u003e\n\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eStoring API keys\u003c/h3\u003e\r\n\u003cp\u003eWe will create another configuration file that will store our API key. Inside our root folder create a new directory\u003cspan\u003e \u003c/span\u003e\u003cem\u003einstance\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand inside it create a new\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. This is where we will store secret objects that we do not want to display to anyone.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003einstance/config.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eMOVIE_API_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u0026lt;Your Api Key\u0026gt;'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then include this folder inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.gitignore\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile\u003c/p\u003e\r\n\u003cp\u003e_.gitignore_\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003evirtual/\r\n*.pyc\r\ninstance/\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eNow we have to connect our application with this new configuration file.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.config\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Initializing application\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003einstance_relative_config\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Setting up configuration\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_pyfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'config.py'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003eWe pass in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einstance_relative_config\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich allow us to connect to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einstance/\u003c/code\u003efolder when the app instance is created.\u003c/p\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.config.from_pyfile('config.py')\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econnects to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfig.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile and all its contents are appended to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.config\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe then store the movie base URL inside the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp/config\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    General configuration parent class\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eMOVIE_API_BASE_URL\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'https://api.themoviedb.org/3/movie/{}?api_key={}'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto represent sections in the URL that will be replaced with actual values\u003c/p\u003e\r\n\u003ch3\u003eAPI Requests\u003c/h3\u003e\r\n\u003cp\u003eWe will then create\u003cspan\u003e \u003c/span\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile inside our app folder. This is where we will write code to make requests to our API.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Getting api key\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the app instance and from it we get the API key from the config object.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here\u003c/p\u003e\r\n\u003cp\u003ehttps://github.com/mbuthiya/watchlist/tree/03-movie-list-api\u003c/p\u003e\r\n\u003ch2\u003eMovie Class\u003c/h2\u003e\r\n\u003cp\u003eWe now need to create a Movie class that will allow us to create movie instances from the response from the API.\u003c/p\u003e\r\n\u003cp\u003eCreate a new folder inside the app and name it\u003cspan\u003e \u003c/span\u003e\u003cem\u003emodels\u003c/em\u003e\u003cspan\u003e \u003c/span\u003einside it create a new file\u003cspan\u003e \u003c/span\u003e\u003cem\u003emovie.py\u003c/em\u003e. We also create an empty\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einside the folder.\u003c/p\u003e\r\n\u003cp\u003eThis will make the folder a python package that can be imported to other packages outside it\u003c/p\u003e\r\n\u003cp\u003eWe then create test case file for the class inside our app folder we create a\u003cspan\u003e \u003c/span\u003e\u003cem\u003emovie_test.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emovie_test.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003emodels\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieTest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Test Class to test the behaviour of the Movie class\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Set up method that will run before every Test\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1234\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Python Must Be Crazy'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'A thrilling new Python Series'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003cspan\u003ehttps://image.tmdb.org/t/p/w500/\u003c/span\u003ekhsjha27hbs'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mf\"\u003e8.5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e129993\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_instance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eisinstance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003ccode\u003eUnittest\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule and the movie module. We then get the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003eclass which we will create.\u003c/p\u003e\r\n\u003cp\u003eWe then create a test class and inside we define a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod. This will instantiate our Movie class to make the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself.new_movie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eobject. We pass in six arguments.\u003c/p\u003e\r\n\u003cp\u003eWe then define a test case\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_instance\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat uses the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eisinstance()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that checks if the object\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself.new_movie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis an instance of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003eMake sure the test is failing. We then can add code to make the code work\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels/movie.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Movie class to define Movie Objects\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\u003cspan class=\"p\"\u003e,poster\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.poster\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u003cspan\u003ehttps://image.tmdb.org/t/p/w500/\u003c/span\u003e'\u003c/span\u003e\u003cspan class=\"o\"\u003e+ poster\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we define a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and then we create an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod and we pass in the six parameters we want inside our movie objects.\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e1. Title - The name of the movie\r\n2. Overview - A short description on the movie\r\n3. image- The poster image for the movie\r\n4. vote_average - Average rating of the movie\r\n5. vote_count - How many people have rated the movie\r\n6. id - The movie id\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eTask: For practice write a test that confirms that the object is instantiated correctly.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/04-create-movie-class\u003c/p\u003e\r\n\u003ch2\u003eCreating First API call\u003c/h2\u003e\r\n\u003cp\u003eWe now need to get data from our API. We insert the following code in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eurllib.request\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nn\"\u003ejson\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst, we handle the imports. We import the flask application instance. We then import the Python\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurllib.request\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule that will help us create a connection to our API URL and send a request and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ejson\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodules that will format the JSON response to a Python dictionary.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e....\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# Getting api key\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Getting the movie base url\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"MOVIE_API_BASE_URL\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then access our app configuration objects. We access the configuration objects by calling\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.config['name_of_object']\u003c/code\u003e. We get the API key and the movie URL.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecategory\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that gets the json response to our url request\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eget_movies_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecategory\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003eurllib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eurlopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movies_url\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eget_movies_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eget_movies_response\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eloads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movies_data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies_response\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'results'\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003emovie_results_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies_response\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'results'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprocess_results\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_results_list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in a movie category as an argument.\u003c/p\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.format()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod on the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebase_url\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the movie category and the api_key. this will replace the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecurly brace placeholders in the base_url with the category and api_key respectively.\u003c/p\u003e\r\n\u003cp\u003eThis creates\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies_url\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas the final URL for our API request.\u003c/p\u003e\r\n\u003cp\u003eWe then use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewith\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas our context manager to send a request using the\u003ccode\u003eurllib.request.urlopen()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies_url\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas an argument and sends a request as\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eread()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to read the response and store it in a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies_data\u003c/code\u003evariable.\u003c/p\u003e\r\n\u003cp\u003eWe then convert the JSON response to a Python dictionary using json.loads function and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies_data\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable.\u003c/p\u003e\r\n\u003cp\u003eWe then check if the response contains any data. For us to better understand what is happening, we need first to see what the data looks like. We achieve this by running the base URL(https://api.themoviedb.org/3/movie/popular?api_key=\u0026lt;your_API_KEY\u0026gt;) in our browser to get json response as shown in the image below:\u003c/p\u003e\r\n\u003cp\u003e\u003cimg\u003e\u003cimg src=\"viewer/files/watchlist%20json.png?canvas_download=1\u0026amp;canvas_qs_wrap=1\" alt=\"watchlist_json\" data-api-endpoint=\"https://moringaschool.instructure.com/api/v1/courses/6/files/6588\" data-api-returntype=\"File\"\u003e \u003c/p\u003e\r\n\u003cp\u003eAs you can see from the json response above, we have a property  \u003cem\u003eresult \u003c/em\u003ewhich is a list that contains the movie objects. This property is what we use to check if the response contains any data.\u003c/p\u003e\r\n\u003cp\u003eIf it does we call a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprocess_results()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in the list of dictionary objects and returns a list of movie objects .\u003c/p\u003e\r\n\u003cp\u003eWe then return\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_results\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich is a list of movie objects.\u003c/p\u003e\r\n\u003ch3\u003eProcessing Results\u003c/h3\u003e\r\n\u003cp\u003eWe need to create a function that will process the results and create movie objects from the elements that we need.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eprocess_results\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_list\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function  that processes the movie result and transform them to a list of Objects\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        movie_list: A list of dictionaries that contain movie details\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Returns :\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        movie_results: A list of movie objects\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_list\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'id'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'original_title'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eoverview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'overview'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eposter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'poster_path'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003evote_average\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'vote_average'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003evote_count\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_item\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'vote_count'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003emovie_object\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_object\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_results\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a function\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprocess_results()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in a list of dictionaries. We create an empty list\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_results\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethis is where we will store our newly created movie objects.\u003c/p\u003e\r\n\u003cp\u003eWe then loop through the list of dictionaries using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod and pass in the keys so that we can access the values.\u003c/p\u003e\r\n\u003cp\u003eSome\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_item\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e's might not have a poster. This will give an error when we are trying to create an object. So we check if the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_item\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ehas a poster then we create the movie object. We use the values we get to create a new movie object then we append it to our empty list\u003c/p\u003e\r\n\u003cp\u003eWe then return the list with movie objects.\u003c/p\u003e\r\n\u003cp\u003eTo get a better sense on how to use The Movie DB api visit the documentation page https://developers.themoviedb.org/3/getting-started/\u003c/p\u003e\r\n\u003ch3\u003eMaking the API call\u003c/h3\u003e\r\n\u003cp\u003eWe can now make the API call to get a particular category of movies\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.request\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Getting popular movie\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'popular'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Home - Welcome to The best Movie Review Website Online'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epopular\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction from the request module. We want to get the popular movie from our API.\u003c/p\u003e\r\n\u003cp\u003eWe create a variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epopular_movies\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhere we call our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"popular\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas an argument. we then pass the result from that function call to our template\u003c/p\u003e\r\n\u003ch2\u003eFor loops\u003c/h2\u003e\r\n\u003cp\u003eNow we need to display our popular movies to our template.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e....\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Popular movie section  --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt; Popular Movies\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e         \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular_movie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;li\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular_movie.title\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e \u0026lt;/body\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e ....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop inside a control block and loop through each movie. We create a list with the movie title.\u003c/p\u003e\r\n\u003cp\u003eYou can now run the application to confirm that the API is working and you should see a list of movies displayed.\u003c/p\u003e\r\n\u003ch4\u003eAdding More Categories\u003c/h4\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Getting popular movie\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'popular'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eupcoming_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'upcoming'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003enow_showing_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'now_playing'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Home - Welcome to The best Movie Review Website Online'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epopular\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eupcoming\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eupcoming_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enow_showing\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enow_showing_movie\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movies()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to get two more movie categories\u003cspan\u003e \u003c/span\u003e\u003cem\u003eupcoming movies\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cem\u003enow showing movies\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand then we pass them into our template.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e....\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Popular movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt; Popular Movies\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e         \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular_movie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;li\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003epopular_movie.title\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Upcoming movie  --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt; Upcoming Movies \u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e         \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003eupcoming_movie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003eupcoming\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;li\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eupcoming_movie.title\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Now showing movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt;Now Showing\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e         \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003enow_showing_movie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003enow_showing\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;li\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003enow_showing_movie.title\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNotice as we keep on adding more categories we start repeating our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop control blocks. We can use\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emacros\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eto make our code DRY.\u003c/p\u003e\r\n\u003ch3\u003eMacros\u003c/h3\u003e\r\n\u003cp\u003eMacros are the Jinja equivalent to python functions. It allows us to group blocks of our code's logic that will be reused multiple times.\u003c/p\u003e\r\n\u003cp\u003eCreate a new template file\u003cspan\u003e \u003c/span\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003ethis is where we will store all our macros.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003emacro\u003c/span\u003e \u003cspan class=\"nv\"\u003edisplayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003emovie_list\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie_list\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;li\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.title\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendmacro\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe define our first macro\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplayMovieList()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes one argument which is a list of movie objects. We then loop through the movie objects creating\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026lt;li\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etags to display movie titles.\u003c/p\u003e\r\n\u003cp\u003eWe can now update our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile to use the macro.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'macros.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAt the top of our file we will import our macros html file so that we can use in our document.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'macros.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;body\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Popular movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt; Popular Movies\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003epopular\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Upcoming movie  --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt; Upcoming Movies \u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eupcoming\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;!-- Now showing movie --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt;Now Showing\u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003enow_showing\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;/body\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then use the variable blocks to call our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplayMovieList\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in the different movie category lists.\u003c/p\u003e\r\n\u003cp\u003eNow we can run our application code to see if the movie titles are being displayed.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/06-macros\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e \u003c/p\u003e","frontPage":false},{"exportId":"thursday-introduction-tic-tac-toe-bulleter","title":"Thursday: Introduction; Tic Tac Toe; Bulleter","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eSo we have covered a lot of ground so far. Let us use some of the skills we have learnt to build a few projects.\u003c/p\u003e\r\n\u003ch2\u003eTic Tac Toe\u003c/h2\u003e\r\n\u003cp\u003eCreate a tic tac toe game where two users can can compete with each other.\u003cspan\u003e \u003c/span\u003e\u003ca href=\"http://web.cecs.pdx.edu/~bart/cs541-fall2001/homework/tictactoe-rules.html\"\u003eHere are the rules\u003c/a\u003e.\u003c/p\u003e\r\n\u003cp\u003eFeatures:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eOutline all the behaviors your application will have.\u003c/li\u003e\r\n\u003cli\u003eCreate a Player class for both players.\u003c/li\u003e\r\n\u003cli\u003eDraw the tic tac toe grid and update it when users play on a side.\u003c/li\u003e\r\n\u003cli\u003eCreate unit tests for all the behaviors.\u003c/li\u003e\r\n\u003cli\u003eCreate doc-strings for the modules, functions and methods\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003eBulleter\u003c/h2\u003e\r\n\u003cp\u003eTake a file and add\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e*\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein front of every line and capitalize the first word. Write updated items in a another file. Also copy the new file to the clipboard\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eOutline all the behaviors your application will have.\u003c/li\u003e\r\n\u003cli\u003eCreate unit tests for all the behaviours.\u003c/li\u003e\r\n\u003cli\u003eCreate doc-strings for the modules, functions and methods\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003eCSV parser\u003c/h2\u003e\r\n\u003cp\u003eComma Separated Values are files that store a large number of variables and data. They act Like a simple spreadsheet. Parsing through CSVs and manipulating data is one of a Python developers greatest skills. Using this\u003cspan\u003e \u003c/span\u003e\u003ca href=\"http://www.pythonforbeginners.com/systems-programming/using-the-csv-module-in-python/\"\u003etutorial\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eLearn how to use the CSV module in Python.\u003c/p\u003e\r\n\u003cp\u003eWhen you have completed that Tutorial You will download this file\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://drive.google.com/file/d/0B7-p5eNhYCPwS2NIMjhKMkR5cm8/view?usp=sharing\"\u003eJob Data\u003c/a\u003e. This is a CSV file that contains different jobs from a Jobs Board.\u003c/p\u003e\r\n\u003cp\u003eYour task Is to parse the CSV file and group all the Jobs according to the company that posted the jobs. So you create a folder that will contain all the jobs according to the company that posted the jobs.\u003c/p\u003e\r\n\u003cp\u003eWhen that is done you will go into those individual folders and categorize the jobs from that company into:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eEmployment-type.\u003c/li\u003e\r\n\u003cli\u003eLocation.\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eIndustry.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eOutline all the behaviors your application will have.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003eCreate unit tests for all the behaviors.\u003c/li\u003e\r\n\u003cli\u003eCreate doc-strings for the modules, functions and methods\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003c/div\u003e\r\n \r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"monday-introduction-and-objectives","title":"Monday: Introduction and Objectives","type":"WikiPage","content":"\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eOur\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eHello World\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eproject has given us a quick glimpse of how flask works. Let us dive in deeper to see how we can use flask to build larger and more dynamic applications.\u003c/p\u003e\r\n\u003ch3\u003eWatchlist Movie Review Website\u003c/h3\u003e\r\n\u003cp\u003eWe will be building a movie review website using flask. The web application will allow a user to find a movie, add a review to the movie and also add comments to reviews.\u003c/p\u003e\r\n\u003cp\u003eBy the end of the week we will have learned:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eWhat a template is and how to create one.\u003c/li\u003e\r\n\u003cli\u003eHow to add and manipulate content of a flask template.\u003c/li\u003e\r\n\u003cli\u003eRouting with dynamic content.\u003c/li\u003e\r\n\u003cli\u003eAdding Bootstrap to our application\u003c/li\u003e\r\n\u003cli\u003eCreate Error pages\u003c/li\u003e\r\n\u003cli\u003eWork with API to retrieve data.\u003c/li\u003e\r\n\u003cli\u003eHow to work with web forms.\u003c/li\u003e\r\n\u003cli\u003eUsing the request Object.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003e\u003cstrong\u003eIndependent Project Objectives\u003c/strong\u003e\u003c/h3\u003e\r\n\u003cp\u003eAt the end of the week you will submit a project that will be reviewed for the following objectives:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eTest have complete coverage of the behaviours being tested.\u003c/li\u003e\r\n\u003cli\u003eAll tests are passing.\u003c/li\u003e\r\n\u003cli\u003eCorrect implementation of two models; news source and news article.\u003c/li\u003e\r\n\u003cli\u003eYour project follows the proper folder structure.\u003c/li\u003e\r\n\u003cli\u003ePresence of a specification markdown that lists all the projects specification.\u003c/li\u003e\r\n\u003cli\u003eGit documentation follows the best practices(detailed commit messages and a well-formatted README)\u003c/li\u003e\r\n\u003cli\u003eThe project is polished and in a portfolio-quality state.\u003c/li\u003e\r\n\u003cli\u003eThe project is deployed\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e \u003c/p\u003e","frontPage":false},{"exportId":"weekend-agile-methodologies","title":"Weekend: Agile Methodologies","type":"WikiPage","content":"\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSCRUM Master \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe SCRUM master is a facilitator for an agile development team. They have a deep understanding of SCRUM principles and how to enact them in a team. The SCRUM master is responsible for:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eHelping the team to reach consensus on what can be achieved during a specific sprint.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eHelping the team to reach consensus during the daily stand up.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eHelping the team to stay focused and follow the agreed-upon rules for daily SCRUMs.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eRemoving obstacles that are impeding the team's progress.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eProtecting the team from outside distractions.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eProduct Owner \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe SCRUM product owner is typically a project's key stakeholder. Part of the product owner responsibilities is to have a vision of what he or she wishes to build, in conjunction with the customer’s vision, and convey that vision to the SCRUM team. This is key to successfully starting any agile software development project. The agile product owner does this in part through the product backlog, which is a prioritized features list for the product.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch2\u003e\u003cspan style=\"font-weight: 400;\"\u003eSCRUM Events \u003c/span\u003e\u003c/h2\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003ePrescribed events are used in SCRUM to create regularity and to minimize the need for meetings not defined in SCRUM. All events are time-boxed events, such that every event has a maximum duration. \u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eOther than the Sprint itself, which is a container for all other events, each event in SCRUM is a formal opportunity to inspect and adapt something. These events are specifically designed to enable critical transparency and inspection. Failure to include any of these events results in reduced transparency and is a lost opportunity to inspect and adapt.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSprint \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe heart of Scrum is a Sprint, a time-box of one month or less during which a “Done,” which means it must be in useable condition and meet the Scrum Team's definition of “Done.”, useable, and potentially releasable product increment(a sum of all the Product Backlog items completed during a Sprint and the value of the increments of all previous Sprints.) is created. Sprints best have consistent durations throughout a development effort. A new Sprint starts immediately after the conclusion of the previous Sprint. Sprints contain and consist of the Sprint Planning, Daily stand up, the development work, the Sprint Review, and the Sprint Retrospective. During the Sprint:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eNo changes are made that would endanger the sprint goal.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eQuality goals do not decrease.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eScope may be clarified and re-negotiated between the Product Owner and Development Team as more is learned.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSprint Planning \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe work to be performed in the Sprint is planned at the Sprint Planning. This plan is created by the collaborative work of the entire Scrum Team. The output of this is called the sprint backlog.The Sprint Goal is an objective set for the Sprint that can be met through the implementation of Product Backlog. It provides guidance to the Development Team on why it is building the Increment. It is created during the Sprint Planning meeting. Sprint Planning is time-boxed to a maximum of eight hours for a one-month Sprint. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches the Scrum Team to keep it within the time-box. Sprint Planning answers the following:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat can be delivered in the Increment resulting from the upcoming Sprint?\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eHow will the work need to deliver the Increment be achieved?\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eDaily Stand-up\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Daily Scrum is a 15-minute time-boxed event for the Development Team to synchronize activities and create a plan for the next 24 hours. This is done by inspecting the work since the last Daily Scrum and forecasting the work that could be done before the next one. The Daily Scrum is held at the same time and place each day to reduce complexity. During the meeting, the Development Team members explain:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat did I do yesterday that helped the Development Team meet the Sprint Goal?\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat will I do today to help the Development Team meet the Sprint Goal?\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eDo I see any impediment that prevents me or the Development Team from meeting the Sprint Goal?\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSprint Review /Demo\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eA Sprint Review is held at the end of the Sprint to inspect the Increment and adapt the Product Backlog if needed. During the Sprint Review, the Scrum Team and stakeholders collaborate about what was done in the Sprint. Based on that and any changes to the Product Backlog during the Sprint, attendees collaborate on the next things that could be done to optimize value. This is an informal meeting, not a status meeting, and the presentation of the Increment is intended to elicit feedback and foster collaboration. A demo of the increment is to be shown at this point as per the MVPs(discussed later) set. This is a four-hour time-boxed meeting for one-month Sprints. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches all to keep it within the time-box. The Sprint Review includes the following elements:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eAttendees include the Scrum Team and key stakeholders invited by the Product Owner.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Product Owner explains what Product Backlog items have been “Done” and what has not been “Done”.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Development Team discusses what went well during the Sprint, what problems it ran into, and how those problems were solved.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Development Team demonstrates the work that it has “Done” and answers questions about the Increment.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Product Owner discusses the Product Backlog as it stands. He or she projects likely completion dates based on progress to date (if needed).\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe entire group collaborates on what to do next so that the Sprint Review provides valuable input to subsequent Sprint Planning.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eReview of how the marketplace or potential use of the product might have changed what is the most valuable thing to do next.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eReview of the timeline, budget, potential capabilities, and marketplace for the next anticipated release of the product.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe result of the Sprint Review is a revised Product Backlog that defines the probable Product Backlog items for the next Sprint. The Product Backlog may also be adjusted overall to meet new opportunities.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSprint Retrospective \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Sprint Retrospective is an opportunity for the Scrum Team to inspect itself and create a plan for improvements to be enacted during the next Sprint. The Sprint Retrospective occurs after the Sprint Review and prior to the next Sprint Planning. This is a three-hour time-boxed meeting for one-month Sprints. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches all to keep it within the time-box. The Scrum Master participates as a peer team member in the meeting from the accountability over the Scrum process. The purpose of the Sprint Retrospective is to:\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eInspect how the last Sprint went with regards to people, relationships, process, and tools.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eIdentify and order the major items that went well and potential improvements.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eCreate a plan for implementing improvements to the way the Scrum Team does its work.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch2\u003e\u003cspan style=\"font-weight: 400;\"\u003eSCRUM Artifacts \u003c/span\u003e\u003c/h2\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eScrum Artifacts provide key information that the Scrum Team and the stakeholders need to be aware of for understanding the product under development, the activities done, and the activities being planned in the project.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eProduct backlog \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Product Backlog is an ordered list of everything that might be needed in the product and is the single source of requirements for any changes to be made to the product. The Product Owner is responsible for the Product Backlog, including its content, availability, and ordering. The Product Backlog lists all features, functions, requirements, enhancements, and fixes that constitute the changes to be made to the product in future releases. Product Backlog items have the attributes of a description, order, estimate and value.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSprint Backlog \u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Sprint Backlog is the set of Product Backlog items selected for the Sprint, plus a plan for delivering the product Increment and realizing the Sprint Goal. The Sprint Backlog is a forecast by the Development Team about what functionality will be in the next Increment and the work needed to deliver that functionality into a “Done” Increment. The Sprint Backlog makes visible all of the work that the Development Team identifies as necessary to meet the Sprint Goal. The Sprint Backlog is a plan with enough detail that changes in progress can be understood in the Daily Scrum.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eIncrement\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe Increment is the sum of all the Product Backlog items completed during a Sprint and the value of the increments of all previous Sprints. At the end of a Sprint, the new Increment must be “Done,” which means it must be in useable condition and meet the Scrum Team’s definition of “Done.” It must be in useable condition regardless of whether the Product Owner decides to actually release it.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cbr\u003e\u003cbr\u003e\u003c/p\u003e","frontPage":false},{"exportId":"monday-user-authentication-objectives","title":"Monday: User Authentication Objectives","type":"WikiPage","content":"\u003cp\u003eThis week we will add a few additional features to our application. To start with, we are going to add a way to authenticate users who visit our application. This means creating a user authentication system which is going to entail user registration, password hashing and a login form. We'll also go further and create a user profile for our users where they can upload their pictures. \u003c/p\u003e\r\n\u003cp\u003eYour work this week will cover:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eCreating a User model.\u003c/li\u003e\r\n\u003cli\u003eRelational database basic such as One to Many relationships.\u003c/li\u003e\r\n\u003cli\u003eCRUD functionality implementation.\u003c/li\u003e\r\n\u003cli\u003eHow to migrate changes made in our models to the database schema.\u003c/li\u003e\r\n\u003cli\u003eUploading an image.\u003c/li\u003e\r\n\u003cli\u003eSending a welcome email to our users when they sign up.\u003c/li\u003e\r\n\u003cli\u003eUpdating our review model so that reviews are saved in the database.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e","frontPage":false},{"exportId":"monday-one-to-many-relationships","title":"Monday: One to Many Relationships","type":"WikiPage","content":"\u003ch2\u003eOne to Many Relationship\u003c/h2\u003e\r\n\u003cp\u003eUsers have different levels of access in the application. We need to connect the users access with the User and the their level of access in our application.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRole\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'roles'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__repr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'User {self.name}'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a Role class that will define all the different roles. We create two columns for the ID and the name.\u003c/p\u003e\r\n\u003ch3\u003eCreating the relationship.\u003c/h3\u003e\r\n\u003cp\u003eRelationships are between two models that allow the models to reference each other. We want to create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eOne-Many\u003c/code\u003e\u003cspan\u003e \u003c/span\u003erelationship between our models. This is that one role can be shared by many different users.\u003c/p\u003e\r\n\u003cp\u003eWe need to create a connection between roles and users by using a Foreign Key. A Foreign key is a field in one table that references a primary key in another table.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'users'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003erole_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForeignKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'roles.id'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__repr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'User {self.username}'\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# .....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a new column in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erole_id\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand we give it an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eInteger\u003c/code\u003etype. We also pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.ForeignKey\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and pass in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'roles.id'\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument. This tells SQLAlchemy that this is a foreign key and is the ID of a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRole\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel.\u003c/p\u003e\r\n\u003cp\u003eWe also need to define that relationship inside our Roles model.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ....\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRole\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'roles'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erelationship\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'User'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ebackref\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'role'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"dynamic\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__repr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'User {self.name}'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.relationship\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto create a virtual column that will connect with the foreign key. We pass in 3 arguments. The first one is the class that we are referencing which is\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e. Next\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebackref\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eallows us to access and set our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass. We give it the value of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erole\u003c/code\u003e\u003cspan\u003e \u003c/span\u003enow because when we want to get the role of a user instance we can just run\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser.role\u003c/code\u003e. Lazy parameter is how SQLAlchemy will load our projects. The lazy option is our objects will be loaded on access and filtered before returning.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eRole\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@manager.shell\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emake_shell_context\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003edict\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRole\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRole\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRole\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and pass it into our shell context. Now we can update our database schema.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py shell\r\n\u0026gt;\u0026gt;\u0026gt; db.drop_all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.create_all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first have to drop the database and recreate it with the new model. We need to create the roles in our application\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003erole_admin\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Role\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Admin'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003erole_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Role \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'User'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.add_all\u003cspan class=\"o\"\u003e([\u003c/span\u003erole_admin,role_user\u003cspan class=\"o\"\u003e])\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.commit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create two roles and save them to our database.We can confirm these items have been added to our database .\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# select * from roles;\u003c/span\u003e\r\n id \u003cspan class=\"p\"\u003e|\u003c/span\u003e name  \r\n----+-------\r\n  \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e Admin\r\n  \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e User\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can now create Users.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_james\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"James Muriuki\"\u003c/span\u003e,role \u003cspan class=\"o\"\u003e=\u003c/span\u003e role_admin\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_christine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Christine\"\u003c/span\u003e,role \u003cspan class=\"o\"\u003e=\u003c/span\u003e role_user\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.add_all\u003cspan class=\"o\"\u003e([\u003c/span\u003euser_james,user_christine\u003cspan class=\"o\"\u003e])\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.commit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create our user instances by passing the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eusername\u003c/code\u003e. We also pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erole\u003c/code\u003evalue and equate it to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRole\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstances we created above. We can confirm the enries have been added by checking the PostgreSQL server.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# select * from users;\u003c/span\u003e\r\n id \u003cspan class=\"p\"\u003e|\u003c/span\u003e   username    \u003cspan class=\"p\"\u003e|\u003c/span\u003e role_id \r\n----+---------------+---------\r\n  \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e James Muriuki \u003cspan class=\"p\"\u003e|\u003c/span\u003e       \u003cspan class=\"m\"\u003e1\u003c/span\u003e\r\n  \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e Christine     \u003cspan class=\"p\"\u003e|\u003c/span\u003e       \u003cspan class=\"m\"\u003e2\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can query our data now.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003efirst_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.first\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; first_user.role\r\nUser Admin\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe target the first entry and then we check what role that user has. You can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/19-one-to-many-relationships\u003c/p\u003e","frontPage":false},{"exportId":"tuesday-pizza-shop","title":"Tuesday: Pizza Shop","type":"WikiPage","content":"\u003cp\u003eThe local pizza shop is trying to get more customers in by creating an online pizza ordering system. They have contacted you and your pair to build the system for them and have promised you a years worth of pizza as payment.\u003c/p\u003e\r\n\u003ch3\u003eUser Story\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eA user can see the available pizzas\u003c/li\u003e\r\n\u003cli\u003eA user can choose any pizza he/she wants and add it to cart.\u003c/li\u003e\r\n\u003cli\u003eA user should be prompted if he wants any extra toppings with the pizza.\u003c/li\u003e\r\n\u003cli\u003eA user should receive an email with a receipt for the pizza he/she ordered with the total price.\u003c/li\u003e\r\n\u003cli\u003eThe pizza shop should be able to update the pizza menu by adding or removing pizzas Even by updating pizza prices.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eProject specs\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eShould be presented in a high quality manner.\u003c/li\u003e\r\n\u003cli\u003eShould be well documented with comments and have a detailed\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eREADME\u003c/strong\u003e.\u003c/li\u003e\r\n\u003cli\u003eIt should have a detailed specs file with what your project can actually do.\u003c/li\u003e\r\n\u003cli\u003eIt should be published to heroku.\u003c/li\u003e\r\n\u003cli\u003eYou and your pair should be listed as contributors to the project.\u003c/li\u003e\r\n\u003cli\u003eThe project should have a requirements.txt file with all the projects dependencies.\u003c/li\u003e\r\n\u003cli\u003eThe project should be deployed and hosted.\u003c/li\u003e\r\n\u003c/ol\u003e","frontPage":false},{"exportId":"thursday-deploying-to-heroku","title":"Thursday: Deploying to Heroku","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eDeploying To Heroku.\u003c/h2\u003e\r\n\u003cp\u003eLet us now learn how we can deploy our apps to Heroku.\u003c/p\u003e\r\n\u003ch4\u003eRequirements\u003c/h4\u003e\r\n\u003col\u003e\r\n\u003cli\u003egunicorn.\u003c/li\u003e\r\n\u003cli\u003eHeroku account.\u003c/li\u003e\r\n\u003cli\u003eHeroku Command line Interface.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch4\u003eStep 1 . Gather all Requirements.\u003c/h4\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eInstall\u003cspan\u003e \u003c/span\u003e\u003ca href=\"http://gunicorn.org/\"\u003egunicorn\u003c/a\u003e\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eThis is a unix based server that will run our application on Heroku\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 -m  pip install gunicorn\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eCreate a free Heroku\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://moringacore-python.herokuapp.com/heroku.com\"\u003eaccount\u003c/a\u003e\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eThis will be our hosting environment for our application.\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eInstall the Heroku\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://devcenter.heroku.com/articles/heroku-cli\"\u003eCLI\u003c/a\u003e\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003eStep 2. List all the Python dependencies.\u003c/h4\u003e\r\n\u003cp\u003eWe need to list all the dependencies required by the Heroku environment.\u003c/p\u003e\r\n\u003cp\u003eTo do that we just type the command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip freeze\r\n\r\n\u003cspan class=\"nv\"\u003eclick\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e6\u003c/span\u003e.7\r\n\u003cspan class=\"nv\"\u003edominate\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e.3.1\r\n\u003cspan class=\"nv\"\u003eFlask\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.12.2\r\nFlask-Bootstrap\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e.3.7.1\r\nFlask-Script\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e.0.5\r\nFlask-WTF\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.14.2\r\n\u003cspan class=\"nv\"\u003egunicorn\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e19\u003c/span\u003e.7.1\r\n\u003cspan class=\"nv\"\u003eitsdangerous\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.24\r\n\u003cspan class=\"nv\"\u003eJinja2\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e.9.6\r\n\u003cspan class=\"nv\"\u003eMarkupSafe\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e.0\r\n\u003cspan class=\"nv\"\u003evisitor\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.1.3\r\n\u003cspan class=\"nv\"\u003eWerkzeug\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.12.2\r\n\u003cspan class=\"nv\"\u003eWTForms\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e.1\r\npkg-resources\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e.0.0\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe will put all those dependencies in a file called _requirements.txt_ that will be in our root folder.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip freeze \u0026gt; requirements.txt\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eGo into your _requirements.txt_ file and remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epkg-resources==0.0.0\u003c/code\u003edependency. This is a small bug that will prevent us from deploying our applications.\u003c/p\u003e\r\n\u003ch4\u003eStep 3. Creating a Procfile\u003c/h4\u003e\r\n\u003cp\u003eA Procfile is a mechanism for declaring what commands are run by the Heroku environment We will create a file in our root folder and name it\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eProcfile\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eIn our case we want to run our Flask application using gunicorn.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eProcfile\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003eweb: gunicorn manage:app\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003ch4\u003eStep 4. Create a new Heroku application\u003c/h4\u003e\r\n\u003cp\u003eIf you haven't done so, set up your Heroku account and follow the given steps.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku login\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThen let us create a new application\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku create \u0026lt;name-of-app\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eReplace the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026lt;name-of-app\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith what you want to call your application.\u003c/p\u003e\r\n\u003ch4\u003eStep 5 Adding configurations\u003c/h4\u003e\r\n\u003cp\u003eWe can now add our environment variables as configuration variables to our Heroku project\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku config:set \u003cspan class=\"nv\"\u003eMOVIE_API_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;YOUR MOVIE API\u0026gt;\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku config:set \u003cspan class=\"nv\"\u003eSECRET_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;YOUR SECRET KEY\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis will enable us to access the environment configurations in our Heroku application.\u003c/p\u003e\r\n\u003ch4\u003eStep 6. Deployment.\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ git add .\r\n$ git commit -m \u003cspan class=\"s2\"\u003e\"deployment to heroku\"\u003c/span\u003e\r\n$ git push heroku master\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHeroku goes through your\u003cspan\u003e \u003c/span\u003e\u003cem\u003erequirements.txt\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile,installs all our dependencies and builds our application.\u003c/p\u003e\r\n\u003ch2\u003eProjects\u003c/h2\u003e\r\n\u003ch3\u003eLost and Afraid\u003c/h3\u003e\r\n\u003cp\u003eCreate a text adventure game where a user is lost in a forest. The game would give the user a set of instructions and observations The user has to make decisions based on the options the game provides. You can also supplement the text with images.\u003c/p\u003e\r\n\u003cp\u003eHave the user create a profile before he starts playing. YOu can collect the user's name,their weapon of choice and 3 resources that they have.\u003c/p\u003e\r\n\u003ch3\u003eBook Worm.\u003c/h3\u003e\r\n\u003cp\u003eUsing the\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://developers.google.com/books/docs/v1/getting_started\"\u003eGoogle Books\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eAPI create an application that allows users to search for books and get information about the books.\u003c/p\u003e\r\n\u003c/div\u003e\r\n \r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"wednesday-writing-a-file-with-operator","title":"Wednesday: Writing a File With Operator","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eWriting a file\u003c/h2\u003e\r\n\u003cp\u003eWriting a file in python is pretty straight forward,\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"text-write.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"w\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we change the mode to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"w\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto mean we want to write on the file. We need to be careful when we do this because when we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"w\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eon an existing file it will overwrite all the content in that file.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"text-write.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"w\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Hello Moringa\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this on our console we see a new file\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etext-write.txt\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ehas been created in our project folder and the text\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"Hello Moringa\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis in it.\u003c/p\u003e\r\n\u003ch2\u003eWith operator\u003c/h2\u003e\r\n\u003cp\u003ePython has a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewith\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eoperator that can simplify how we read and write files. The operator creates a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003econtext manager\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat automatically closes the file when you are done.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we open the file, but we do not provide a closing operation. All the functionality we want to do with the data from the file, is done in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewith\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock.\u003c/p\u003e\r\n\u003ch2\u003eLorem File\u003c/h2\u003e\r\n\u003cp\u003eWe will now see how to manipulate data from a lorem ipsum text file.\u003c/p\u003e\r\n\u003cp\u003eCreate a new Folder name it\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eLorem\u003c/code\u003e. Inside the folder create two files\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadfiles.py\u003c/code\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_readfiles.py\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eCreate another file \u003ccode\u003etest.txt\u003c/code\u003e , then follow this \u003ca href=\"https://www.lipsum.com/\"\u003elink\u003c/a\u003e to create a lorem ipsum text then copy it into the file\u003c/p\u003e\r\n\u003cp\u003eFirst, Let us first breakdown the different behaviors we want our application to perform.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eWe would like to read the file\u003c/li\u003e\r\n\u003cli\u003eWe would like to see how many times a single word is being used.\u003c/li\u003e\r\n\u003cli\u003eWe would like to see how many lines we have in our text files\u003c/li\u003e\r\n\u003cli\u003eWe would like to see the longest word in the text file.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eSetup Test Class\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003etest_readfiles.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ereadfiles\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestReadFiles\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Class to test the  functions on the  readfiles module\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        unittest.TestCase: Class from the unittest module to create unit tests\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    \"\"\"\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"__main__\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst we setup the test class. Import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto create our test cases and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadfiles\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodules that will be holding our code.\u003c/p\u003e\r\n\u003ch3\u003eRead a file\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003etest_readfiles.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_get_data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Test case to confirm that we are getting data from the file\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        \"\"\"\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereadfiles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe are testing to see if we are actually getting data from the text file. And comparing it with our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadfiles.readfile()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that returns data from the file.\u003c/p\u003e\r\n\u003cp\u003eRun the code to confirm the test fails. Then write the code to pass the test.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003ereadfiles.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003etext_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eread_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etext_file\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that reads a text file and returns the data from the text file\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        \"\"\"\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etext_file\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eWrong File Path\u003c/h3\u003e\r\n\u003cp\u003eSo what if by mere chance we passed in a wrong file path. Let us test for this.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_nonfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Test to confirm that an exeption is raised when a wrong file is inputted\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        \"\"\"\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereadfiles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"tests.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we now pass in a wrong file name and we expect to get a None response from now calling the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadfiles.read_file()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction.\u003c/p\u003e\r\n\u003cp\u003eWhen we run this test we get a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFileNotFoundError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elets handle this error.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eread_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etext_file\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that reads a text file and returns the data from the text file\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Raises:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        FileNotFoundError:If it cannot the file\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    \"\"\"\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etext_file\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n            \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"n\"\u003eFileNotFoundError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we nest the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewith\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eoperator inside a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etry\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock and we catch the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFileNotFoundError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eexception we return\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eNone\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch2\u003eLorem File\u003c/h2\u003e\r\n\u003cp\u003eTry and implement the remaining features with your pair.Make sure you follow the Red-Green-Refactor when writing tests.\u003c/p\u003e\r\n\u003ch4\u003eFeatures\u003c/h4\u003e\r\n\u003col\u003e\r\n\u003cli\u003eWe would like to see how many times a single word is being used.\u003c/li\u003e\r\n\u003cli\u003eWe would like to see how many lines we have in our text files\u003c/li\u003e\r\n\u003cli\u003eWe would like to see the longest word in the text file.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"tuesday-links-and-static-files-error-pages","title":"Tuesday: Links and Static Files; Error Pages","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eLinks and CSS\u003c/h2\u003e\r\n\u003cp\u003eWe can now create our movie details page in our application. First we need to get the movie.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eget_movie_details_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003eurllib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eurlopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movie_details_url\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003emovie_details_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eloads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_details_data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003emovie_object\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'id'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'original_title'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003eoverview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'overview'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003eposter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'poster_path'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003evote_average\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'vote_average'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003evote_count\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_details_response\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'vote_count'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n            \u003cspan class=\"n\"\u003emovie_object\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_object\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movie()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in a movie id and returns a movie object. We create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movie_details\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eURL by formatting the base URL with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003eand API key.\u003c/p\u003e\r\n\u003cp\u003eWe then create a request and load the data and create a movie object.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.requests\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to our _views.py_ file.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/\u0026lt;int:id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View movie page function that returns the movie details page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'{movie.title}'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then update our movie details route. We create a movie object by calling the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_movie()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in the dynamic URL id . We then pass that route into our template file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e{% extends 'base.html'%}\r\n\u003cspan class=\"c\"\u003e\u0026lt;!-- Content block --\u0026gt;\u003c/span\u003e\r\n{% block content %}\r\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"container\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Poster background --\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"row\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-xs-6 col-sm-6 col-md-6 col-lg-6 posterPath\"\u003c/span\u003e \u003cspan class=\"na\"\u003estyle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"background: url({{movie.poster}}) no-repeat center center\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-xs-6 col-sm-6 col-md-6 col-lg-6 movie-details\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh3\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{ movie.title }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh3\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"overview\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ movie.overview }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ratings\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ movie.vote_average }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e - \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{ movie.vote_count}} votes \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n{% endblock %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a template with two columns passing in the movie poster on left column and movie details on the right. Now we need to link to this dynamic page.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003emacro\u003c/span\u003e \u003cspan class=\"nv\"\u003edisplayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003emovie_list\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie_list\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;div class=\"col-xs-12 col-sm-4 col-md-2 col-lg-2 movie-card\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;img src=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.poster\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\" alt=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.title\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e poster\" class=\"img-responsive\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;li class=\"text-center\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;a href=\"/movie/\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003emovie.id\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovie.title\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"nf\"\u003etruncate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendmacro\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe now want to update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplayMovieList\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emacro. We add the Movie poster to be displayed . We then add an anchor tag that links to the dynamic URL\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e/movie/{{movie.id}}\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe also change the movie title variable block by adding the truncate\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003efilter\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e. A filter is passed into a variable block to modify the content of of the block and are added after the variable with a pipe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e|\u003c/code\u003e\u003cspan\u003e \u003c/span\u003echaracter.\u003c/p\u003e\r\n\u003cp\u003eThe truncate filter shortens a variable size according to the characters we add to its parameters.\u003c/p\u003e\r\n\u003cp\u003e\u003ca href=\"http://jinja.pocoo.org/docs/2.9/templates/#list-of-builtin-filters\"\u003eFind all the Jinja Built In Features here\u003c/a\u003e\u003c/p\u003e\r\n\u003cp\u003eNow when we load our application we see each movie as with a movie image and a link. And when we click the link we are taken to the movies details page.\u003c/p\u003e\r\n\u003ch3\u003e\u003ccode\u003eurl_for()\u003c/code\u003e\u003c/h3\u003e\r\n\u003cp\u003eFlask provides the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ehelper function that generates a URL from information stored in the app URL map. We can use it to link our application to CSS.\u003c/p\u003e\r\n\u003cp\u003eStatic files like Images,CSS and JavaScript files are given a special route by flask in which they can be accessed\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e/static/\u0026lt;filename\u0026gt;\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eWe first create a\u003cspan\u003e \u003c/span\u003e\u003cem\u003ecss\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efolder inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003estatic\u003c/em\u003e\u003cspan\u003e \u003c/span\u003esub folder. We then create a CSS file for our index page.\u003cspan\u003e \u003c/span\u003e\u003cem\u003eindex.css\u003c/em\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'macros.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Styles block --\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003estyles\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nb\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;link rel=\"stylesheet\" href=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'static'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003efilename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'css/index.css'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- Content block --\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblock styles\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock provided by the\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebootstrap/base.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. Before we add our content we first create a variable block and call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esuper()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction. This tells Jinja not to override any code that is defined in the block. Remember the\u003cem\u003ebootstrap/base.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003ehas defined links to the bootstrap css files and we do not want to override those links.\u003c/p\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to create a link to the static file. The function takes in the view function as the first argument, which is\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estatic\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand then we pass in the dynamic filename\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecss/index.css\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eWe can now manipulate our template file and add styling to it.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/10-Adding-Css\u003c/p\u003e\r\n\u003ch2\u003eError Pages\u003c/h2\u003e\r\n\u003cp\u003eIf by some chance a user enters a wrong URL in the browser. Let's say they pass in movies instead of movie.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehttp://127.0.0.1:5000/movies/396422\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethey will be greeted with the default\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e404\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epage provided by flask. But this page is boring. We can create our own error page and customize it.\u003c/p\u003e\r\n\u003cp\u003eLets add that code to our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/error.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/error.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@app.errorhandler\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efour_Ow_four\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function to render the 404 error page\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'fourOwfour.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erender_template()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and the flask application instance.\u003c/p\u003e\r\n\u003cp\u003eWe create a new decorator\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.errorhandler()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat passes in the error we receive. We create a view function. that returns\u003cspan\u003e \u003c/span\u003e\u003cem\u003efourOwfour.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile and we also pass in the status code we receive\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e404\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eNow we can go to and create our template file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003efourOwfour.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;h1\u0026gt;WHOOOPS we can't find that page\u0026lt;/h1\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLastly, we need to import \u003ccode\u003eerror.py\u003c/code\u003e file in the \u003ccode\u003e__init__.py\u003c/code\u003e file.\u003c/p\u003e\r\n\u003cp\u003e__init__.py\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e....\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003efrom app import views\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003efrom app import error\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eYou can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/11-Error-Messages\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School\u003c/p\u003e","frontPage":false},{"exportId":"wednesday-request-object","title":"Wednesday: Request Object","type":"WikiPage","content":"\u003ch2\u003eSearch for Movies\u003c/h2\u003e\r\n\u003cp\u003eWe are going to implement a search functionality from our API. Let us first create the search request.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esearch_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esearch_movie_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'https://api.themoviedb.org/3/search/movie?api_key={}\u0026amp;query={}'\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003eurllib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eurlopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie_url\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003esearch_movie_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003esearch_movie_response\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eloads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie_data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003esearch_movie_results\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_movie_response\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'results'\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003esearch_movie_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_movie_response\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'results'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003esearch_movie_results\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprocess_results\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie_list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_movie_results\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use a new URL for our search request that passes in our API key and the movie name then we create the request and process the results. We then create the view function for the for the search route.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.requests\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esearch_movie()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction from the\u003cspan\u003e \u003c/span\u003e\u003cem\u003erequests.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003eWe then create the search view function that will display our search items from the API.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/search/\u0026lt;movie_name\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View function to display the search results\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_name_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_name\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\" \"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_name_format\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"+\"\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name_list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esearched_movies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name_format\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'search results for {movie_name}'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'search.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esearched_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esearch\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function that has passes in a dynamic variable. We then format the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_name\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto add\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e+\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esign between the multiple words.\u003c/p\u003e\r\n\u003cp\u003eWe then call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esearch_movie()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the formated movie name. We then pass the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esearched_movies\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist to our template.\u003c/p\u003e\r\n\u003cp\u003eLet us create the search template.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003esearch.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'macros.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;div class=\"container\"\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e        \u0026lt;div class=\"row\"\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e            \u0026lt;h3\u0026gt; Found \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emovies\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"nf\"\u003ecount\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e matches \u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;hr\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;ul\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emacro.displayMovieList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003emovies\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e            \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e        \u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe extend the\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile then we import the\u003cspan\u003e \u003c/span\u003e\u003cem\u003emacros.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.We use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecount\u003c/code\u003efilter that counts all the items in a list. Then we call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplayMovieList()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emacro that will display all the movies.\u003c/p\u003e\r\n\u003cp\u003eLet us then create the search form in the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e...\r\n{% block content %}\r\n\r\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"container\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"text\"\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"movie_query\"\u003c/span\u003e \u003cspan class=\"na\"\u003eplaceholder\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Search for a Movie\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"form-control\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"submit\"\u003c/span\u003e  \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Submit\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"btn btn-default\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n...\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThen create a form with two Input fields. One to get a text input with the name\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_query\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethe other to adds a submit button.\u003c/p\u003e\r\n\u003ch3\u003eRequest Object\u003c/h3\u003e\r\n\u003cp\u003eThe request object is provided by flask and it encapsulates our HTTP request with all its arguments to the view function.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erequest\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eobject from flask inside the the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eviews.py\u003c/em\u003e. We will also import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eredirect\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunctions which we will see what they do later on.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Views\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Getting popular movie\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'popular'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eupcoming_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'upcoming'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003enow_showing_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'now_playing'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Home - Welcome to The best Movie Review Website Online'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie_query'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'search'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_name\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epopular\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epopular_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eupcoming\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eupcoming_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enow_showing\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enow_showing_movie\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our index view function. When we submit the form inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eit creates a query with the name of the input\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_query\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand the value as the input value. We get the query in our view function using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erequest.args.get()\u003c/code\u003efunction. We pass in the name of the query and the value is returned.\u003c/p\u003e\r\n\u003cp\u003eWe then check if the value actually exists if it does we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eredirect\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that redirects us to another view function. We then pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that passes in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esearch\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function together with the dynamic\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie_name\u003c/code\u003ewhich assign it to our form Input value.\u003c/p\u003e\r\n\u003cp\u003eWe can run our application and see our form. We can input a movies name and see results be loaded.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/12-Form-Requests\u003c/p\u003e\r\n\u003ch2\u003eCreating A review Class\u003c/h2\u003e\r\n\u003cp\u003eNow that we can successfully display movies from our API and our search functionality works perfectly, let's take it a step further and allow users to give reviews for movies they like.\u003c/p\u003e\r\n\u003cp\u003eLet us first create the Reviews class inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003emodels\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efolder.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels/reviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eclear_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclear\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReview\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that has a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that takes in the Movie ID, The review title, The image URL and the review itself. We then have a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_review\u003c/code\u003emethod that appends the review object to a class variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eall_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat is an empty list. We then have a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eclear_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method that clears all the Items from the list.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/13-create-movie-review-class\u003c/p\u003e","frontPage":false},{"exportId":"wednesday-movie-of-the-day","title":"Wednesday: Movie of the day","type":"WikiPage","content":"\u003cp\u003eSome people just have terrible taste in entertainment and might need some help. Your Job is to make an application that sends a daily movie recommendation to a person via email.\u003c/p\u003e\r\n\u003cp\u003eUsing\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://www.themoviedb.org/\"\u003eTMDB\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eapi to fetch movie data and sort it according to the users taste.\u003c/p\u003e\r\n\u003ch3\u003eUser Story\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eA user can sign up for your subscription service.\u003c/li\u003e\r\n\u003cli\u003eA user can input the different genres of movies that he/she is interested in.\u003c/li\u003e\r\n\u003cli\u003eA user gets daily movie recommendations straight to their email.\u003c/li\u003e\r\n\u003cli\u003eA user can also get Youtube trailer link to watch the movie trailer on Youtube.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eProject specs\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eShould be presented in a high quality manner.\u003c/li\u003e\r\n\u003cli\u003eShould be well documented with comments and have a detailed\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eREADME\u003c/strong\u003e.\u003c/li\u003e\r\n\u003cli\u003eIt should have a detailed specs file with what your project can actually do.\u003c/li\u003e\r\n\u003cli\u003eIt should be published to Heroku.\u003c/li\u003e\r\n\u003cli\u003eYou and your pair should be listed as contributors to the project.\u003c/li\u003e\r\n\u003cli\u003eThe project should have a requirements.txt file with all the projects dependencies.\u003c/li\u003e\r\n\u003cli\u003eThe project should be deployed and hosted.\u003c/li\u003e\r\n\u003c/ol\u003e","frontPage":false},{"exportId":"monday-oop-programming","title":"Monday: OOP Programming","type":"WikiPage","content":"\u003ch2\u003eIntroduction To Object oriented programming.\u003c/h2\u003e\r\n\u003ch3\u003eClasses\u003c/h3\u003e\r\n\u003cp\u003eA class is a blueprint to create objects. It allows us to group data and functions logically and in an easy to use manner.\u003c/p\u003e\r\n\u003cp\u003eLet us take an example of a\u003cspan\u003e \u003c/span\u003e\u003cem\u003ecar\u003c/em\u003e. A car has many\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003efeatures\u003c/strong\u003e. It has\u003cspan\u003e \u003c/span\u003e\u003cem\u003enumber of wheels, seat capacity ,fuel capacity, speed mileage, brand\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eetc.\u003c/p\u003e\r\n\u003cp\u003eA car also has many\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ebehaviors\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003elike\u003cspan\u003e \u003c/span\u003e\u003cem\u003estarting,stopping, accelerating, decelerating\u003c/em\u003e.\u003c/p\u003e\r\n\u003cp\u003eWhen creating a blueprint of this car we will include all those features (read\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eattributes\u003c/strong\u003e) and behaviors (read\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emethods\u003c/strong\u003e). This will be our template to creating car\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eobjects\u003c/strong\u003e\u003c/p\u003e\r\n\u003ch3\u003eObjects\u003c/h3\u003e\r\n\u003cp\u003eAn object is an instance of a class. In our car example above we created a basic template or blueprint to which we can create our car objects. Objects can have different property values but implement the same attributes and methods.\u003c/p\u003e\r\n\u003cp\u003eWe will consider these two in depth as we go along with the lessons.\u003c/p\u003e\r\n\u003ch3\u003eContact List application\u003c/h3\u003e\r\n\u003cp\u003eLet us learn by creating our contact list application.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eCreate a folder on your desktop and call it Contact-List\u003c/li\u003e\r\n\u003cli\u003eCreate in that folder, a file and name it\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact.py\u003c/code\u003e\n\u003c/li\u003e\r\n\u003cli\u003eOpen Atom\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003eCreating Classes\u003c/h2\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e   \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Class that generates new instances of contacts\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    \"\"\"\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn Python we create a class using the keyword\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eclass\u003c/strong\u003e\u003c/p\u003e\r\n\u003cp\u003eWe create a class\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand generate a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003edocstring\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003efor it. Docstrings are strings that occur as the first statement of a named block. They allow you to document what that code block does. This is part of Python's\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://www.python.org/dev/peps/pep-0008/\"\u003e\u003cstrong\u003ePEP 8\u003c/strong\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e(Python Enhancement Proposal). This is a style guide that is generally accepted by the Python community on how to write and present your code.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003e__init__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod in Python, allows us to create new instances of a class. And it also allows us to pass in properties for the new object.\u003c/p\u003e\r\n\u003cp\u003eIt is written with double underscores (\u003ccode\u003e_\u003c/code\u003e) before and after the word\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einit\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,phone_\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        __init__ method that helps us define properties for our objects.\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e        Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            first_name: New contact first name.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            last_name : New contact last name.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            number: New contact phone number.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            email : New contact email address.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create the constructor and pass in 5 arguments. The first argument\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis a special keyword in Python.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eVariable\u003c/h3\u003e\r\n\u003cp\u003eMethods and functions in Python have only one major difference. Notice how we declare\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e__init__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein the above example:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,phone_\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eMethods have one extra variable added to the beginning of their parameter list: The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis a variable that represents the instance of the object itself. If you are coming from another programming language like Java or JavaScript, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable can be likened to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ethis\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ekeyword,\u003c/p\u003e\r\n\u003ch3\u003eInstance and Class variables\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Class that generates new instances of contacts.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    \"\"\"\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,phone_\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n      \u003cspan class=\"c1\"\u003e# docstring removed for simplicity\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.phone_\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eemail\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e\u003cstrong\u003eInstance variables\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eare variables that are unique to each new instance of the class. In our example above, we have created four instance variables, that take up the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efirstname\u003c/code\u003e,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elastname\u003c/code\u003e,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumber\u003c/code\u003e, and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eemail\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eof our new contact.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Class that generates new instances of contacts.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    \"\"\"\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Empty contact list\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n      \u003cspan class=\"c1\"\u003e# docstring removed for simplicity\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.phone_\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eemail\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e\u003cstrong\u003eClass variables\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eare variables that belong to the entire class and can be accessed by all instances of the class. Here we create the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable that will be used to store our created contact objects .\u003c/p\u003e\r\n\u003cp\u003eLet us test our new class in the R.E.P.L. On the console open the R.E.P.L (on the terminal, type python3.6)\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003econtact\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehelp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we import our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from our contact module and use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehelp()\u003c/code\u003efunction to see the properties of our Class\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Muriuki\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"james@moringaschool.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'James'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe created a new contact object and passed in all four properties. Notice that we did not pass in an argument for\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable is passed in the background by the Python Interpretor and we do not need to worry about it.\u003c/p\u003e\r\n\u003cp\u003eWe then targeted the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efirstname\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty by using the object\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edot notation.\u003c/p\u003e","frontPage":false},{"exportId":"monday-unittest","title":"Monday: Unittest","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eUnittest\u003c/h2\u003e\r\n\u003cp\u003eBefore we begin writing tests, let us outline the different behaviors we want in our application\u003c/p\u003e\r\n\u003ch4\u003eB.D.D\u003c/h4\u003e\r\n\u003cp\u003eWe want our application to:\u003c/p\u003e\r\n\u003cp style=\"padding-left: 180px;\"\u003e1. Allow us to Create new contacts with properties.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 180px;\"\u003e2. Save contacts.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 180px;\"\u003e3. Display contacts.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 180px;\"\u003e4. Delete contacts.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 180px;\"\u003e5. Display contact information.\u003c/p\u003e\r\n\u003cp\u003eLet us create tests for these behaviors:\u003c/p\u003e\r\n\u003cp\u003eCreate a file in our Contact-List folder and name it\u003cspan\u003e \u003c/span\u003e\u003cem\u003econtact_test.py\u003c/em\u003e. This is where we will write all the tests for our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact_test.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Importing the unittest module\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003econtact\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Importing the contact class\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Test class that defines test cases for the contact class behaviours.\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        unittest.TestCase: TestCase class that helps in creating test cases\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo create tests in python, we first import a Python test framework called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest\u003c/code\u003e. We also import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003esubclass\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eclass called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTestContacts\u003c/code\u003e, that inherits from\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest.TestCase\u003c/code\u003e. A subclass is like a normal class but in addition to its own variables and method it also\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003einherits\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003emethods and variables from another class.\u003c/p\u003e\r\n\u003cp\u003eWe pass in the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eparent class\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eas a parameter in the parenthesis.\u003c/p\u003e\r\n\u003ch3\u003eFirst test\u003c/h3\u003e\r\n\u003cp\u003eThe first thing we want to test on, is if our objects are being instantiated correctly.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"c1\"\u003e# Items up here .......\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Set up method to run before each test cases.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Muriuki\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"james@ms.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# create contact object\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_init\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        test_init test case to test if the object is initialized properly\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elast_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Muriuki\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ephone_number\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"james@ms.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003e\n\u003ccode\u003esetUp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eMethod\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod allows us to define instructions that will be executed before each test method.\u003c/p\u003e\r\n\u003cp\u003eWe have instructed our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to create a new instance of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass, before each test method declared, and stores it in an instance variable in the test class\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself.new_contact\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eTests are defined with methods that start with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_\u003c/code\u003e, (this is just proper convention to define your tests).\u003c/p\u003e\r\n\u003cp\u003eWe created a test called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_instance\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto check if all our objects are instantiated correctly.\u003c/p\u003e\r\n\u003cp\u003eWe see some new syntax here\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself.assertEqual()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethis is a \u003ccode\u003eTestCase\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that checks for an expected result. The first argument is the expected result and the second argument is the result that is actually gotten.  Here, we are checking if the name and description of our new object is what we actually inputted.\u003c/p\u003e\r\n\u003ch4\u003eif\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e==\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'__main__'\u003c/code\u003e\n\u003c/h4\u003e\r\n\u003cp\u003ePython runtime has special attributes delimited with double underscores\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e(_)\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable evaluates to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"__main__\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eor the actual module name depending on how the module is being executed\u003c/p\u003e\r\n\u003cp\u003eSo by defining the condition\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif __name__ == '__main__'\u003c/code\u003e: we are confirming that anything inside the if block should run only if this is the file that is currently being run. \u003ca href=\"https://stackoverflow.com/questions/419163/what-does-if-name-main-d\"\u003eClick here\u003c/a\u003e to read more about this \u003c/p\u003e\r\n\u003cp\u003eFinally the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest.main()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eprovides a command line interface that collects all the tests methods and executes them.\u003c/p\u003e\r\n\u003cp\u003eNow when we run this code\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e----------------------------------------------------------------------\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eRan\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.000\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eOK\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis test passed because we had already implemented our code for creating a new instance in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass. Let us see how to implement the Red-Green-Refactor Method .\u003c/p\u003e\r\n\u003ch3\u003eSecond Test\u003c/h3\u003e\r\n\u003cp\u003eApart from creating contacts we would like to save them. Let us write a test for that.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact_test.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_save_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        test_save_contact test case to test if the contact object is saved into\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e         the contact list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e# saving the new contact\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we created a test called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_save_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat calls a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to our newly generated object.\u003c/p\u003e\r\n\u003cp\u003eThen we check the length of our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003elist to confirm an addition has been made to our contact list.\u003c/p\u003e\r\n\u003cp\u003eWhen we run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eE\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e======================================================================\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eERROR\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etest_save_contact\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e__main__\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestContacts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e----------------------------------------------------------------------\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eTraceback\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emost\u003c/span\u003e \u003cspan class=\"n\"\u003erecent\u003c/span\u003e \u003cspan class=\"n\"\u003ecall\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n  \u003cspan class=\"n\"\u003eFile\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"contact_test.py\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eline\u003c/span\u003e \u003cspan class=\"mi\"\u003e31\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003etest_save_contact\u003c/span\u003e\r\n    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"ne\"\u003eAttributeError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Contact'\u003c/span\u003e \u003cspan class=\"nb\"\u003eobject\u003c/span\u003e \u003cspan class=\"n\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003eno\u003c/span\u003e \u003cspan class=\"n\"\u003eattribute\u003c/span\u003e \u003cspan class=\"s1\"\u003e'save_contact'\u003c/span\u003e\r\n\r\n\u003cspan class=\"o\"\u003e----------------------------------------------------------------------\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eRan\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"n\"\u003etests\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.001\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eFAILED\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerrors\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe get an error.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eAttributeError: 'Contact' object has no attribute 'save_contact'\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eThis is a good thing because we want our test to fail. We can now add some code in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto make this pass.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Empty contact list\u003c/span\u003e\r\n \u003cspan class=\"c1\"\u003e# Init method up here\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        save_contact method saves contact objects into contact_list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that is called on a contact object and appends it to our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact-list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist.\u003c/p\u003e\r\n\u003cp\u003eSo now when we run the test file again.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003epython3.6 contact_test.py\r\n\r\n.\r\n----------------------------------------------------------------------\r\nRan \u003cspan class=\"m\"\u003e2\u003c/span\u003e tests in \u003cspan class=\"m\"\u003e0\u003c/span\u003e.000s\r\n\r\nOK\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eThe third test\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Items up here...\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_save_multiple_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            test_save_multiple_contact to check if we can save multiple contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            objects to our contact_list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            '''\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Test\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test@user.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# new contact\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add another test case\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_save_multiple_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto test if we can save multiple contacts in our contact list.\u003c/p\u003e\r\n\u003cp\u003eWe create a new contact object called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand save it. Then we check if the length of our contact list is equal to the number of contacts saved.\u003c/p\u003e\r\n\u003cp\u003ewhen we run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e..F\r\n\u003cspan class=\"o\"\u003e===============================================================\u003c/span\u003e\r\nFAILED \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003efailures\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we get an assertion error we expected to get\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e2\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebut we got\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e3\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe are getting this error because every time we run each test we are creating instances of contact and saving them and all of them are being counted.\u003c/p\u003e\r\n\u003ch4\u003e\n\u003ccode\u003etearDown\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# setup and class creation up here\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etearDown\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            tearDown method that does clean up after each test case has run.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            '''\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# other test cases here\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_save_multiple_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            test_save_multiple_contact to check if we can save multiple contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            objects to our contact_list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            '''\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Test\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test@user.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# new contact\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eJust like the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etearDown()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod executes a set of instructions after every test.\u003c/p\u003e\r\n\u003cp\u003eIn the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etearDown()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod we assign the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass as an empty list. This helps us get accurate test results every time a new test case.\u003c/p\u003e\r\n\u003cp\u003eWhen we run this now\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e...\r\n----------------------------------------------------------------------\r\nRan \u003cspan class=\"m\"\u003e3\u003c/span\u003e tests in \u003cspan class=\"m\"\u003e0\u003c/span\u003e.000s\r\n\r\nOK\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eFourth Test\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# More tests above\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_delete_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            test_delete_contact to test if we can remove a contact from our contact list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            '''\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Test\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test@user.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# new contact\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"c1\"\u003e# Deleting a contact object\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow we want to add the feature to delete contacts . We create a test for that behavior then we confirm if the length of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist is equal to the number of saved contacts.\u003c/p\u003e\r\n\u003cp\u003eLet us run this to confirm it fails. Then let us write the code to make the test pass.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edelete_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        delete_contact method deletes a saved contact from the contact_list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edelete_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that uses the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eremove()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to delete the contact object from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch3\u003eFifth Test\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_find_contact_by_number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        test to check if we can find a contact by phone number and display information\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Test\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0711223344\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test@user.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# new contact\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003efound_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_by_number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0711223344\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efound_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe now create a test case that tests if we can find a contact object we use the method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efind_by_number()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes on a phone number, and returns a contact object. Then we check if the contact object is equal to the saved contact.\u003c/p\u003e\r\n\u003cp\u003eRun the test to confirms if it fails. Then let us create the code to make the test pass\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e    \u003ccode\u003e\u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efind_by_number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Method that takes in a number and returns a contact that matches that number.\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e        Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            number: Phone number to search for\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Returns :\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            Contact of person that matches the number.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ephone_number\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003eDecorators\u003c/h4\u003e\r\n\u003cp\u003eIn the above example we see a new line\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@classmethod\u003c/code\u003e. This is referred to as a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003edecorator\u003c/strong\u003e. Decorators allow you to make simple modifications to callable objects like functions, methods, or classes.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e@classmethod\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esimply informs the python interpreter that this is a method that belongs to the entire class\u003c/p\u003e\r\n\u003cp\u003eJust like the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eself\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument refers to the object,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecls\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ereferred to the entire class, and does not need to be passed in when we call the method.\u003c/p\u003e\r\n\u003cp\u003eIn the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efind_by_number\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method, we loop through each contact object in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand check if the phone number is equal to the number passed in. It then returns the contact object.\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"monday-behaviour-driven-development-and-test-driven-development","title":"Monday: Behaviour Driven Development and Test Driven Development","type":"WikiPage","content":"\u003ch2\u003eBehavior Driven Development- BDD\u003c/h2\u003e\r\n\u003cp\u003eIt is a process that facilitates the collaboration between the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eproduct owner\u003c/strong\u003e,\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etester \u003c/strong\u003eand\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003edeveloper\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewhen determining the system behavior.\u003c/p\u003e\r\n\u003cp\u003eIn traditional development, the product owner comes up with behavior, tester and developer are left to translate the product owner's behavior into test cases and code.\u003c/p\u003e\r\n\u003cp\u003eThis is known as the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ethree amigos\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e(product owner, tester and developer). The requirements are arrived at through\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003equestions\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand use of\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eexamples\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewhen describing\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003escenarios\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eBDD allows the development team to have a clear understanding of the uncertainties, which in turn helps them create a product that matters. It focuses on why the features are created rather than how.\u003c/p\u003e\r\n\u003ch2\u003eImplementing BDD\u003c/h2\u003e\r\n\u003cp\u003eWe will use a scenario to explain the system behavior. Let's say we want to use BDD to explain how John is able to receive emails from Daisy.\u003c/p\u003e\r\n\u003cp\u003eWe use the following keywords\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eGiven\u003c/strong\u003e,\u003cstrong\u003eWhen\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eThen\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eSo based on the above scenario:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eGiven\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e: Daisy and John have email accounts.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eWhen\u003c/strong\u003e: John opens his email.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eThen\u003c/strong\u003e: He should see the mail from Daisy.\u003c/p\u003e\r\n\u003cp\u003eYou can see that we have given a simple description of how the process behaves when Daisy sends an email to John. The main idea is to understand how we can break down key steps from the mentioned scenario.\u003c/p\u003e\r\n\u003ch3\u003eWhy Use BDD?\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003eClarity\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- everyone is able to understand how the software works.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eSimplicity\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- using simple english to explain how the system works, this is key in helping the team to understand how everything works.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eTransparency\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- everyone knows what to expect from the system.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eSpecific\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- we only write code for the features that we need.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eConfidence\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- we are sure that the features are working since we are using tests.\u003c/p\u003e\r\n\u003ch3\u003eSummary\u003c/h3\u003e\r\n\u003cp\u003eWe use BDD to facilitate good communication between the different parties that are involved when developing a product. We are able to better understand everything that is required when developing the system, through constant feedback and use of examples.\u003c/p\u003e\r\n\u003ch2\u003eTest Driven Development -TDD\u003c/h2\u003e\r\n\u003cp\u003eTDD stands for\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etest driven development\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etest driven design\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eIt is a style of programming where 3 activities are involved\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eCoding\u003c/li\u003e\r\n\u003cli\u003eTesting\u003c/li\u003e\r\n\u003cli\u003eRefactoring\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eIt can be summarized into the following steps:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eWrite a single test describing a feature of the program.\u003c/li\u003e\r\n\u003cli\u003eRun the test and to make sure it fails because your program lacks that feature.\u003c/li\u003e\r\n\u003cli\u003eWrite the simplest code possible to make test pass.\u003c/li\u003e\r\n\u003cli\u003eRefactoring the code till it confirms to the simplest criteria.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003eBenefits of TDD\u003c/h3\u003e\r\n\u003cp\u003eWith TDD you get.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eFewer bugs in code -because you have tested out the main features\u003c/li\u003e\r\n\u003cli\u003eFocus - your focus is narrowed to making sure the test passes\u003c/li\u003e\r\n\u003cli\u003eDocumentation - tests act like documentation in that if you do not know what a bit of code does you can read it and see what it does.\u003c/li\u003e\r\n\u003c/ol\u003e","frontPage":false},{"exportId":"monday-templates-if-statements","title":"Monday: Templates; if Statements","type":"WikiPage","content":"\u003ch3\u003eCreating the Application.\u003c/h3\u003e\r\n\u003cp\u003eLet us begin by creating our application. Create a new directory and call it\u003cspan\u003e \u003c/span\u003e\u003cem\u003eWatchlist\u003c/em\u003e. Inside the project initialize git. Create a virtual environment inside our directory and name it virtual and activate it.\u003c/p\u003e\r\n\u003ch4\u003eApplication Structure\u003c/h4\u003e\r\n\u003cp\u003eFor the purpose of uniformity we will be working with the following folder structure.\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003ewatchlist/\r\n|\r\ngit \r\n|\r\napp/\r\n    |-app/static/ # Stores all static files CSS,Javascript ,Images\r\n    |\r\n    |-app/templates/ # Stores all our template files.\r\n    |\r\n    |-app/__init__.py # Where we will initialize our application.\r\n    |\r\n    |-app/views.py # Where we will create all our view functions.\r\n    |\r\n    |-app/error.py # Where we will create handlers for error pages.\r\n    |\r\n    |-app/config.py # Where we will store our app configurations.\r\n|\r\nvirtual/ # Our virtual Environment\r\n|\r\n.gitignore\r\n|\r\nREADME.md\r\n|\r\nrun.py # File that will run our application\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003e\u003cem\u003e.gitignore\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003evirtual/\r\n*.pyc\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eInside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003e.gitignore\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile we will exclude our virtual environment and also we will exclude all the compiled Python files\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e*.pyc\u003c/code\u003e\u003c/p\u003e\r\n\u003ch2\u003eCreate First Template\u003c/h2\u003e\r\n\u003cp\u003eFlask uses Jinja 2 as a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etemplate language\u003c/strong\u003e. A template language is a simple format that is used to automate the creation of documents.\u003c/p\u003e\r\n\u003cp\u003eLet us first install flask into our virtual environment\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNext, let us initialize our application.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Initializing application\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlask\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from flask module and use it to create an app instance. We pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable.\u003c/p\u003e\r\n\u003cp\u003eWe also import our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile from the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efolder. This will allow us to create views.\u003c/p\u003e\r\n\u003cp\u003eLet us now create our index page view function.\u003cspan\u003e \u003c/span\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Views\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erender_template()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction from Flask. This function takes in the name of a template file as the first argument. It then automatically searches for the template file in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/templates/\u003c/em\u003e\u003cspan\u003e \u003c/span\u003esub directory and loads it.\u003c/p\u003e\r\n\u003cp\u003eWe then import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance from the app folder.\u003c/p\u003e\r\n\u003cp\u003eWe created a route decorator\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@app.route('/')\u003c/code\u003e, and defined the view function\u003ccode\u003eindex()\u003c/code\u003e. As the response, we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erender_template()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex.html\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile which we will create.\u003c/p\u003e\r\n\u003cp\u003eInside the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/templates/\u003c/em\u003e\u003cspan\u003e \u003c/span\u003esub directory create the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile and add the following:\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Hello World \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let us run this application. Inside your root directory in the\u003cspan\u003e \u003c/span\u003e\u003cem\u003erun.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile add the following code.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erun.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edebug\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we import the app instance. We then check if the script is run directly and then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.run()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to launch our server. We pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edebug = True\u003c/code\u003eargument to allow us to run on debug mode so that we can easily track errors in our application.\u003c/p\u003e\r\n\u003cp\u003eNow we can run the application and see how it looks on our browser\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 run.py\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eVariables\u003c/h3\u003e\r\n\u003cp\u003eIn Jinja, 2 variables can be passed in and placed in predefined locations in our template file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eindex.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ message }} \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe remove the text and add a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003evariable block\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat will be replaced with dynamic content from flask. Variable blocks are defined with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{}}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edouble curly braces and a variable name placed inside.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Views\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Hello World'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function to add a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emessage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable. We then pass the variable as an argument in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erender_template()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction. The first\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emessage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eon the left of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e=\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esign, represents the variable in the template. While the one to the right represents the variable in our view function.\u003c/p\u003e\r\n\u003cp\u003eWhen we run the application we see the message displayed in our browser.\u003c/p\u003e\r\n\u003ch3\u003eDynamic routes\u003c/h3\u003e\r\n\u003cp\u003eSome URLs might have dynamic sections in them. For example, consider\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehttps://www.github.com/\u0026lt;username\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethis loads a user's profile according to the username passed in.\u003c/p\u003e\r\n\u003cp\u003eFlask also supports this using a special syntax inside the route decorator.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/\u0026lt;movie_id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View movie page function that returns the movie details page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add a new route that have a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function. The part in the angle brackets\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026lt;\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis dynamic. And any route mapped to this will be passed. This returns a response of a\u003cspan\u003e \u003c/span\u003e\u003cem\u003emovie.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003eBy default, dynamic parts are rendered as strings but they can be transformed to be of any type\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/\u0026lt;int:movie_id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View movie page function that returns the movie details page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'movie.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe changed the dynamic part to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026lt;int:movie_id\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto transform content to integer.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etemplates/movie.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Hello Movie {{ id }} \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe run this application and in our browser URL we navigate to the following address.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehttp://127.0.0.1:5000/movie/1234\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eWe should see the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eHello Movie 1234\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etext displayed in our browser window.\u003c/p\u003e\r\n\u003ch3\u003eConfigurations\u003c/h3\u003e\r\n\u003cp\u003eOur applications are going to need several configurations to fit our needs.\u003c/p\u003e\r\n\u003ch4\u003eCreating Configuration classes\u003c/h4\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    General configuration parent class\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\r\n\r\n\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProdConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Production  configuration child class\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Config: The parent configuration class with General configuration settings\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Development  configuration child class\u003c/span\u003e\r\n\r\n\u003cspan class=\"sd\"\u003e    Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Config: The parent configuration class with General configuration settings\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eDEBUG\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we created three classes. The parent\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass contains configurations that are used in both production and development stages. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eProdConfig\u003c/code\u003esubclass contains configurations that are used in production stages of our application and inherits from the parent\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDevConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esubclass contains configurations that are used in development stages of our application and inherits from the parent\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003eInside\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDevConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esubclass, we add\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDEBUG = True;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethis enables debug mode in our application.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.config\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Initializing application\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Setting up configuration\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo make our application use the new configurations, we import our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDevConfig \u003c/code\u003esubclass in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile. We then use \u003ccode\u003eapp.config.from_object()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to set up configuration and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDevConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esubclass.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003erun.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe now remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edebug = True\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument from our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.run()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebecause the debug mode has been enabled in the configuration file.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point at https://github.com/mbuthiya/watchlist/tree/01-create-basic-template\u003c/p\u003e\r\n\u003ch2\u003eControl Flows in Jinja templates\u003c/h2\u003e\r\n\u003cp\u003eJinja templates allow us to add some logic to our application.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    View root page function that returns the index page and its data\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Home - Welcome to The best Movie Review Website Online'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'index.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe want to pass in a title to our templates instead of defining them inside the html structure. We create a variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etitle\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass it into our templates.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etemplates/index.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003emeta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"utf-8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% if title %}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e {{ title }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% else %}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e Welcome to the best Movie Review website \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        {% endif %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add HTML structure to our template. Inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026lt;head\u0026gt;\u0026lt;/head\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewe have a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003econtrol block\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewith an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement.\u003c/p\u003e\r\n\u003cp\u003eUnlike the variable blocks defined with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{}}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econtrol blocks are defined using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{% %}\u003c/code\u003e. They are used to declare functions,loops and if statements.\u003c/p\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement checks if we have provided a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etitle\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable for the template. In the chance that you forget to provide a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etitle\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto your template the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econtrol block is executed and a default title is used instead.\u003c/p\u003e\r\n\u003ch4\u003eTask\u003c/h4\u003e\r\n\u003cp\u003eFor practice repeat the process we have gone through to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emovie.html\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epage displaying the movie id in the title.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/02-control-flow-html-pages\u003c/p\u003e","frontPage":false},{"exportId":"weekend-python-variables-and-modules-import","title":"Weekend: Python Variables and Modules Import","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003ePython Variables\u003c/h2\u003e\r\n\u003cp\u003eVariables are named references to \u003cstrong\u003eobjects\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eHere is an example of how we create a variable in Python in the Python shell:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create variables by using the assignment operator \u003ccode\u003e=\u003c/code\u003e . Variables do not store any value, but point to where the value is created in the computer's memory.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/ygY7Chc.jpg\" alt=\"Variable referencing\" width=\"582\" height=\"328\"\u003e\u003c/p\u003e\r\n\u003cp\u003eWhen we equate two variables we are referencing the variables to the same value.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/zb1EfxK.jpg\" alt=\"double variable referencing\" width=\"572\" height=\"322\"\u003e\u003c/p\u003e\r\n\u003cp\u003ePython variables can store values from any data type. Since Python is dynamic in nature we do not have to specify what type of data we are storing.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Hello\"\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eHello\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003epie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.1423\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003epie\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e3.1423\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch2\u003ePython Modules\u003c/h2\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/LxjZpFD.jpg\" alt=\"Python Modules\" width=\"565\" height=\"318\"\u003e\u003c/p\u003e\r\n\u003cp\u003eA Python module is a single executable (can be run or launched) Python file.It contains code to do a particular task and has a \u003ccode\u003e.py\u003c/code\u003e extension.\u003c/p\u003e\r\n\u003cp\u003eLet us create this on our desktops. Create a folder and name it \u003cem\u003eMS-Python-Pre-work\u003c/em\u003e. Create a new file and name it \u003cem\u003emodule_test.py\u003c/em\u003e. Open Atom and type in the following:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003emodule_test.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egreeting\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Hello\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eschool\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Moringa\"\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egreeting\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eschool\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo execute this code, navigate to the project folder in the console (where \u003cem\u003emodule_test.py\u003c/em\u003e is located) and run the following command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 module_test.py\r\nHello, Moringa!\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe type in \u003ccode\u003epython3.6\u003c/code\u003e then the name of the file \u003ccode\u003emodule_test.py\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eThe code is immediately executed and we get our output as \u003ccode\u003eHello, Moringa!\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eA Python program is a collection of modules that are linked to perform a particular function.\u003c/p\u003e\r\n\u003ch2\u003eImport\u003c/h2\u003e\r\n\u003cp\u003ePython comes with a lot of pre-written code in form of \u003cstrong\u003emodules\u003c/strong\u003e and \u003cstrong\u003epackages\u003c/strong\u003e.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eA module is a single Python file that contains code to do a particular task.\u003c/li\u003e\r\n\u003cli\u003eA package is made up of one or more modules that are joined to perform a particular task.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eModules and packages belong to Python's standard library. They extend Python's functionality, and it is important to learn how to use them.\u003c/p\u003e\r\n\u003cp\u003eTo use these packages or modules we use the \u003ccode\u003eimport\u003c/code\u003e keyword. Let us create a new Python file and name it \u003cem\u003eexample.py\u003c/em\u003e.\u003c/p\u003e\r\n\u003cp\u003eAdd the following line to the file:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ethis\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let's run the file from the terminal:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAnd this will print to the console:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003eZen\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eby\u003c/span\u003e \u003cspan class=\"n\"\u003eTim\u003c/span\u003e \u003cspan class=\"n\"\u003ePeters\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eBeautiful\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003eugly\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eExplicit\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003eimplicit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSimple\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"nb\"\u003ecomplex\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eComplex\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003ecomplicated\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eFlat\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003enested\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSparse\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003edense\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eReadability\u003c/span\u003e \u003cspan class=\"n\"\u003ecounts\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSpecial\u003c/span\u003e \u003cspan class=\"n\"\u003ecases\u003c/span\u003e \u003cspan class=\"n\"\u003earen\u003c/span\u003e\u003cspan class=\"s1\"\u003e't special enough to break the rules.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003epracticality\u003c/span\u003e \u003cspan class=\"n\"\u003ebeats\u003c/span\u003e \u003cspan class=\"n\"\u003epurity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eErrors\u003c/span\u003e \u003cspan class=\"n\"\u003eshould\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e \u003cspan class=\"k\"\u003epass\u003c/span\u003e \u003cspan class=\"n\"\u003esilently\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eUnless\u003c/span\u003e \u003cspan class=\"n\"\u003eexplicitly\u003c/span\u003e \u003cspan class=\"n\"\u003esilenced\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eface\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003eambiguity\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erefuse\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003etemptation\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eguess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThere\u003c/span\u003e \u003cspan class=\"n\"\u003eshould\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003epreferably\u003c/span\u003e \u003cspan class=\"n\"\u003eonly\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003eobvious\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003edo\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003ethat\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003emay\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003eobvious\u003c/span\u003e \u003cspan class=\"n\"\u003eat\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"n\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003eyou\u003c/span\u003e\u003cspan class=\"s1\"\u003e're Dutch.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eNow\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eoften\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eright\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIf\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ehard\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexplain\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"s1\"\u003e's a bad idea.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIf\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexplain\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"n\"\u003emay\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003egood\u003c/span\u003e \u003cspan class=\"n\"\u003eidea\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eNamespaces\u003c/span\u003e \u003cspan class=\"n\"\u003eare\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"n\"\u003ehonking\u003c/span\u003e \u003cspan class=\"n\"\u003egreat\u003c/span\u003e \u003cspan class=\"n\"\u003eidea\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"n\"\u003elet\u003c/span\u003e\u003cspan class=\"s1\"\u003e's do more of those!\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis is known as the.\u003ccode\u003eZen of Python.\u003c/code\u003eIt doesn't do much, but it is a nice way to show you how to import modules.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003emath\u003c/code\u003e Module\u003c/h3\u003e\r\n\u003cp\u003eLet us look at a more useful module, named \u003ccode\u003emath\u003c/code\u003e. Replace the contents of \u003cem\u003eexample.py\u003c/em\u003e with the following code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003emath\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eceil\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet's run it:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e3\u003c/span\u003e.0\r\n\u003cspan class=\"m\"\u003e3\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere, we import the \u003ccode\u003emath\u003c/code\u003e module. The \u003ccode\u003emath\u003c/code\u003e module comes with a lot of built-in methods, and we've used a couple of them here: the \u003ccode\u003esqrt()\u003c/code\u003e method to find the square root of 9 (3.0), which we represent with the variable \u003ccode\u003ex\u003c/code\u003e; and the \u003ccode\u003eceil()\u003c/code\u003e method to round up \u003ccode\u003ex\u003c/code\u003e (3).\u003c/p\u003e\r\n\u003cp\u003eThe syntax to use when we use module methods is \u003ccode\u003emodule_name.method_name(arguments)\u003c/code\u003e, where \u003ccode\u003emodule_name\u003c/code\u003e is the name of the module (\u003ccode\u003emath\u003c/code\u003e in this case) and \u003ccode\u003emethod_name\u003c/code\u003e is the name of the method (we've used \u003ccode\u003esqrt()\u003c/code\u003e and \u003ccode\u003eciel()\u003c/code\u003e).\u003c/p\u003e\r\n\u003ch4\u003e\n\u003ccode\u003efrom\u003c/code\u003e Keyword\u003c/h4\u003e\r\n\u003cp\u003eYou can also import a module method directly using the keyword \u003ccode\u003efrom\u003c/code\u003e. Try this out in \u003cem\u003eexample.py\u003c/em\u003e:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003emath\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eceil\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eceil\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"mf\"\u003e3.0\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNotice here that the syntax changes: we were able to use \u003ccode\u003esqrt()\u003c/code\u003e and \u003ccode\u003eciel()\u003c/code\u003e without typing \u003ccode\u003emath\u003c/code\u003e first. When we use the \u003ccode\u003efrom\u003c/code\u003e keyword, we can use the method name directly without referencing the module.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003erandom\u003c/code\u003e Module\u003c/h3\u003e\r\n\u003cp\u003eLet us use another fun module called \u003cstrong\u003erandom\u003c/strong\u003e. Replace the contents of \u003cem\u003eexample.py\u003c/em\u003e with the following code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erandom\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# We can generate a random number using the randint method\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003erandom_number\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erandint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erandom_number\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere used the \u003ccode\u003eimport\u003c/code\u003e keyword, to get the random module. From the module we used its \u003ccode\u003erandint()\u003c/code\u003e method and passed in two parameters to define the range of values from which Python will choose a random number (in our example, 0 is the low end of the range and 10 is the high end). When we run the file, it returns a random number, from the range provided by the parameters.\u003c/p\u003e\r\n\u003cp\u003eNow let's run it a few times:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\n$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e0\u003c/span\u003e\r\n$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e7\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe output on your console may look different, but the thing to note here is that it's generating a different value each time we run \u003cem\u003eexample.py\u003c/em\u003e. We have the \u003ccode\u003erandom\u003c/code\u003e module to thank for that.\u003c/p\u003e\r\n\u003ch3\u003eInput Exercise\u003c/h3\u003e\r\n\u003ch4\u003eCircumference Calculation\u003c/h4\u003e\r\n\u003cp\u003eWrite a program that calculates the circumference of a wheel. The formula is C=2πr, where π is the value 3.14 and \u003ccode\u003er\u003c/code\u003e is the radius of the circle.\u003c/p\u003e\r\n\u003cp\u003eTo take this a step further, let the radius of the circle be a random integer generated by the \u003ccode\u003erandom\u003c/code\u003e module.\u003c/p\u003e\r\n\u003c/div\u003e","frontPage":false},{"exportId":"monday-flask-login","title":"Monday: Flask Login","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eFlask-Login\u003c/h2\u003e\r\n\u003cp\u003eThe Flask-Login is an extension that helps us manage the user authentication system\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-login\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe install the extension and we can Initialize it inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_login\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eLoginManager\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003elogin_manager\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eLoginManager\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elogin_manager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession_protection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'strong'\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elogin_manager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elogin_view\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'auth.login'\u003cbr\u003e\u003cbr\u003edef create_app(config_name):\u003cbr\u003e\u003c/span\u003e    #....\u003cbr\u003e    #Initializing Flask Extensions\u003cbr\u003e    bootstrap.init_app(app)\u003cbr\u003e    db.init_app(app)\u003cbr\u003e    login_manager.init_app(app)\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eLogin Manager\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the flask-login extension. We then create an instance of the class.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003elogin_manager.session_protection\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eattribute provides different security levels and by setting it to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estrong\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewill monitor the changes in a user's request header and log the user out.\u003c/p\u003e\r\n\u003cp\u003eWe prefix the login endpoint with the blueprint name because it is located inside a blueprint.\u003c/p\u003e\r\n\u003ch3\u003eAuthenticated routes\u003c/h3\u003e\r\n\u003cp\u003eSome routes like submitting a new review should only be accessible to users who are authenticated and need to be secured.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e#....\r\nfrom flask_login import login_required\r\n#....\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eflask_login has a decorator\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogin_required\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat will intercept a request and check if the user is authenticated and if not the user will be redirected to the login page.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e#....\r\n@main.route('/movie/review/new/\u0026lt;int:id\u0026gt;', methods = ['GET','POST'])\r\n@login_required\r\ndef new_review(id):\r\n#....\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eWe place the decorator after our new review route decorator.\u003c/p\u003e\r\n\u003ch3\u003eConfiguring Models\u003c/h3\u003e\r\n\u003cp\u003eWe need to configure our User model to work with the extension. For this to happen we need our model to implement four methods:\u003c/p\u003e\r\n\u003cp style=\"padding-left: 150px;\"\u003e1. is_authenticated() - Returns a boolean if a User is authenticated or not.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 150px;\"\u003e2. is_active()- Checks if a user is allowed to authenticate.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 150px;\"\u003e3. is_anonymous()- Returns a boolean if a user is anonymous.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 150px;\"\u003e4. get_id()- Returns a unique identifier for User.\u003c/p\u003e\r\n\u003cp\u003eFlask-login provides a class that has the basic implementations of these methods.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_login\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUserMixin\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUserMixin\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that we will pass into our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel. This helps us not to have to implement the methods for ourselves.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUserMixin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'users'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"n\"\u003eunique\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003erole_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForeignKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'roles.id'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epassword_hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe also add an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eemail\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecolumn to our module, this will help our users to have a better access to their accounts. Remember to create a new Migration after you change the model.\u003c/p\u003e\r\n\u003cp\u003eFlask-login also requires a callback function that retrieves a user when a unique identifier is passed.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_manager\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@login_manager.user_loader\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eload_user\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_id\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_id\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFlask-login has a decorator\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@login_manage.user_loader\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat modifies the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eload_user\u003c/code\u003efunction by passing in a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser_id\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto the function that queries the database and gets a User with that ID.\u003c/p\u003e\r\n\u003ch2\u003eRegistering New Users\u003c/h2\u003e\r\n\u003cp\u003eWe can now register new Users to our application. We first need to create the registration form. We create a new file inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epackage\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eforms.py\u003c/code\u003e. We then need to import it to our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth/___init___.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003eauth/__init__.py\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eforms\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can now create our registration form\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eauth /forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_wtf\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ePasswordField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms.validators\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eEmail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eEqualTo\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first need to import a few items. First, we import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlaskForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the\u003ccode\u003eflask_wtf\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eextension. Secondly, we also import some input fields to facilitate user input. We then import some Validators;\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eEmail\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evalidator makes sure that the input follows a proper email address structure and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eEqualTo\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e helps us in comparing the two password inputs.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eauth /forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRegistrationForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Your Email Address'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\u003cspan class=\"n\"\u003eEmail\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Enter your username'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePasswordField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Password'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e(), \u003c/span\u003e\u003cspan class=\"n\"\u003eEqualTo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'password_confirm'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Passwords must match'\u003c/span\u003e\u003cspan class=\"p\"\u003e)])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epassword_confirm\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePasswordField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Confirm Passwords'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esubmit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Sign Up'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRegistrationForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eform class. We create four input fields.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eemail\u003c/code\u003efor the users email address, and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eRequired\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eEmail\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evalidators.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eusername\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efor the username field,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword_confirm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efields. We pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eEqualTo\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evalidator to the password to make sure both passwords are the same before the form is submitted.\u003c/p\u003e\r\n\u003ch3\u003eCustom Validators\u003c/h3\u003e\r\n\u003cp\u003eWe can also add our own custom validators.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eauth /forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRegistrationForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e# .......\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidate_email\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edata_field\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003edata_field\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n                \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'There is an account with that email'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidate_username\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edata_field\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edata_field\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'That username is taken'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eValidationError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efrom wtforms and then create two methods.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003evalidate_email\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etakes in the data field and checks our database to confirm there is no user registered with that email address. If a user with the same email address is found,  a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eValidationError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis raised and the error message passed in is displayed. As a result, the form is not submitted.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003evalidate_username\u003c/code\u003e\u003cspan\u003e \u003c/span\u003echecks to see if the username is unique and raises a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eValidationError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eif another user with a similar username is found.\u003c/p\u003e\r\n\u003cp\u003eWhen a method inside a form class begins with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003evalidate_\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eit is considered as a validator and is run with the other validators for that input field.\u003c/p\u003e\r\n\u003ch3\u003eRegistration route\u003c/h3\u003e\r\n\u003cp\u003e\u003cem\u003eauth/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.forms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eRegistrationForm\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# ....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@auth.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/register'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"GET\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"POST\"\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eregister\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRegistrationForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth.login'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"New Account\"\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth/register.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eregistration_form\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create the form instance and pass it into our template. When the form is submitted we create a new user from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel and pass in the email,username and password. We add the new user to the session and commit the session to add the user to our database.\u003c/p\u003e\r\n\u003cp\u003eOur user can then log in to the application and we redirect them to the login route.\u003c/p\u003e\r\n\u003cp\u003eWe can render the registration form with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewtf.quick_form()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/auth/register.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e{% extends 'base.html'%}\u003cbr\u003e{% import 'bootstrap/wtf.html' as wtf%}\u003cbr\u003e\u003cbr\u003e{% block content %}\u003cbr\u003e\u0026lt;div class=\"container\"\u0026gt;\u003cbr\u003e\u0026lt;div class=\"row\"\u0026gt;\u003cbr\u003e\u0026lt;div class=\"col-md-2\"\u0026gt; \u0026lt;/div\u0026gt;\u003cbr\u003e\u0026lt;div class=\"col-md-8\"\u0026gt;\u003cbr\u003e\u003cbr\u003e{{wtf.quick_form(registration_form)}}\u003cbr\u003e\u003cbr\u003e\u0026lt;/div\u0026gt;\u003cbr\u003e\u0026lt;div class=\"col-md-2\"\u0026gt;\u0026lt;/div\u0026gt;\u003cbr\u003e\u0026lt;/div\u0026gt;\u003cbr\u003e\u0026lt;/div\u0026gt;\u003cbr\u003e\u003cbr\u003e{% endblock%}\u003ccode\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch2\u003eLogin Users\u003c/h2\u003e\r\n\u003cp\u003eWe need to create a Login form that will give users access to some of the features of our application.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewtforms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ePasswordField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eBooleanField\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e.....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eBooleanField\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einput field that will render a checkbox in our form.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eLoginForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStringField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Your Email Address'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\u003cspan class=\"n\"\u003eEmail\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePasswordField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Password'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eremember\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBooleanField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Remember me'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esubmit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Sign In'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create 3 input fields for the users email,password and a boolean to confirm wheter the user wants to be logged out after the session.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003cbr\u003e\u003c/span\u003efrom flask import render_template,redirect,url_for, flash,request\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_login\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_user\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.forms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eLoginForm\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eRegistrationForm\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@auth.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/login'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emethods\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'GET'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'POST'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003elogin\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eLoginForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003everify_password\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003elogin_user\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremember\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'next'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'main.index'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003eflash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Invalid username or Password'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"watchlist login\"\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth/login.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_form\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst, we import flash and request functions from the flask module. The flash function helps us display error messages to the user.\u003c/p\u003e\r\n\u003cp\u003eWe create an instance of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eLoginForm\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass it into the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogin.html\u003c/code\u003etemplate. Then we check if the form is validated where we search for a user from our database with the email we receive from the form.\u003c/p\u003e\r\n\u003cp\u003eWe then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003everify_password\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to confirm that the password entered matches with the password hash stored in the database. If they match, we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogin_user\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction provided by the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eflask_login\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eextension to record the user as logged for that current session. It takes user object and the remember form data. If True it sets a long time cookie in your browser.\u003c/p\u003e\r\n\u003cp\u003eWe can now render the form in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogin.html\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etemplate using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewtf.quick_forms()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction.\u003c/p\u003e\r\n\u003cp\u003eTo confirm login state we can update our navigation bar.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/navbar.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e#....\r\n                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"nav navbar-nav navbar-right\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  {% if current_user.is_authenticated %}\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli style=\"color:white;padding:15px;\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{current_user.username}}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('auth.logout')}}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eSign out\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  {% else %}\r\n                  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('auth.login')}}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eSign in\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n                  {%endif%}\r\n                \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n#....\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCurrent user is a variable that is defined by flask-login and is made available to all the view functions and templates.\u003c/p\u003e\r\n\u003cp\u003eNow that we have all that taken care of, let's update our login.html file to have a form and a link to the sign up page.\u003c/p\u003e\r\n\u003cp\u003elogin.html\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bootstrap/wtf.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003ewtf\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;div class=\"container\"\u0026gt; \u003cbr\u003e    \u0026lt;div class=\"row\"\u0026gt;\u003cbr\u003e      \u0026lt;div class= \"col-md-2\"\u0026gt; \u0026lt;/div\u0026gt;\u003cbr\u003e      \u0026lt;div class=\"col-md-8\"\u0026gt;\u003cbr\u003e      \u0026lt;!--Flash message --\u0026gt;\u003cbr\u003e      {% for message in get_flashed_messages() %}\u003cbr\u003e        \u0026lt;div class=\"alert alert-danger\"\u0026gt;\u003cbr\u003e        \u0026lt;button type=\"button\" class=\"close\" data-dismiss=\"alert\"\u0026gt;\u0026amp;times;\u0026lt;/button\u0026gt;\u003cbr\u003e        {{ message }}\u003cbr\u003e        \u0026lt;/div\u0026gt;\u003cbr\u003e      {% endfor %}\u003cbr\u003e      \u0026lt;!-- Login form --\u0026gt;\u003cbr\u003e      {{wtf.quick_form(login_form)}}\u003cbr\u003e      \u0026lt;p\u0026gt; Don't have an account? \u0026lt;a href=\"{{url_for('auth.register')}}\"\u0026gt;Sign up here\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt;\u003cbr\u003e     \u0026lt;/div\u0026gt;\u003cbr\u003e     \u0026lt;div clas=\"col-md-2\"\u0026gt; \u0026lt;/div\u0026gt;\u003cbr\u003e    \u0026lt;/div\u0026gt;\u003cbr\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eLog out\u003c/h3\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_login\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003elogin_user\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elogout_user\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elogin_required\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@auth.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/logout'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@login_required\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003elogout\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003elogout_user\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"main.index\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create an authenticated route\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogout\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat calls the flask_login's\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogout_user\u003c/code\u003efunction. This will logout the user from our application. We then redirect the user to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epage.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here \u003ca href=\"https://github.com/mbuthiya/watchlist/tree/25-creating-registration-form\"\u003ehttps://github.com/mbuthiya/watchlist/tree/25-creating-registration-form\u003c/a\u003e\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"weekend-basic-flask-app","title":"Weekend: Basic Flask App","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eBasic Application Structure\u003c/h2\u003e\r\n\u003cp\u003eInside the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eHello-Flask\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eapplication create a new file named\u003cspan\u003e \u003c/span\u003e\u003cem\u003ehello.py\u003c/em\u003e.\u003c/p\u003e\r\n\u003ch3\u003eInitialization\u003c/h3\u003e\r\n\u003cp\u003eAdd the following code in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003ehello.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAll flask applications must create an application instance.\u003c/p\u003e\r\n\u003cp\u003eThe web server passes all the requests it receives to this object for handling. This uses a protocol called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eWeb Server Gateway Interface\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003efrom the flask module we import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlask\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass. We then create an instance of that class called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e, by passing in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable.\u003c/p\u003e\r\n\u003cp\u003eFlask uses the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable to determine the root path for the application. Flask locates resources for the application relative to that path.\u003c/p\u003e\r\n\u003ch3\u003eRoutes and view functions\u003c/h3\u003e\r\n\u003cp\u003eBrowsers send requests to the web servers which in turn send the request to the application instance. The application instance needs to know what code to execute depending on the request received.\u003c/p\u003e\r\n\u003ch4\u003eDefining a route.\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e.....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRoutes in flask are defined using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.route()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edecorator. Here we have defined the route for the index page.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e.....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u0026lt;h1\u0026gt; Hello World \u0026lt;/h1\u0026gt;'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe function\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eView Function\u003c/strong\u003e. It is the handler for the route defined above. Any time a request is sent to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e/\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eroute of our application the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex\u003c/code\u003e function will be executed.\u003c/p\u003e\r\n\u003cp\u003eThe return value for a view function is called a response, this is what a client or web browser will receive. Here we are returning a HTML\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eh1\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eelement that has the string\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eHello World\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch4\u003eSetting up a server\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e......\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edebug\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFlask has an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erun()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that launches the flask development server. First we check if the script is run directly. During development it is advisable to have the debug mode set to True. This activates the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003edebugger\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ereloader\u003c/strong\u003e\u003c/p\u003e\r\n\u003cp\u003eLet us run the application in our terminal\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evirtual\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003ehello\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\r\n\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eRunning\u003c/span\u003e \u003cspan class=\"n\"\u003eon\u003c/span\u003e \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e//\u003c/span\u003e\u003cspan class=\"mf\"\u003e127.0\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mf\"\u003e0.1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5000\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePress\u003c/span\u003e \u003cspan class=\"n\"\u003eCTRL\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eC\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003equit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eRestarting\u003c/span\u003e \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003estat\u003c/span\u003e\r\n \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eDebugger\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eactive\u003c/span\u003e\u003cspan class=\"err\"\u003e!\u003c/span\u003e\r\n \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eDebugger\u003c/span\u003e \u003cspan class=\"n\"\u003ePIN\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e******\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we start up our web server and see our application is running on\u003cem\u003ehttp://127.0.0.1:5000/\u003c/em\u003e. When we open this we are greeted by a large bold\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eHello World\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etext.\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"wednesday-simple-review-editor-converting-markdown-to-html","title":"Wednesday: Simple Review Editor; Converting Markdown to HTML","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eSimple Review Editor\u003c/h2\u003e\r\n\u003cp\u003eWriting our reviews in the textArea field can be tedious. Especially if we have really long reviews. We want to have a simple editor that will make it easier for us to write all our reviews\u003c/p\u003e\r\n\u003cp\u003eWe will use a plug in called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eflask-simplemde\u003c/strong\u003e, that will help us create a simple markdown editor allowing us to write our review in markdown. We will then download another python module\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emarkdown2\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat will help us convert the markdown to HTML code that we can use in our template.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evirtual\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epip\u003c/span\u003e \u003cspan class=\"n\"\u003einstall\u003c/span\u003e \u003cspan class=\"n\"\u003eflask\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003esimplemde\u003c/span\u003e \u003cspan class=\"n\"\u003emarkdown2\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then need to instantiate it inside our application factory function.\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e..........\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_simplemde\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eSimpleMDE\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e.....\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003esimple\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSimpleMDE\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e........\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esimple\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNext we need to set up configurations for the extension.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e# simple mde  configurations\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSIMPLEMDE_JS_IIFE\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSIMPLEMDE_USE_CDN\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThese two extensions are required by the extension for it function. We can then connect the SimpleMDE CDN to our application template\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etemplates/base.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e........\r\n\r\n{%block styles %}\r\n  {{super()}}\r\n  \u003cspan class=\"c\"\u003e\u0026lt;!--Importing the simple mde css and js files  --\u0026gt;\u003c/span\u003e\r\n  {{ simplemde.css}}\r\n  {{ simplemde.js }}\r\n\r\n{% endblock %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblock styles\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock where we use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{super()}}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto maintain any code that was defined in that code block inside our bootstrap's\u003cspan\u003e \u003c/span\u003e\u003cem\u003ebase.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. We then define the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{ simplemde.css}}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{ simplemde.js }}\u003c/code\u003e. These two define the link to the simpleMDE CDN.\u003c/p\u003e\r\n\u003cp\u003eWe can now load the markdown editor where we load our new review form.\u003cem\u003etemplates/new_review.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-md-4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n            {{ wtf.quick_form(review_form) }}\r\n            {{simplemde.load}}\r\n        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe load the simpleMDE editor by calling\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{{simplemde.load}}\u003c/code\u003e. This find the text area field and apply changes to it. Now when we launch our application we will see a simple markdown editor on our review page.\u003c/p\u003e\r\n\u003ch2\u003eConvert Markdown To HTML\u003c/h2\u003e\r\n\u003cp\u003eOur reviews are saved as markdown and we need to convert it to a readable HTML code that we can use in our template. We first create a route to handle viewing a single review.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003emain/views.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e........\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003emarkdown2\u003c/span\u003e  \r\n\u003cspan class=\"o\"\u003e.....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/review/\u0026lt;int:id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esingle_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eabort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eformat_review\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emarkdown2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emarkdown\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_review\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eextras\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"code-friendly\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"fenced-code-blocks\"\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'review.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eformat_review\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eformat_review\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst we import the\u003cspan\u003e \u003c/span\u003e\u003cem\u003emarkdown2\u003c/em\u003e\u003cspan\u003e \u003c/span\u003emodule which will be responsible for the conversion from markdown to HTML.\u003c/p\u003e\r\n\u003cp\u003eWe then create the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esingle_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function that will be responsible for handling requests for a single review. It takes in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty of the review. We query the database to get a single review with the the same id as the one passed in and we check if the review is available. We then call markdown2's\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emarkdown\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in two arguments.The first is the markdown that is being converted, here, we pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereview.movie_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich is the movie review that is in markdown. The second argument is a lists of styling to style the HTML.\u003c/p\u003e\r\n\u003cp\u003eWe then render the template and pass in the formatted HTML\u003cspan\u003e \u003c/span\u003e\u003cem\u003ereview.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e{% extends 'base.html'%}\r\n\r\n{% block content%}\r\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"container-fluid\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"row\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-sm-4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eimg\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{review.image_path}}\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"img-responsive\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-sm-8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      {{format_review|safe}}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n{%endblock%}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esafe\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efilter to prevent jinja template from formatting our html. Then we create a link to our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esingle_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function inside our macros file.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- Displaying reviews macro --\u0026gt;\u003c/span\u003e\r\n{% macro displayReviews(review_list) %}\r\n\r\n    {% for review in review_list %}\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"row\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-xs-2 col-sm-2 col-md-4 col-lg-4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh4\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eAuthor\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh4\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{review.user.username}}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-xs-10 col-sm-10 col-md-8 col-lg-8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('main.single_review',id=review.id)}}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{review.movie_title}}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    {% endfor %}\r\n{% endmacro %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create an anchor tag that links to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esingle_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function and passes in the review id.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003emain/forms.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv\u003e\r\n\u003cpre\u003e\u003cspan\u003e#.....\u003cbr\u003eclass\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eReviewForm\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eFlaskForm\u003c/span\u003e\u003cspan\u003e):\u003c/span\u003e\u003cbr\u003e\u003cbr\u003e\u003cspan\u003e title \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e StringField(\u003c/span\u003e\u003cspan\u003e'Review title'\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003evalidators\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e[Required()])\u003c/span\u003e\u003cbr\u003e\u003cbr\u003e\u003cspan\u003e review \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e TextAreaField(\u003c/span\u003e\u003cspan\u003e'Movie review'\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cbr\u003e\u003cbr\u003e\u003cspan\u003e submit \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e SubmitField(\u003c/span\u003e\u003cspan\u003e'Submit'\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003eLastly, we modify our forms.py to remove the validator field in the \u003ccode\u003ereview\u003c/code\u003efield.\u003c/p\u003e\r\n\u003cp\u003eWe can launch our application to see everything is properly set.\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"weekend-strings-slicing-functions-and-exceptions","title":"Weekend: Strings; Slicing; Functions and Exceptions","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eStrings\u003c/h2\u003e\r\n\u003ch3\u003eString Formatting\u003c/h3\u003e\r\n\u003cp\u003eThis is a way of embedding variables into strings. It is pretty easy to do.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"My name is {name} and I am {age} years old\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ewe run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\nMy name is James and I am \u003cspan class=\"m\"\u003e19\u003c/span\u003e years old\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ef\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebefore the string stands for\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ef-strings\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eor formatted strings and allow us to put replacement fields\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e{}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith variable names inside our strings\u003c/p\u003e\r\n\u003ch3\u003eRaw strings\u003c/h3\u003e\r\n\u003cp\u003eA raw string is a special type of string that allows us to ignore all escape characters\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand print them out\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Beyonce\u003c/span\u003e\u003cspan class=\"se\"\u003e\\'\u003c/span\u003e\u003cspan class=\"s1\"\u003es lemonade stand'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ewe run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python example.py\r\nBeyonce\u003cspan class=\"err\"\u003e'\u003c/span\u003es lemonade stand\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we see a proper use of the escape\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\\u003c/code\u003e\u003cspan\u003e \u003c/span\u003echaracter, by allowing us to add an apostrophe. But let us create a raw string and see what happens\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Beyonce\u003c/span\u003e\u003cspan class=\"se\"\u003e\\'\u003c/span\u003e\u003cspan class=\"s1\"\u003es lemonade stand'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ewe run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python example.py\r\nBeyonce\u003cspan class=\"se\"\u003e\\'\u003c/span\u003es lemonade stand\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe notice the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003er\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebefore the string. This means\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eraw\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estring. And in the output unlike the first example it prints out even the escape character.\u003c/p\u003e\r\n\u003ch3\u003eIs x string methods\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eisalpha() - returns True if the string consists of letters only and is not blank\u003c/li\u003e\r\n\u003cli\u003eisalnum() - returns True if the string consists of numbers and letters and is not blank\u003c/li\u003e\r\n\u003cli\u003eisdecimal() - returns True if the string contains only numeric characters\u003c/li\u003e\r\n\u003cli\u003eisspace() - returns True if the string contains only space,tabs or new lines\u003c/li\u003e\r\n\u003cli\u003eistitle() - returns True if the string contains words that start with uppercase letters\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ealpha\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"I like old music\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"K34jndnks\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003enumber_string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"12345\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003etabbs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"       \"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003etitles\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"I Love Cups\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003efalse_titles\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"I love Cups\"\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003ealpha\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisalpha\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisalnum\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003enumber_string\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisdecimal\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003etabbs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisspace\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003etitles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eistitle\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003efalse_titles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eistitle\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\nTrue\r\nTrue\r\nTrue\r\nTrue\r\nTrue\r\nFalse\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe last print statement was false because not all the words in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efalse_titles\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewere in uppercase.\u003c/p\u003e\r\n\u003cp\u003eThese\u003cspan\u003e \u003c/span\u003e\u003ccode\u003exstring\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethods are really useful when you want to do something like password validation.\u003c/p\u003e\r\n\u003ch3\u003eString Exercises\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cstrong\u003eMad Libs\u003c/strong\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eCreate a mad libs kind of program that allows users to input word descriptions such as a \"noun\", a \"verb\", an \"adjective\" etc and create then display a funny story from the users input\u003c/p\u003e\r\n\u003ch2\u003eType casting\u003c/h2\u003e\r\n\u003cp\u003eType casting is the act of converting one type of data to another, so as to manipulate it in some way. Let's see an example of this.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# print out user's name and age\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"My name is \" \u003c/span\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"n\"\u003ename \u003c/span\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"s2\"\u003e\" I am \" \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eage \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"s2\"\u003e\" years old\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet us run this code and see what happens.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\r\nTraceback \u003cspan class=\"o\"\u003e(\u003c/span\u003emost recent call last\u003cspan class=\"o\"\u003e)\u003c/span\u003e:\r\n  File \u003cspan class=\"s2\"\u003e\"\u0026lt;stdin\u0026gt;\"\u003c/span\u003e, line \u003cspan class=\"m\"\u003e1\u003c/span\u003e, in \u0026lt;module\u0026gt;\r\nTypeError: must be str, not int\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we see we get a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTypeError\u003c/code\u003e, because python cannot concatenate a string with an integer. To use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable we need to convert it to a string.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# print out u users name and age\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"My name is \" \u003c/span\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"n\"\u003ename \u003c/span\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"s2\"\u003e\" I am \" \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e) \u003c/span\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"s2\"\u003e\" years old\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet us run this code and see what happens.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\r\nMy name is James I am \u003cspan class=\"m\"\u003e19\u003c/span\u003e years old\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn this example we enclose the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable in a function called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estr()\u003c/code\u003e. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estr()\u003c/code\u003efunction converts the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efrom an integer to a string.\u003c/p\u003e\r\n\u003cp\u003eThere are other type conversion methods:\u003c/p\u003e\r\n\u003cp style=\"padding-left: 120px;\"\u003e1.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eint()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econverts what is passed to an integer.\u003c/p\u003e\r\n\u003cp style=\"padding-left: 120px;\"\u003e2.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efloat()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econverts what is passed to a float.\u003c/p\u003e\r\n\u003cp\u003eLet us see more examples of this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"James\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eweight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'79'\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Kilograms\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eage_weight_ratio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eweight\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage_weight_ratio\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRun this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003eexample\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e4.157894736842105\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we converted string\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eweight\u003c/code\u003e, to an integer and divided it by\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch2\u003eSlicing\u003c/h2\u003e\r\n\u003cp\u003eSlicing is the act of getting subsets or parts of strings, lists or tuples.\u003c/p\u003e\r\n\u003cp\u003eLet's get \"slicing\".\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egreetings\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Hello, Moringa!'\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egreetings\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this we get:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\nHello\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eA slice statement is enclosed with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e[]\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esquare brackets and has two parts first is the position where to start slicing and second is the position to stop but not including that position.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e[start:stop]\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eIn the example above, we sliced the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003egreetings\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariables, took the characters in the first 5 indexes and stored them in the variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epart_one\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eYou can also use negative indexes when slicing.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egreetings\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Hello, Moringa!'\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egreetings\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this we get:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\nMoringa\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn this code we start slicing counting backwards and get\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMoringa\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas our output\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egreetings\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Hello, Moringa!'\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egreetings\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epart_one\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this we get:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\nHello, Moringa!\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can also choose not to specify the start or end point of our slices. In this example, Python assumes that we want to slice from index\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e0\u003c/code\u003e, to the last item and automatically fills in that value.\u003c/p\u003e\r\n\u003cp\u003eWe can also slice lists\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003efour_digits\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efour_digits\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this we get:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e,2,3,4\u003cspan class=\"o\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we did not specify the beginning of our slice and python automatically filled that in to be at index\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e0\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch2\u003eFunctions\u003c/h2\u003e\r\n\u003cp\u003eWe have already used functions to perform several tasks like\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprint\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebut let's learn how to create our own functions in python.\u003c/p\u003e\r\n\u003cp\u003eFunctions are blocks of code that begin with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edef\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ekeyword\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I have been called\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"s2\"\u003e\"I have been called\"\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis example we have created a function with no arguments and in the function we have a print statement that outputs a string\u003c/p\u003e\r\n\u003cp\u003eWe then went on to call the function and we got our desired output.\u003c/p\u003e\r\n\u003ch4\u003ePassing Arguments\u003c/h4\u003e\r\n\u003cp\u003eIn python you can also pass arguments to functions\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ePython can also take on\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ekeyword arguments\u003c/strong\u003e. These are arguments that are already defined\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere, we created a function with two\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ekeyword arguments\u003c/code\u003e. When we call the function we changed the values of those arguments to our own values\u003c/p\u003e\r\n\u003cp\u003eWe could also call the function without passing any parameters. Then the default keyword arguments values will be passed in\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003eCreating an Empty function\u003c/h4\u003e\r\n\u003cp\u003eSometimes we might want to define a function and not put code in it. This could be for whatever reason like outlining your code.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Empty function \u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIf we run our code like this, it will give us an error. Python has a keyword called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003epass\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat can help us here.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epass\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eallows us to create empty blocks of code because when it runs it returns a null or nothing.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Empty function \u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow when we run our code it will work perfectly.\u003c/p\u003e\r\n\u003ch4\u003eFunctions that return something\u003c/h4\u003e\r\n\u003cp\u003eFunctions can also return values to us\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efun_a\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\r\n\r\n\u003cspan class=\"nb\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efun_a\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere, we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereturn\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement, to get the value from the operation performed in the function.\u003c/p\u003e\r\n\u003ch2\u003eExceptions and Error Handling\u003c/h2\u003e\r\n\u003cp\u003eIn technical terms\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eException Handling\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eis the mechanism for stopping normal program flow and continuing it at some surrounding code block.\u003c/p\u003e\r\n\u003cp\u003eSimply put it is the art of spotting fatal errors that may come up in our applications and handling those errors.\u003c/p\u003e\r\n\u003cp\u003eRight now an error breaks our application.\u003c/p\u003e\r\n\u003cp\u003ecreate a new Folder called Error-Handling and inside create a file\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ehandle.py\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_age\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"How old are you \"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eage\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eget_age\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet's take this simple application for example where we get the age of a user\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 handle.py\r\nHow old are you\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe program works fine if we enter a number. But what if a user enters a name\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 handle.py\r\nHow old are you\r\nnineteen\r\n\r\nTraceback \u003cspan class=\"o\"\u003e(\u003c/span\u003emost recent call last\u003cspan class=\"o\"\u003e)\u003c/span\u003e:\r\n  File \u003cspan class=\"s2\"\u003e\"testapp.py\"\u003c/span\u003e, line \u003cspan class=\"m\"\u003e6\u003c/span\u003e, in \u0026lt;module\u0026gt;\r\n    \u003cspan class=\"nv\"\u003einput_age\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e get_age\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n  File \u003cspan class=\"s2\"\u003e\"testapp.py\"\u003c/span\u003e, line \u003cspan class=\"m\"\u003e3\u003c/span\u003e, in get_age\r\n    \u003cspan class=\"nv\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e int\u003cspan class=\"o\"\u003e(\u003c/span\u003einput\u003cspan class=\"o\"\u003e())\u003c/span\u003e\r\nValueError: invalid literal \u003cspan class=\"k\"\u003efor\u003c/span\u003e int\u003cspan class=\"o\"\u003e()\u003c/span\u003e with base \u003cspan class=\"m\"\u003e10\u003c/span\u003e: \u003cspan class=\"s1\"\u003e'age'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe get a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eValueError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ebecause we put in a non integer string and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eint()\u003c/code\u003econstructor cannot convert the string to integer.\u003c/p\u003e\r\n\u003cp\u003eThis error is difficult to understand. Let us create a more understandable error message\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_age\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"How old are you \"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eage\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eValueError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"That was not a valid input\"\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etry\\except\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock to handle errors. Inside the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etry\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock we put in code that may throw an Error and in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eexcept\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblock we catch the thrown error and provide code to handle that error.\u003c/p\u003e\r\n\u003ch4\u003eProgrammer Errors\u003c/h4\u003e\r\n\u003cp\u003eThere are some error that are caused by programmers themselves. These errors should not be handled but fixed.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eIndentationError\u003c/code\u003e\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- when you fail to separate code blocks properly.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eNameError\u003c/code\u003e\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- when you call an undefined variable function or method.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eTypeError\u003c/code\u003e\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- when you try and perform operations on unrelated types .\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"weekend-python-basics","title":"Weekend: Python Basics","type":"WikiPage","content":"\u003ch2\u003ePython Basics\u003c/h2\u003e\r\n\u003ch3\u003ePython shell\u003c/h3\u003e\r\n\u003cp\u003ePython comes with a built-in\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eR-E-P-L\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003etool, (which stands for\u003cspan\u003e \u003c/span\u003e\u003cem\u003eRead Evaluate Print Loop\u003c/em\u003e) called the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ePython shell\u003c/strong\u003e. This is really useful when we want to test out snippets of our code before we put it in the main program.\u003c/p\u003e\r\n\u003cp\u003eTo access the Python shell we open our terminal and type in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epython3.6\u003c/code\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6\r\n\r\nPython \u003cspan class=\"m\"\u003e3\u003c/span\u003e.6.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003edefault, Nov \u003cspan class=\"m\"\u003e17\u003c/span\u003e \u003cspan class=\"m\"\u003e2016\u003c/span\u003e, \u003cspan class=\"m\"\u003e17\u003c/span\u003e:05:23\u003cspan class=\"o\"\u003e)\u003c/span\u003e \r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eGCC \u003cspan class=\"m\"\u003e5\u003c/span\u003e.4.0 \u003cspan class=\"m\"\u003e20160609\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e on linux\r\nType \u003cspan class=\"s2\"\u003e\"help\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"copyright\"\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\"credits\"\u003c/span\u003e or \u003cspan class=\"s2\"\u003e\"license\"\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e more information.\r\n\u0026gt;\u0026gt;\u0026gt; \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe know we are in the shell when we see the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003esymbols. We type in \u003cspan\u003e\u003c/span\u003e\u003ccode\u003epython3.6\u003c/code\u003e so that we can tell our machine that we want to use the Python 3.6 interpreter.\u003c/p\u003e\r\n\u003cp\u003eLet us create a simple command that prints out \"\u003cem\u003eHello, Moringa!\u003c/em\u003e\"\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Hello, Moringa!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'Hello, Moringa!'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e\u003ccode\u003eprint()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis a Python function that simply outputs data to a screen. Functions are just bits of code that perform a certain action. We will revisit functions in Python later on.\u003c/p\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'Hello, Moringa!'\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein Python is called a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003estring\u003c/strong\u003e. A string is just a way for Python to represent text.\u003c/p\u003e\r\n\u003ch3\u003eStrings\u003c/h3\u003e\r\n\u003cp\u003eAs we mentioned earlier strings are Python's way to represent textual data.\u003c/p\u003e\r\n\u003cp\u003eThere are several ways to create strings:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'This is a string'\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"This is also a string\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ealso\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn Python, we can create strings with either single quotes (\u003ccode\u003e'\u003c/code\u003e) or double quotes (\u003ccode\u003e\"\u003c/code\u003e) and Python treats them as the same thing.\u003c/p\u003e\r\n\u003cp\u003eWe can also create strings that run in multiple lines:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s2\"\u003e\"\"\"This is a string\u003c/span\u003e\r\n\u003cspan class=\"s2\"\u003e    that spans several \u003c/span\u003e\r\n\u003cspan class=\"s2\"\u003e    lines \u003c/span\u003e\r\n\u003cspan class=\"s2\"\u003e\"\"\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ethat\u003c/span\u003e \u003cspan class=\"n\"\u003espans\u003c/span\u003e \u003cspan class=\"n\"\u003eseveral\u003c/span\u003e \r\n    \u003cspan class=\"n\"\u003elines\u003c/span\u003e \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the triple quotes sign (\u003ccode\u003e\"\"\"\u003c/code\u003e) to create multi-line strings.\u003c/p\u003e\r\n\u003cp\u003eWe can also join multiple strings using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e+\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eoperator\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'This is a string '\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s1\"\u003e'this is also a string'\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003ethis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ealso\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThere are also some string\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emethods\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat allow us to perform actions on the string.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'This is a string'\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eupper\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eTHIS\u003c/span\u003e \u003cspan class=\"n\"\u003eIS\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e \u003cspan class=\"n\"\u003eSTRING\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'this is a string'\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecapitalize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e  \u003cspan class=\"s1\"\u003e'this is a string     '\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estrip\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eupper()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod is used to transform strings to uppercase. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecapitalize()\u003c/code\u003emethod transforms the first letter of the string to a capital letter. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estrip()\u003c/code\u003emethod removes any trailing spaces in a string.\u003c/p\u003e\r\n\u003ch3\u003eNumbers\u003c/h3\u003e\r\n\u003cp\u003eWe can also do some mathematical computations in Python. With dynamic libraries such as\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003enumpy\u003c/strong\u003e, Python is really good at performing mathematical operations.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"c1\"\u003e# addition\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e31\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"c1\"\u003e# subtraction\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e21\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"c1\"\u003e# multiplication\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"c1\"\u003e# division\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e4.0\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"c1\"\u003e# modulus\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Exponential\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e16\u003c/span\u003e \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ePython supports all the basic mathematical operations. Here, we see a new character\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e#\u003c/code\u003e. This\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ehash\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003epound\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003esign is Python's way to create comments. Anything after the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e#\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis ignored by the Python interpreter.\u003c/p\u003e\r\n\u003cp\u003eNotice that when we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e/\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eoperator, Python doesn't return a whole number, but a number with a decimal point. It is referred to as a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003efloat division\u003c/strong\u003e. Decimal point numbers in Python are called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003efloats\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e6.0\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e45\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e5.0\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e \u003cspan class=\"o\"\u003e//\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we see some more examples using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e/\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto get floats. We also see another division operator in Python:\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e//\u003c/code\u003e. This divides the numbers, then rounds down the result and returns a whole number, and is called the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003einteger division\u003c/strong\u003e.\u003c/p\u003e\r\n\u003ch3\u003ePython Basics Exercises\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cstrong\u003eBMI calculator\u003c/strong\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eCreate a program in the Python shell that allows you to calculate the body mass index of the person. This is calculated by dividing a person's weight by their height in meters squared.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cstrong\u003eCar Loans\u003c/strong\u003e\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eCreate a program in the Python shell that will calculate how long it would take a person to pay off a car loan of $150,000 if the person only spends 25% of his salary of $15,000 to pay the loan assuming no interest is charged.\u003c/p\u003e\r\n\u003ch2\u003eData Types\u003c/h2\u003e\r\n\u003cp\u003ePython has two main categories of data types,\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003escalar data types\u003c/strong\u003e\u003cspan\u003e, \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ecollections\u003c/strong\u003e.\u003c/p\u003e\r\n\u003ch3\u003e1. Scalar Data Types\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003eScalar data types\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eare data types that can only hold one single value at a time.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/Bcn1WWe.jpg\" alt=\"Scalar Data types Image\"\u003e\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003ccode\u003eint\u003c/code\u003e: whole numbered integers\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003efloat\u003c/code\u003e: integers with decimal points.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003eNone\u003c/code\u003e: represents a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003enull\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eor non-existent value.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003ebool\u003c/code\u003e: represent boolean statements and have only 2 possible values:\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eor\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e\n\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003e2. Collections\u003c/h3\u003e\r\n\u003cp\u003eLike the name suggests,\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ecollections\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003estore multiple values.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/j2Dk4Sp.jpg\" alt=\"Collections Data\"\u003e\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003ccode\u003estr\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- This data type is used to represent string values\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003ebyte\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- This data type is used to represent byte strings.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e\u003cstrong\u003eByte strings\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eare similar to strings but have been changed so that they can be stored on the hard drive we will not cover much on them here.\u003cspan\u003e \u003c/span\u003e\u003ca href=\"http://www.diveintopython3.net/strings.html\"\u003eHere is an Interesting article that covers more on Strings and Byte Strings\u003c/a\u003e\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003ccode\u003elist\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- This is a collection used to group related data in an ordered way.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003edict\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- These allow us to create dictionaries which is data that is stored in key-value pairs\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eWe will consider these much more in depth as we go on with the course.\u003c/p\u003e","frontPage":false},{"exportId":"monday-pomodoro","title":"Monday: Pomodoro","type":"WikiPage","content":"\u003cp\u003eYour office is full of workaholics. No one takes breaks, No one goes for lunch, and the only interesting thing that you can ever talk about with your workmates, are the new cool updates on\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eSlack\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eYour team lead is afraid at this pace people will start burning out soon. He contracts you to build an application that will remind your coworkers to take a break.\u003c/p\u003e\r\n\u003ch4\u003eSpecifications\u003c/h4\u003e\r\n\u003col\u003e\r\n\u003cli\u003eA user should be able to log into the application.\u003c/li\u003e\r\n\u003cli\u003eA user should be able to set the amount of time he/she wants to work. It should not be more than an hour.\u003c/li\u003e\r\n\u003cli\u003eA user should be able to set the amount of time he/she wants to be on break. It should not be more than 10 min and not less than 5 min.\u003c/li\u003e\r\n\u003cli\u003eA user should specify what he/she wants to do with their break time before they start working.\u003c/li\u003e\r\n\u003cli\u003eA user should see how much time they are have left for working or taking a break. (A countdown clock).\u003c/li\u003e\r\n\u003cli\u003eA user should see how many work sessions he/she has completed.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eProject specs\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eShould be presented in a high quality manner.\u003c/li\u003e\r\n\u003cli\u003eShould be well documented with comments and have a detailed\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eREADME\u003c/strong\u003e.\u003c/li\u003e\r\n\u003cli\u003eIt should have a detailed specs file with what your project can actually do.\u003c/li\u003e\r\n\u003cli\u003eIt should be published to heroku.\u003c/li\u003e\r\n\u003cli\u003eYou and your pair should be listed as contributors to the project.\u003c/li\u003e\r\n\u003cli\u003eThe project should have a requirements.txt file with all the projects dependencies.\u003c/li\u003e\r\n\u003cli\u003eThe project should be deployed and hosted.\u003c/li\u003e\r\n\u003c/ol\u003e","frontPage":false},{"exportId":"tuesday-image-upload-and-sending-email","title":"Tuesday: Image Upload and Sending Email","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eUploading Images\u003c/h2\u003e\r\n\u003cp\u003eWe want our users to be able to upload their profile pictures to their profile. Flask-uploads is a very good extension that allows us to upload files to our flask application\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-uploads\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first install the extension then we can set it up.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_uploads\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUploadSet\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003econfigure_uploads\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eIMAGES\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#.............\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ephotos\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUploadSet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'photos'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eIMAGES\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#....................\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUploadSet\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that defines what type of file we are uploading. We pass in a name and the Type of file to upload which is an Image.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#........\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# configure UploadSet\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003econfigure_uploads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ephotos\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e#.......\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfigure_uploads\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUploadSet\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# ....\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eUPLOADED_PHOTOS_DEST\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'app/static/photos'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a new configuration\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUPLOADED_PHOTOS_DEST\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich specifies the destination to where we want to store our Images. We set the destination to be a photos folder inside our static folder.\u003c/p\u003e\r\n\u003cp\u003eIt is not advisable to store files inside the database. Instead we store the files inside our application and we store the path to the files in our database.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/profile/profile.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e........\r\n  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-md-4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n    {% if user.profile_pic_path %}\r\n\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eimg\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('static',filename=user.profile_pic_path)}}\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"img-thumbnail\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    {%else%}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eNo profile picture\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    {% endif %}\r\n\r\n        {% if user == current_user %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e  \u003cspan class=\"na\"\u003eaction\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('main.update_pic',uname=user.username)}}\"\u003c/span\u003e \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"post\"\u003c/span\u003e \u003cspan class=\"na\"\u003eenctype \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"multipart/form-data\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"file\"\u003c/span\u003e  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"photo\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"form-control\"\u003c/span\u003e \u003cspan class=\"na\"\u003erequired\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n      \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"submit\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003cbr\u003e\u003c/span\u003e    \u0026lt;/form\u0026gt;\r\n      {% endif %}\r\n  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n .........\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a file upload form. To upload a file we need to use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eenctype = \"multipart/form-data\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eattribute on form tag.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e......\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ephotos\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e......\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/user/\u0026lt;uname\u0026gt;/update/pic'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emethods\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'POST'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@login_required\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate_pic\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s1\"\u003e'photo'\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003efilename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ephotos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efiles\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'photo'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'photos/{filename}'\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprofile_pic_path\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epath\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'main.profile'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ephotos\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance from our application factory module. We then create a route that will process our form submission request. This route only accepts post requests.\u003c/p\u003e\r\n\u003cp\u003eWe then query the database to pick a user with the same username we passed in. We then use the flask\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erequest\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to check if any parameter with the name\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ephoto\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ehas been passed into the request.\u003c/p\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to save the file into our application. We then create a path variable to where the file is stored. We then update the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprofile_pic_path\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty in our user table and store the path to the file.\u003c/p\u003e\r\n\u003cp\u003eWe finally commit the changes to the database and redirect the user back to the profile page.\u003c/p\u003e\r\n\u003ch2\u003eSending an Email\u003c/h2\u003e\r\n\u003cp\u003eWe want to thank our users and welcome them when they register for our application. Flask uses the Flask-Mail extension to send emails to users.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-mail\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe extension connects to a Simple Mail Transfer Protocol server. It passes the messages we want to send to the SMTP server and it delivers the server.\u003c/p\u003e\r\n\u003ch3\u003eConnecting To Gmail\u003c/h3\u003e\r\n\u003cp\u003eWe need our application to send emails through a google account. We need to setup some configuration files to connect to the gmail smtp server.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e#  email configurations\r\n    MAIL_SERVER = 'smtp.googlemail.com'\r\n    MAIL_PORT = 587\r\n    MAIL_USE_TLS = True\r\n    MAIL_USERNAME = os.environ.get(\"MAIL_USERNAME\")\r\n    MAIL_PASSWORD = os.environ.get(\"MAIL_PASSWORD\")\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eWe setup the SMTP server and configure the port to use the gmail SMTP server port.\u003cspan\u003e Then we set \u003c/span\u003e\u003ccode\u003eMAIL_USE_TLS\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econfiguration to true which enables a transport layer security to secure the emails when sending the emails.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003eMAIL_USERNAME\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMAIL_PASSWORD\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eare our email address and password to authenticate to the gmail SMTP server. We set them as environment variables.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003estart.sh\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e#.....\r\nexport MAIL_USERNAME=\u0026lt;Your Email Address\u0026gt;\r\nexport MAIL_PASSWORD=\u0026lt;Your Email Password\u0026gt;\r\npython3.6 manage.py server\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eHere we add the export code for the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMAIL_USERNAME\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMAIL_PASSWORD\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto our start script. This will export the variables to the environment every time we run our start script.\u003c/p\u003e\r\n\u003cp\u003eWe then can initialize the extension.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#........\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_mail\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMail\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#........\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003email\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMail\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#........\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003email\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#........\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMail\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the flask_mail extension and Initialize it.\u003c/p\u003e\r\n\u003cp\u003eWe now can create a module that will handle the email logic. We create the _email.py_ module inside the app directory.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/email.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_mail\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003email\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMessage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from flask_mail extension. We also import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003email\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance from the application factory module.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/email.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003email_message\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esubject\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etemplate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eto\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esender_email\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eYour\u003c/span\u003e \u003cspan class=\"n\"\u003eEmail\u003c/span\u003e \u003cspan class=\"n\"\u003eaddress\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esubject\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esender\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esender_email\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erecipients\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eto\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebody\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\".txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehtml\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\".html\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003email\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first create\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003esender_email\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewhere we store our email address.\u003c/p\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003email_message\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in 4 parameters which are the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003esubject\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eof the email, the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etemplate\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewhich is where we create the message body, We pass in the template without an extension because we need to create the text version and a HTML version, the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003erecipient\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand any keyword arguments.\u003c/p\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMessage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esubject\u003c/code\u003e, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esender_email\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erecipient\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe then set up the email body and HTML. We use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esend\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003email\u003c/code\u003einstance and pass in the email instance.\u003c/p\u003e\r\n\u003ch3\u003eSending Welcome Email\u003c/h3\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..email\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003email_message\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003email_message\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction in our auth blueprint _views.py_ file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@auth.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/register'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"GET\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"POST\"\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eregister\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRegistrationForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003email_message\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Welcome to watchlist\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"email/welcome_user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth.login'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"New Account\"\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth/register.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eregistration_form\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then call the function inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eregister\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function. We pass in the the subject and template file where our message body will be stored. We then pass in the new user's email address which we get from the registration form. We then pass in a user as a keyword argument.\u003c/p\u003e\r\n\u003cp\u003eWe can then create the email body and html templates. Create 2 new files\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewelcome_user.html\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewelcome_user.txt\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einside an email subfolder in our template folder.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/email/welcome_user.txt\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003eHello {{user.username}}\r\nWelcome to Watchlist\r\nWe have just seen you have signed up for our application and want to welcome you to the family. Please enjoy the reviews of all your  favourite films.\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eNow each time a user registers with our application they receive a welcome email from our application. You can find the application at this point here https://github.com/mbuthiya/watchlist/tree/28-sending-email\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"thursday-answering-general-interview-questions","title":"Thursday: Answering General Interview Questions","type":"WikiPage","content":"\u003ch2\u003e\u003cspan style=\"font-weight: 400;\"\u003eGeneral Interview Questions\u003c/span\u003e\u003c/h2\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“Tell me about yourself”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThis seems like such a simple question, but it can really make you sweat especially in an interview. This is not an invitation to recite your entire life story or your CV. Instead, it’s your first and best chance to pitch the hiring manager on who you are and why you’re the right one for the job. Use your personal narrative to answer this question, tailoring to the job you’re applying for and person you’re talking to.\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSo, first start with the present, where you are right now.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThen, segue into the past. If you have had an employment history, talk a little bit about the experiences you’ve had and the skills you gained at previous positions.   Also, Just because you didn't get paid for something doesn't mean that it doesn't count as experience. Responsibilities volunteering and side jobs count! You can apply the skills you learned doing those tasks to any position. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAim to focus on skills that are relevant to the job you are interviewing for. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eFinally, finish with the future, why you are really excited for this particular opportunity.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eUse your personal narrative.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What do you know about our company?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThis question is asked\u003c/span\u003e\u003cspan style=\"font-weight: 400;\"\u003e to gauge your real interest in the job and the employer. Make a point of researching the potential employer, including:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat they do \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eProducts or services\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMajor partnerships\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSize of the company\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMajor competitors and how they compare with those competitors\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ePlans for growth or expansion\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eCompany culture\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWork environment\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eValues, mission, and vision\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYour answer should highlight why you are a good fit for the position in context of the information you have about the company. Your potential employer wants to see that you are aware of the nature and strengths of the business and how you can contribute.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou can also weave this information into your answers to other questions they ask to show that you’ve researched the organization and are genuinely interested in the role.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI see that your company has been in business for fifteen years now, with an excellent reputation for creating Mobile Apps and  payment systems for major companies in Africa. Your clients range from the common man to major companies and banks. I am very interested to learn about the Mobile Apps that you create to support payments systems for different clients and \u003c/span\u003e\u003cspan style=\"font-weight: 400;\"\u003eI am particularly attracted to the vision of your company. I appreciate that the business has focused on meeting customers needs in a friendly and innovative way. Your approach is admirable, and I believe my orientation to customer service plus my software engineering skills will allow me to build products for [company name] that are high-quality and user-focused.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What do you find interesting about this job?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen asked this question, the interviewer wants to know why you decided to apply specifically for this job, and why the position fits you and your career plans. Here are a few tips on how you can answer this question:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe specific: make sure that your answers are to the point and not ambiguous. Mention specific job qualities and career advantages that you find on this role that interest you.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe truthful: simply put, if you like a job you will excel at it. If you are working somewhere just for the money, there are chances that you will not like the job and will leave quickly.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe real: show your true excitement over the problems you will be solving, and how you and the organization will grow through your contributions.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI’m really excited about this role because of the opportunity to work in such a solid team environment. I always wanted to work with hard-working, professional, experienced people. I love contributing to the team effort, bringing out the best in myself and in my teammates for fulfilling our work goals and reaching top results.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI trust that I can perform well by applying sound principles of teamwork. I appreciate receiving timely and consistent feedback designed to improve not only my performance as well but the team’s performance as well. I consult with people, try my best and treat everyone positively and equally.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI also love the agriculture sector - in my last job, I worked in agriculture and decided to become a software engineer to solve problems faced by people like myself.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What do you consider to be your weaknesses?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen the interviewer asks you this question, they are trying to see how well you respond to a question that is intentionally meant to throw you off. When you prepare for this question, you will want to pick a weakness that is a strength in disguise, or one that presents a current strength as a recovered weakness. The answer to this question has two parts. First is the confession to the problem. The last part is the recovery: how did you minimize the weakness, and how are you working to improve on it.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI do not like confrontation, and in the past found myself at times compromising what I wanted or needed in order to keep the peace. This was a real problem, especially in team situations or when I was supposed to be leading a group because there are times when you need to tell people things they might not necessarily want to hear. Since then I’ve realized this is a weakness of mine and I’ve worked very hard to overcome it. Now instead of avoiding those situations, I take it as an opportunity to practice being more assertive without coming across as difficult. I take the time to listen to each side of the situation and make sure that if I have any comments or criticisms that they are constructive and that the solutions I offer are actual solutions and not just “peace patches” (which in this case means opting for peace for the sake of keeping the peace but the truth is that the situation has not been solved. You choose to maintain peace by sweeping everything under the rug).\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What is your greatest achievement?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eChoose an achievement that is related to the position and is fairly recent. Review the job description. What skills are listed as necessary for the job? This will guide you to the most relevant answer for this employment interview question. Reflect upon achievements that demonstrated the required skill. Describe your accomplishment and highlight the job-related skills you used. Point out how the results of your accomplishment.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExamples\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eRecently I was asked to implement a new system to reduce our debtors days. I analyzed the problems with the current system, got input from all the stakeholders, and developed a faster way of getting the accounts out and monitoring follow up. Our debtors days reduced significantly and we are currently on target for collections.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI was part of the rowing team that recently won the championships. It was a particularly satisfying win as we had trained very hard, requiring a lot of discipline and perseverance, to come up from the bottom of the league. We also really had to work together as a team and keep each other motivated.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“Where do you see yourself in 5 years?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe interviewer wants to understand more about your career goals and \u003c/span\u003e\u003ca href=\"http://biginterview.com/blog/2012/01/what-employers-want-job-interview.html\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ehow this position would fit\u003c/span\u003e\u003c/a\u003e\u003cspan style=\"font-weight: 400;\"\u003e into your grand plan. They care about your career goals because they want to hire someone who is motivated, proactive, and likely to stick around and work hard if hired. To answer this question:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eKeep your answer fairly general and truthful, but broad enough that it doesn’t raise doubts about whether you would be a good fit for this position at this organization. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eStress your interest in a long-term career at the company because the interviewer wants to know that you’re ready to settle in and grow with the firm.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDemonstrate your enthusiasm for the job as an exciting next step for you. Most importantly, make it clear that you are motivated to take on this opportunity right now.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eI am driven to be the best at what I do and I want to work somewhere where I’ll have opportunities to develop my skills, take on interesting projects, and work with people I can really learn from. M\u003c/span\u003e\u003cspan style=\"font-weight: 400;\"\u003eost importantly, I want to work for an organization where I can build a career.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“Given a tight deadline how would you handle the pressure?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003ePressure and stress are unavoidable aspects of the world we live in. The interviewer will be looking to identify that you recognise that pressure and stress are facts of life, that you understand the effect pressure and stress has on you and that you are sufficiently robust to be able to take them in your stride.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eT\u003c/span\u003e\u003cspan style=\"font-weight: 400;\"\u003ehe key to formulating your answer to this question is to:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSeize this as an opportunity to talk about a situation or an occasion where you were under pressure and you how rose to the challenge. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAvoid conveying the impression that the fact you were under pressure was in any way your own fault or due to your own personal failings. Place the ‘blame’ firmly on external factors outside of your control.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eFrom a personal perspective, I manage stress by prioritizing my responsibilities so that I have a clear idea of what needs to be done when it needs to be done. This has helped me effectively manage pressure when working on projects. For example, there was a time I not only had my own personal projects to work on but a group project as well that we were working on with a  few friends for a client and they were all due in a week's time and on the same day. When faced with such a situation I usually prioritize my tasks by working on the easier projects first then narrowing down to the most challenging projects that need more time. And in this case that is what I did and I was able to complete all projects and deliver quality work..\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e\"How would you handle a case of criticism?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eInterviewers might be interested to hear about some mistakes you have done in your experience as a developer, but what they are really asking is how you respond in stressful situations and whether you can take correction with a good attitude. They are wondering if you are able to work well under a variety of management styles or if criticism will make you feel angry or undervalued. \u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen you answer this question, you want to emphasize your ability to handle criticism. This is your opportunity to showcase how you are willing to humbly make improvements in projects or professionalism when required.\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eTalk about how you listened and made changes when a someone critiqued your work.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eExplain a situation where you improved your performance after receiving constructive criticism.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eEmphasize that you enjoy doing quality work and have learned to value the input of experienced leaders.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMention why you are flexible and professional when working with others with whom you may at times disagree.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eDuring my stay at Moringa School I received input from my Technical Mentor that helped me to see how my work could be improved. Once I was asked to revise a project that I had spent a lot of time on, but after listening carefully to the critique, I saw how I could make changes that would strengthen the finished product. Through fixing those critiques, my project was much higher quality and I became a much stronger engineer in the process. I am eager to learn from people with different views and experiences, and appreciate constructive feedback.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“How much are you looking to get paid?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eDepending on your answer, you can price yourself out of a job offer by saying a number that is too high, or you can get less than the company can afford to pay you by saying a number that is lower than their budget for the position (companies always create budgets of what they can pay for each position they hire for). \u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eThis is one of the trickiest questions to answer since it's so easy to give a self-defeating response. The key to answering this question well is to prepare in advance by researching salaries at the company, and in similar positions in the same industry. Here are some strategies to try when asked how much you expect to get paid.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eBy providing a number, two big things can go wrong:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou say a number that is too high for the company’s budget, and they remove you as a candidate for the position because you are too expensive.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou say a number that is lower than their budget for the position, and you end up not making as much money because you have told them that you are willing to work for less.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eInstead, say:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003e“I am very interested in this opportunity, and am excited to contribute to [company name]. Given my skills and experience, I believe my salary should be competitive to market rates. What is your budgeted range for this position, and what do you think is fair based off other people in the organization in this position?”\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eOther important tactics:\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDo your research. Not only should you know the average salary for your industry, but it's also wise to know geographical information as well. Salaries can vary widely based on the cost of living in the area, as well as the number of qualified applicants nearby.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ePlay it coy. Avoid saying a number first. You can say something like, \"I would love to know more about the position and its responsibilities before thinking about salary.\"\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eKeep your cost-of-living needs in mind. It can feel game-like to negotiate a strategy, but it's important to keep your financial needs front and center. Will the salary you request cover your expenses? If not, how will you make up the difference? Weigh your needs against the research you've done about salary and if the two numbers aren't as close to each other, it could be a sign that the role isn't a good match.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eGet information from the interviewer. Use this question as an opportunity to flip the tables on the interviewer, and find out what the salary range is for the position. You can ask \u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What is the range you have in mind for the position?”\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003e“What are some non-salaried benefits available?”\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eIf you have to answer, provide a range, rather than an actual number.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“Why should we hire you and not anybody else?/ What makes you the best candidate for the job?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen a hiring manager asks you this question she or he is really asking, “What makes you the best fit for this position?” \u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYour answer to this question should be a concise “sales pitch” that explains what you have to offer the employer. Remember that employers hire workers to solve a problem, whether it’s boosting sales or streamlining processes or building a brand. Your goal when making your pitch is to show that you’re the best person to solve that problem.The better you do that, the better your chances of landing the job.\u003c/span\u003e\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou want your answer to be brief no more than a minute or two long.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003e Begin by explaining what you believe the employer is looking for, and how you fulfill that need. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe interviewer wants to know how you stand out among the other applicants. Therefore, focus on one or two qualities you possess that are different from what other interviewees might offer, or are more difficult to find in candidates generally. \u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExample\u003c/span\u003e\u003c/h4\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou describe in the job listing that you are looking for a junior developer who is hardworking and has a quick learning ability. Having served as a tutor an intern at Craft Silicon, I have developed my ability to be extremely hardworking and handle pressure. My experience as an intern has taught me strategies for working in a professional environment for example team work, time management and flexibility. \u003c/span\u003e\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003e“Do you have any questions for us?”\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003e!!!ALWAYS HAVE QUESTIONS TO ASK TO THE INTERVIEWER!!!\u003c/strong\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYour answer to this question should \u003c/span\u003e\u003cstrong\u003ealways\u003c/strong\u003e\u003cspan style=\"font-weight: 400;\"\u003e be yes. It shows that you’re engaged and interested in the position, and you are seriously considering the role.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eYou will have to use your judgment about the number of questions you ask and when to ask them. Think of this as a \u003c/span\u003e\u003ca href=\"https://www.monster.com/career-advice/article/interview-as-a-conversation\"\u003e\u003cspan style=\"font-weight: 400;\"\u003econversation\u003c/span\u003e\u003c/a\u003e\u003cspan style=\"font-weight: 400;\"\u003e. There will be an appropriate time to ask certain types of questions, like those about benefits and vacation. Don’t ask about those questions upfront, they make it sound like you’re just looking for an easy paycheck. Instead, concentrate on questions about the job's responsibilities and how you fit the position until you get the actual offer.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen you begin to think of the interview as a two way process, you will see it is important for you to find out as much as possible about the company. Questions will give you the opportunity to find out if this is a good place for you to work before you say yes.\u003c/span\u003e\u003c/p\u003e\r\n\u003ch4\u003e\u003cspan style=\"font-weight: 400;\"\u003eExamples\u003c/span\u003e\u003c/h4\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhat are the first three projects that I would be working on?\u003c/span\u003e\u003c/li\u003e\r\n\u003cli\u003eWhat does a typical day look like?\u003c/li\u003e\r\n\u003cli\u003eWhat are the biggest challenges that someone in this position would face?\u003c/li\u003e\r\n\u003cli\u003eWhat are the skills and experiences you’re looking for in an ideal candidate?\u003c/li\u003e\r\n\u003cli\u003eWhat attributes does someone need to have in order to be really successful in this position?\u003c/li\u003e\r\n\u003c/ol\u003e","frontPage":false},{"exportId":"thursday-interview-questions","title":"Thursday: Interview Questions","type":"WikiPage","content":"\u003col\u003e\r\n\u003cli\u003eWhat is Python ?\u003c/li\u003e\r\n\u003cli\u003eIn what areas can we use the Python Language?\u003c/li\u003e\r\n\u003cli\u003eWhat is the disadvantage of using Python compared to other compiled languages like Java?\u003c/li\u003e\r\n\u003cli\u003eDefine a Python module, script and package.\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference in using Python 2+ and Python 3+?\u003c/li\u003e\r\n\u003cli\u003eName the top 3 programmer caused Python errors.\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between a list and a tuple ?\u003c/li\u003e\r\n\u003cli\u003eWhat is a set?\u003c/li\u003e\r\n\u003cli\u003eName the various data types in Python.\u003c/li\u003e\r\n\u003cli\u003eWhat is a decorator?\u003c/li\u003e\r\n\u003cli\u003eDefine pypi?\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between Python built in modules and external modules?\u003c/li\u003e\r\n\u003cli\u003eWhat is flask?\u003c/li\u003e\r\n\u003cli\u003eHow does flask differ from other frameworks?\u003c/li\u003e\r\n\u003cli\u003eWhat comes built in in flask?\u003c/li\u003e\r\n\u003cli\u003eWhat is a virtual environment and why is it useful?\u003c/li\u003e\r\n\u003cli\u003eWhat is a template?\u003c/li\u003e\r\n\u003cli\u003eWhat is a view function?\u003c/li\u003e\r\n\u003cli\u003eDefine a http request?\u003c/li\u003e\r\n\u003cli\u003eWhat is a flask extension?\u003c/li\u003e\r\n\u003cli\u003eWhat is a Model ?\u003c/li\u003e\r\n\u003cli\u003eWhat is an ORM and how does it differ from conventional ways of interacting with a database?\u003c/li\u003e\r\n\u003cli\u003eWhat is needed to connect to SQLALCHEMY?\u003c/li\u003e\r\n\u003cli\u003eWhat is an application factory?\u003c/li\u003e\r\n\u003cli\u003eWhat is a blueprint?\u003c/li\u003e\r\n\u003cli\u003eHow can you connect a blueprint to an application factory?\u003c/li\u003e\r\n\u003cli\u003eWhat is a migration file?\u003c/li\u003e\r\n\u003cli\u003eWhy are migration files useful?\u003c/li\u003e\r\n\u003cli\u003eWhy do we use flask-script in our application?\u003c/li\u003e\r\n\u003cli\u003eExplain the http request response cycle when a person visits a url.\u003c/li\u003e\r\n\u003cli\u003eState 4 types of responses that can be returned by a view function.\u003c/li\u003e\r\n\u003cli\u003eWhat is the purpose of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction?\u003c/li\u003e\r\n\u003cli\u003eWhat is the purpose of a requirements.txt file?\u003c/li\u003e\r\n\u003cli\u003eWhat are app configurations?\u003c/li\u003e\r\n\u003cli\u003eHow are different kind of variables defined in Jinja2 templates ?\u003c/li\u003e\r\n\u003cli\u003eWhat are macros?\u003c/li\u003e\r\n\u003cli\u003eDefine template Inheritance.\u003c/li\u003e\r\n\u003cli\u003eWhat are\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eblocks\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein Jinja templates ?\u003c/li\u003e\r\n\u003cli\u003eHow are templates reused in Jinja2 ?\u003c/li\u003e\r\n\u003cli\u003eWhat are variable filters ?\u003c/li\u003e\r\n\u003cli\u003eHow are static files stored in a flask application ?\u003c/li\u003e\r\n\u003cli\u003eHow is authentication managed in a flask application ?\u003c/li\u003e\r\n\u003cli\u003eWhat are database sessions ?\u003c/li\u003e\r\n\u003cli\u003eDescribe one-many database relationships.\u003c/li\u003e\r\n\u003cli\u003eHow do you create a one-many database relationship with SQLAlchemy?\u003c/li\u003e\r\n\u003cli\u003eWhat is a Foreign Key?\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between a SQL database and a Nosql database?\u003c/li\u003e\r\n\u003cli\u003eWhat is the difference between a GET and POST request?\u003c/li\u003e\r\n\u003cli\u003eWhat is CSRF and why do we need to protect our applications from it?\u003c/li\u003e\r\n\u003cli\u003eWhat is a status code and what do the various status codes mean?\u003c/li\u003e\r\n\u003c/ol\u003e","frontPage":false},{"exportId":"thursday-application-structures","title":"Thursday: Application Structures","type":"WikiPage","content":"\u003ch2\u003eApplication structure\u003c/h2\u003e\r\n\u003cp\u003eWhen we began our project we created a basic application structure. This was good for when our application was still small but as it grows in size and complexity we will need to efficiently organize our project.\u003c/p\u003e\r\n\u003cp\u003eWe will create a new application structure that we will use from now on in the end it will look something like this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003eWatchlist\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n            \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n            \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003eerrors\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n            \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n            \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003eviews\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003estatic\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003etemplates\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003etests\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003etest_movie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n        \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003etest_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003evirtual\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-.\u003c/span\u003e\u003cspan class=\"n\"\u003egitignore\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003emanage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"n\"\u003estart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esh\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ePlease pay careful attention to the instructions to minimize chances of errors while following along.\u003c/p\u003e\r\n\u003ch3\u003eApplication configurations\u003c/h3\u003e\r\n\u003cp\u003eWe will move\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efrom the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edirectory to the root directory.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eos\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eMOVIE_API_BASE_URL\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'https://api.themoviedb.org/3/movie/{}?api_key={}'\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eMOVIE_API_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSECRET_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'SECRET_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProdConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\r\n\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eDEBUG\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003econfig_options\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'development'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'production'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eProdConfig\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. We first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eos\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule that will allow our application to interact with the operating system dependent functionality. We use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eos.environ.get()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to get\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMOVIE_API_KEY\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSECRET_KEY\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich we will set as environment variables.\u003c/p\u003e\r\n\u003cp\u003eWe then create a dictionary\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfig_options\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto help us access different configuration option classes.\u003c/p\u003e\r\n\u003cp\u003e### Application factory\u003c/p\u003e\r\n\u003cp\u003eOur application package is where most of the apps functionality is stored including static files and templates. How the application instance is created makes it difficult to apply configuration changes dynamically. This is useful when it comes to testing the application under different configurations. To solve this we create a function that can be launched from the script\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_bootstrap\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBootstrap\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003econfig\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003econfig_options\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBootstrap\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Creating the app configurations\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_options\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Initializing flask extensions\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Will add the views and forms\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eto create our application factory function. We import import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfig_options\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efrom the the\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile that we updated. We then create the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebootstrap\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance.\u003c/p\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes the configuration setting key as an argument. This is because we might want to create the application instance under different configurations. We then create the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFlask\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eapp instance. We then import the configuration settings directly to the application using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efrom_object()\u003c/code\u003emethod. We remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp.config.from_pyfile(\"config.py\")\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement because all our secret configuration settings will be stored as environment variables.\u003c/p\u003e\r\n\u003cp\u003eWe call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einit_app()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eon an extension to complete on their initialization.Finally we return\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e.\u003c/p\u003e\r\n\u003ch3\u003eCreating Blueprints\u003c/h3\u003e\r\n\u003cp\u003eWe now run into another problem. In our previous application structure the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003einstance was available in the global scope now it is created at runtime.Functionality like\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@app.route()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecannot work until the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis executed. This is where\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eBlueprints\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ecome in handy.\u003c/p\u003e\r\n\u003cp\u003eA\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eBlueprint\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eis similar to an application in that it can also define routes.The main difference is that blueprints are dormant until they are registered by an application.\u003c/p\u003e\r\n\u003cp\u003eInside the app instance create a new folder\u003cspan\u003e \u003c/span\u003e\u003cem\u003emain\u003c/em\u003e\u003cspan\u003e \u003c/span\u003ethis is where we will define our blueprint. We move our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eerrors.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003e\u003cem\u003eforms.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cem\u003eviews.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efiles from our app folder into our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/main\u003c/em\u003e\u003cspan\u003e \u003c/span\u003esubfolder. We will also create an\u003cspan\u003e \u003c/span\u003e\u003cem\u003e__init__.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/main\u003c/em\u003e\u003cspan\u003e \u003c/span\u003esubfolder to define the Blueprint.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBlueprint\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emain\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'main'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eerrors\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eBlueprint\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from flask. We then initialize the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eBlueprint\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass by creating a variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emain\u003c/code\u003e. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eBlueprint\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass takes in 2 arguments. The name of the blueprint and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable to find the location of the blueprint.\u003c/p\u003e\r\n\u003cp\u003eTo avoid circular dependencies we import the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eviews\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003cem\u003eerrors\u003c/em\u003e\u003cspan\u003e \u003c/span\u003emodules.\u003c/p\u003e\r\n\u003ch3\u003eRegistering a Blueprint\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Creating the app configurations\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_options\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Initializing flask extensions\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebootstrap\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# Registering the blueprint\u003c/span\u003e\r\n    \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.main\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003emain_blueprint\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregister_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emain_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe register a Blueprint inside our application factory function. We first import the instance we just created then we call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eregister_blueprint()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod on the application instance and pass in the blueprint.\u003c/p\u003e\r\n\u003ch3\u003eBlueprint Error handlers\u003c/h3\u003e\r\n\u003cp\u003eThe main difference with writing error handlers inside a blueprint is that it is invoked only inside the blueprint. To use application-wide error handler we must use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp_errorhandler()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edecorator.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/errors.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@main.app_errorhandler\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efour_Ow_four\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function to render the 404 error page\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'fourOwfour.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSince we are defining our error handler inside our blueprint we import the blueprint instance\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emain\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand use it to define our decorator.\u003c/p\u003e\r\n\u003ch3\u003eModels\u003c/h3\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003cem\u003emodels.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile inside our app folder that will contain our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReview\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodels.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Movie class to define Movie Objects\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eoverview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eoverview\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"https://image.tmdb.org/t/p/w500/\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eposter\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evote_average\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evote_average\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evote_count\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evote_count\u003c/span\u003e\r\n\r\n\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eimageurl\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eclear_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclear\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create place both our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReview\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eModel\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclasses inside the _models.py_ file. We can now delete the models folder from our app directory.\u003c/p\u003e\r\n\u003ch3\u003eRequests\u003c/h3\u003e\r\n\u003cp\u003e\u003cem\u003eapp/requests.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eurllib.request\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nn\"\u003ejson\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first update our imports by importing the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the new _app/models.py_ file we have just created.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/requests.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eurllib.request\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nn\"\u003ejson\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Getting api key\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# Getting the movie base url\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003econfigure_request\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eglobal\u003c/span\u003e \u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapi_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_KEY'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebase_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'MOVIE_API_BASE_URL'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create two variables\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapi_key\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebase_url\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand set them to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eNone\u003c/code\u003e. We then create a function\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfigure_request()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in the application instance and replaces the values of the None variables to application configuration objects.\u003c/p\u003e\r\n\u003cp\u003eBecause we cannot access the application instance globally we need to call this function when we create our application instance. This will give us access to the application configuration objects.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e# Registering the blueprint\u003c/span\u003e\r\n    \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.main\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003emain_blueprint\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregister_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emain_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e# setting config\u003c/span\u003e\r\n    \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.requests\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003econfigure_request\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003econfigure_request\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eInside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile we import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfigure_request()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction from the\u003cspan\u003e \u003c/span\u003e\u003cem\u003erequest.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. We call the function and pass the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance.\u003c/p\u003e\r\n\u003ch3\u003eBlueprint views\u003c/h3\u003e\r\n\u003cp\u003eNow we can update our\u003cspan\u003e \u003c/span\u003e\u003cem\u003emain/views.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emain/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..requests\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movies\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_movie\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.forms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eReviewForm\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e..models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first update our files imports. We use the python relative import system in order to import a module according to where it is located in our project. We use one dot\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.modulename\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto import modules that are located within the same package, and two dots \u003ccode\u003e..modulename\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efor modules located in a package higher up in the project hierarchy.\u003c/p\u003e\r\n\u003cp\u003eWe then define our route decorators using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emain\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eblueprint instance instead of the app instance\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emain/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# Views\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e\u003cstrong\u003eTask\u003c/strong\u003e: Define all the remaining routes with the appropriate decorators.\u003c/p\u003e\r\n\u003ch4\u003eurl_for() functions in Blueprints\u003c/h4\u003e\r\n\u003cp\u003eFlask adds a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003enamespace\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eto all endpoints from a blueprint. The namespace is generally the name of the blueprint. For example the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function is registerd as\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for('main.index')\u003c/code\u003e.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ealso supports a shorthand format using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.\u003c/code\u003e.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for('main.index')\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecan be shortened to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for('.index')\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eTask\u003c/strong\u003e: Update the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_for\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eindex\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enew_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview functions with the proper namespace.\u003c/p\u003e\r\n\u003ch3\u003eUnittests\u003c/h3\u003e\r\n\u003cp\u003eWe now move our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_movie.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_review.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efiles from our app folder into our tests folder.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_movie.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMovieTest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Test Class to test the behaviour of the Movie class\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Set up method that will run before every Test\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_movie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1234\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Python Must Be Crazy'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'A thrilling new Python Series'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/khsjha27hbs'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mf\"\u003e8.5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e129993\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_instance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eisinstance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eMovie\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update our imports where we import our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMovie\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from the the\u003cspan\u003e \u003c/span\u003e\u003cem\u003emodules.py\u003c/em\u003efile inside our app directory.\u003c/p\u003e\r\n\u003cp\u003eWe then remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest.run()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand from the bottom of our file. We will consider how to run unittests later on. For now leave your file like this.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eTask\u003c/strong\u003e: Update the\u003cspan\u003e \u003c/span\u003e\u003cem\u003etest_review.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile with the correct imports and remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eunittest.run()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand from the bottom of the file.\u003c/p\u003e\r\n\u003ch3\u003eRunning our Application\u003c/h3\u003e\r\n\u003cp\u003eNow that we have properly configured our application structure we can now launch our application. We will use a flask extension called Flask-Script that is a command line parser that will allow us to create startup configurations.\u003c/p\u003e\r\n\u003cp\u003eFirst install flask-script:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-script\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRename\u003cspan\u003e \u003c/span\u003e\u003cem\u003erun.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile to\u003cspan\u003e \u003c/span\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand then setup flask-script.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_app\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_script\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eManager\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eServer\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction from our app folder. We also import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eManager\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass from flask-script that will initialize our extension and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eServer\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that help us launch our server.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# Creating app instance\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'development'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003emanager\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eManager\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd_command\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'server'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eServer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in the configuration_options key so as to create the application instance. We instantiate the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eManager\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass by passing in the app instance. We then create a command line argument to tell us how to run our application. We use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eadd_command\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to create a new command\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'server'\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich will launch our application server.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd_command\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'server'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eServer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe end the file by calling the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erun\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod on the Manager instance this will run the application.\u003c/p\u003e\r\n\u003cp\u003eNow we can run our application\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eMOVIE_API_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;Your api key\u0026gt;\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eSECRET_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;Your secret key\u0026gt;\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6  manage.py server\r\n * Running on http://127.0.0.1:5000/ \u003cspan class=\"o\"\u003e(\u003c/span\u003ePress CTRL+C to quit\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n * Restarting with stat\r\n * Debugger is active!\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRunning your application this way everytime can get tedious we can create a start file that will setup our environment variables and run our application for us.\u003c/p\u003e\r\n\u003cp\u003eInside our root directory create a new file\u003cspan\u003e \u003c/span\u003e\u003cem\u003estart.sh\u003c/em\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003estart.sh\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eMOVIE_API_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;Your api key\u0026gt;\r\n\u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eSECRET_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;Your secret key\u0026gt;\r\n\r\npython3.6 manage.py server\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then can make that file executable by running\u003cspan\u003e \u003c/span\u003e\u003ccode\u003echmod a+x\u003c/code\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ chmod a+x start.sh\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow we can run our application very easily\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ ./start.sh\r\n * Running on http://127.0.0.1:5000/ \u003cspan class=\"o\"\u003e(\u003c/span\u003ePress CTRL+C to quit\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n * Restarting with stat\r\n * Debugger is active!\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eRunning unittests\u003c/h3\u003e\r\n\u003cp\u003eWe can use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emanager\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance to create a command to run unittests in our application.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd_command\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'server'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eServer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@manager.command\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e\"\"\"Run the unit tests.\"\"\"\u003c/span\u003e\r\n    \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003etests\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestLoader\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ediscover\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'tests'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTextTestRunner\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003everbosity\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etests\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@manager.command\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edecorator to create a new command.We create the test function that loads all the test files and runs them all\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003epython3.6 manager.py \u003cspan class=\"nb\"\u003etest\u003c/span\u003e\r\ntest_instance \u003cspan class=\"o\"\u003e(\u003c/span\u003etest_movie.MovieTest\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... ok\r\ntest_check_instance_variables \u003cspan class=\"o\"\u003e(\u003c/span\u003etest_review.TestReview\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... ok\r\ntest_get_review_by_id \u003cspan class=\"o\"\u003e(\u003c/span\u003etest_review.TestReview\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... ok\r\ntest_instance \u003cspan class=\"o\"\u003e(\u003c/span\u003etest_review.TestReview\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... ok\r\ntest_save_review \u003cspan class=\"o\"\u003e(\u003c/span\u003etest_review.TestReview\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... ok\r\n\r\n----------------------------------------------------------------------\r\nRan \u003cspan class=\"m\"\u003e5\u003c/span\u003e tests in \u003cspan class=\"m\"\u003e0\u003c/span\u003e.002s\r\n\r\nOK\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can now run unittests using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epython3.6 manager.py test\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecommand from the terminal.\u003c/p\u003e","frontPage":false},{"exportId":"monday-migration-password-hashing","title":"Monday: Migration; Password Hashing","type":"WikiPage","content":"\u003ch2\u003eDatabase Migrations\u003c/h2\u003e\r\n\u003cp\u003eFunctionality of web apps changes and we need to track changes to our database. In our small application it is easy to just drop our database when we change the schema of our database. But when we have a large application we can't really afford to lose data everytime we change the structure of our models.\u003c/p\u003e\r\n\u003ch3\u003eAlembic\u003c/h3\u003e\r\n\u003cp\u003eAlembic is a tool that automatically creates and tracks\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003edatabase migrations\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003efrom changes to our SQL models. Database migrations are records of all the changes of our database schema.\u003c/p\u003e\r\n\u003cp\u003eAlembic allows us to upgrade or downgrade our database to saved versions\u003c/p\u003e\r\n\u003ch3\u003eFlask-Migrate\u003c/h3\u003e\r\n\u003cp\u003eWe will use the flask-migrate extension to create database migrations\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip install flask-migrate\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use pip to install the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eflask-migrate\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eextension.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.drop_all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNext we will drop our current database schema and use Flask-Migrate to create a new schema. We then need to initialize the flask extension\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#... \u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e  \u003cspan class=\"nn\"\u003eflask_migrate\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMigrate\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMigrateCommand\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#... \u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMigrate\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMigrateCommand\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#.......\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003emigrate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMigrate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd_command\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'db'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eMigrateCommand\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#......\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then initialize the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMigrate\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance and the \u003ccode\u003edb\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eSQLAlchemy instance. We then create a new manager command\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'db'\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMigrateCommand\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003ch4\u003eInitializing\u003c/h4\u003e\r\n\u003cp\u003eTo use migrations we first need to Initialize our application to use Migrations.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py db init\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis will create a migrations folder in our root directory. This will be where our migration versions will be stored.\u003c/p\u003e\r\n\u003cp\u003eWe can now create the first migration\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py db migrate -m \u003cspan class=\"s2\"\u003e\"Initial Migration\"\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis will create a migration version.We can now upgrade to that version of the database.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py db upgrade\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can go to our psql server and see that all the tables and columns of our database have been created.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point here https://github.com/mbuthiya/watchlist/tree/20-Migrating-database\u003c/p\u003e\r\n\u003ch2\u003eUser Authentication\u003c/h2\u003e\r\n\u003cp\u003eWe now want to make sure our users are authenticated before they create a review on our application.\u003c/p\u003e\r\n\u003cp\u003eWe first need to create a Column in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eusers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etable that stores our passwords .\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epass_secure\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then update our database by running our migrate commands to record the change in the database schema and to upgrade to the new schema with the added column.\u003c/p\u003e\r\n\u003ch3\u003eSecuring our passwords\u003c/h3\u003e\r\n\u003cp\u003eThe key to making our users' information secure in our application, is not to store their passwords but\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ehashes\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eof the passwords. Password hashing is the act of taking a password and performing a series of cryptographic transformations to it.\u003c/p\u003e\r\n\u003cp\u003eHashed passwords can be verified in place of actual passwords because identical inputs produce an identical hash.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003emodels.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ewerkzeug.security\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_password_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003echeck_password_hash\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFlask's Werkzeug’s security module provides hashing functionality with 2 methods.\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\n\u003cstrong\u003egenerating_password_hash \u003c/strong\u003e- This function takes in a password and generates a password hash.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003echeck_password_hash\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- This function takes in a hash password and a password entered by a user and checks if the password matches to return a True or False response.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eWe import these 2 functions and we will use them in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"n\"\u003epass_secure\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n        \u003cspan class=\"nd\"\u003e@property\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"ne\"\u003eAttributeError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'You cannot read the password attribute'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"nd\"\u003e@password.setter\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epass_secure\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_password_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\r\n        \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003everify_password\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003echeck_password_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epass_secure\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@property\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edecorator to create a write only class property\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e. When we set this property we generate a password hash and pass the hashed password as a value to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epass_secure\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecolumn property to save to the database.\u003c/p\u003e\r\n\u003cp\u003eWe raise an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eAttributeError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto block access to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty. This is because it is not secure for Users to have access to that property.\u003c/p\u003e\r\n\u003cp\u003eWe create a method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003everify_password\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in a password, hashes it and compares it to the hashed password to check if they are the same.\u003c/p\u003e\r\n\u003cp\u003eWe can create a test file to test this. Create a new file\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_user.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einside our tests folder.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etest_user.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserModelTest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'banana'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_password_setter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_user\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epass_secure\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that creates an instance of our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass we then pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty. We then create a testcase\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etest_password_setter\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethis ascertains that when password is being hashed and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epass_secure\u003c/code\u003e\u003cspan\u003e \u003c/span\u003econtains a value.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etest_user.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003e    def test_no_access_password(self):\r\n            with self.assertRaises(AttributeError):\r\n                self.new_user.password\r\n\r\n        def test_password_verification(self):\r\n            self.assertTrue(self.new_user.verify_password('banana'))\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eThe second taste case confirms that our application raises an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eAttributeError\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhen we try and access the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epassword\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty The third test confirms that our password_hash can be verified when we pass in the correct password.\u003c/p\u003e\r\n\u003cp\u003e## Authentication Blueprint\u003c/p\u003e\r\n\u003cp\u003eWe now need to create a blueprint that will handle all our application authentication requests. Create a Python Package\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003epackage. Create an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__init__.py\u003c/code\u003e. We also create a new _views.py__ file inside the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth\u003c/code\u003epackage.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/auth/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBlueprint\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eauth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eviews\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we simply create a Blueprint instance\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand we import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eauth\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eviews module.\u003c/p\u003e\r\n\u003cp\u003e_app/auth/views.py_\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eauth\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@auth.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/login'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003elogin\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth/login.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elogin\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function that renders a template file. This template is stored in a subfolder inside the templates folder\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etemplates/auth/login.html\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/__init__.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n    \u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.auth\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eauth\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eauth_blueprint\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregister_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eauth_blueprint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_prefix\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'/authenticate'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe register our Blueprint instance in our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction. We pass in a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eurl_prefix\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eargument that will add a prefix to all the routes registered with that blueprint. We can access the login route\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elocalhost:5000/authenticate/login\u003c/code\u003e\u003c/p\u003e","frontPage":false},{"exportId":"wednesday-updating-reviews-model-and-tests","title":"Wednesday: Updating Reviews Model and Tests","type":"WikiPage","content":"\u003ch2\u003eUpdating Reviews Model\u003c/h2\u003e\r\n\u003cp\u003eNow that we have a database we can start saving our reviews to it. We need to update our reviews model.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edatetime\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e........\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'reviews'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_title\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eimage_path\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie_review\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eposted\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edefault\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eutcnow\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003euser_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForeignKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"users.id\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.Model\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass to create a connection to our database. We then add in 6 columns. We use in Python's datetime module to create a timestamp column\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eposted\u003c/code\u003e.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edatetime.utcnow\u003c/code\u003e\u003cspan\u003e \u003c/span\u003egets the current time and saves it to our database. We then create Foreign key column where we store the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eof the user who wrote the review.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUserMixin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'users'\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e.............\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erelationship\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Review'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ebackref\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'user'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"dynamic\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"o\"\u003e..........\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe the define the relationship inside our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodel. We can then create our Review methods\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e........\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'reviews'\u003c/span\u003e\r\n      \u003cspan class=\"o\"\u003e...........\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ereviews\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create two methods. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod will save the instance of the Review model to the session and commit it to the database. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method will take in a movie id and retrieve all reviews for that specific movie.\u003c/p\u003e\r\n\u003cp\u003eLet us now update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enew_review\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function.\u003cspan\u003e \u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003efrom flask_login import login_required, current_user\u003cbr\u003e#....\u003cbr\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/movie/review/new/\u0026lt;int:id\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'GET'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'POST'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@login_required\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003enew_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReviewForm\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emovie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_movie\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003ereview\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n\r\n        \u003cspan class=\"c1\"\u003e# Updated review instance\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003enew_review\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_title\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eimage_path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eposter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_review\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ereview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent_user\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"c1\"\u003e# save review method\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'.movie'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'{movie.title} review'\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'new_review.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereview_form\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emovie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we update how we define our save review instance. Let us also update our database.\u003cspan\u003e \u003c/span\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e.......\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eRole\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eReview\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e.......\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the Review model to\u003cspan\u003e \u003c/span\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile. We can now create a new migration and upgrade our schema.\u003c/p\u003e\r\n\u003ch2\u003eUpdating Review Tests\u003c/h2\u003e\r\n\u003cp\u003eWe now need to update the review tests to test changes to our review model. First we need to create a test database and link it to our application. Let us activate our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epsql\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eserver and create a test database.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ psql\r\n\u003cspan class=\"nv\"\u003ejames\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# CREATE DATABASE watchlist_test WITH TEMPLATE watchlist\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create a new database\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewatchlist_test\u003c/code\u003e. We use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eWITH TEMPLATE\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto copy the schema of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewatchlist\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edatabase so both databases can be identical.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e........\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSQLALCHEMY_DATABASE_URI\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'postgresql+psycopg2://james:password@localhost/watchlist_test'\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSQLALCHEMY_DATABASE_URI\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'postgresql+psycopg2://james:password@localhost/watchlist'\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eDEBUG\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003econfig_options\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'development'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eDevConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'production'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eProdConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\r\n\u003cspan class=\"s1\"\u003e'test'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eTestConfig\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then update our configuration files to add a new Config class\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTestConfig\u003c/code\u003e. Here we create a new\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSQLALCHEMY_DATABASE_URI\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto connect to our test database. We then move our development\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSQLALCHEMY_DATABASE_URI\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDevConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cp\u003eLet us now update our tests.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst, we need to import the SQLAlchemy database instance and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003cbr\u003e#....\u003cbr\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euser_James\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'James'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'potato'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'james@ms.com'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e12345\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_title\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Review for movies'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eimage_path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://image.tmdb.org/t/p/w500/jdjdjdjn\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_review\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'This movie is the best thing since sliced bread'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euser_James\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst we update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetUp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod. We create an instance of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand the instance of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eReview\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhere we pass in the user instance.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etearDown\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe also update our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etearDown\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod. Here we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003equery.delete\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that deletes all elements from the database after every test.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_check_instance_variables\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e12345\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_title\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Review for movies'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimage_path\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://image.tmdb.org/t/p/w500/jdjdjdjn\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emovie_review\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'This movie is the best thing since sliced bread'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euser_James\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then check if the values of variables are correctly being placed.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_save_review\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a test for our save review method. We also query the database to confirm that we actually have data saved.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003etests/test_review.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_get_review_by_id\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_review\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_review\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003egot_reviews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eReview\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e12345\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egot_reviews\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then test the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eget_reviews\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method that we pass in the id of a movie and get a response which is a review for that movie.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'test'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then need to update our app instance so that we can use the test database URI.\u003c/p\u003e\r\n\u003cp\u003eNow we can run our tests\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py \u003cspan class=\"nb\"\u003etest\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e","frontPage":false},{"exportId":"monday-team-week-objectives","title":"Monday: Team Week Objectives","type":"WikiPage","content":"\u003cp\u003eYou're a team and you're building something awesome!\u003c/p\u003e\r\n\u003cp\u003eSpend time together as a team brainstorming your vision. Decide how you want to communicate and work together over the next 4 days. All ideas should be welcome and all members given roles. You can change partners daily or play to the strengths and preferences of your members (business logic vs user interface logic). Remember that in addition to coding skills, communication is one of the most important elements of building great applications. Let your team be one that fosters direct, honest communication and encourages every member's voice!\u003c/p\u003e\r\n\u003cp\u003eFor the presentation/demonstration, determine what the minimum viable product for demonstration is.. A minimum viable product, or MVP, is a development approach where an application is created with the minimum sufficient features necessary to demonstrate it to users and/or investors. Additional features are implemented when/if time and resources allow. When you create an MVP, it should be a prototype of your idea and have the basic core elements in place so your audience (e.g. peers, investors, clients, future employers, future users, etc.) can understand what your vision is. Try to be both ambitious and realistic. Use a whiteboard or paper or online storyboard application if that would help everyone with the overview and the plan!\u003c/p\u003e\r\n\u003cp\u003eYou are going to create something incredible. Dive in!\u003c/p\u003e\r\n\u003ch3\u003eCode Review Objectives\u003c/h3\u003e\r\n\u003cp\u003eAt the end of the week, you will present your group project on Friday, where it will be reviewed for the following objective:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eParticipation in creating and presenting a project, and collaborating effectively with teammates.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003eMarket Research\u003c/h3\u003e\r\n\u003cp\u003eOur project ideas are coming together and we have an MVP. Before we start building anything, we need to take a look at the market for our product. One thing to consider is the competition: does this product already exist? If it does, that's okay! Many apps in the real world are variations of one another. How many apps have you seen for playing music or requesting a taxi have can you think of? If this is the case, then think about how the user experience be improved or made unique. We also want to consider what kinds of customers our product going to serve. For example, let's say we want to build an event-planning application. How would the presentation and extra features differ if we were building it for:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003esports teams?\u003c/li\u003e\r\n\u003cli\u003etechnology meetups?\u003c/li\u003e\r\n\u003cli\u003eoutdoors enthusiasts?\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eTask: Spend half an hour as a team researching your idea online and refining your MVP according to your findings.\u003c/p\u003e\r\n\u003ch3\u003eProject Pitch\u003c/h3\u003e\r\n\u003cp\u003eSo, you have an idea for the app you'd like to build as a team. If we recall our earlier discussion about the MVP, we need to understand what our user wants before actually building anything. What's the best way to do that? By talking to users!\u003c/p\u003e\r\n\u003cp\u003eTask: For the next two hours, we're going to go out and do just that. Go out in groups (at least two people) to an area with potential users you can ask questions about your product. Designate one group member as the note-taker to record answers to questions.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eApproach someone and introduce yourselves and your project\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eExample: \"Hi there! We are [your names] and we're students at Moringa School. We're building an application and we are hoping to get some opinions on it.\"\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003col\u003e\r\n\u003cli\u003eAsk them for their time politely\r\n\u003cul\u003e\r\n\u003cli\u003eSet a timeline for the pitch, and don't go over your time limit - respect their time\u003c/li\u003e\r\n\u003cli\u003eExample: \"Would you mind if we take three minutes of your time?\"\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003eIntroduce the problem you're setting out to solve\u003c/li\u003e\r\n\u003cli\u003eInstead of asking questions about an already-finished application, ask about ways to solve the problem. You're still in the planning phase - user experience research about the finished product will come later.\u003c/li\u003e\r\n\u003cli\u003eMake it a conversation. Ask open-ended questions - you'll get more information that way\r\n\u003cul\u003e\r\n\u003cli\u003eInstead of \"What is your favorite ice cream flavor?\" try, \"Can you tell me about a dessert you would go out of your way to try again?\"\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003eHave a few questions ready. Some themes to think about:\r\n\u003cul\u003e\r\n\u003cli\u003eAccessibility: are you able to use this technology? Example: Do you have a phone or laptop with internet access?\u003c/li\u003e\r\n\u003cli\u003eRelevance: Is your project relevant? Example: For a money tracking app: how do you use money (mPesa, credit card, cash)?\u003c/li\u003e\r\n\u003cli\u003eUsability: do you have a system for doing this? Would you have to change a lot of things in your life to use this app? Can you integrate it into your life?\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003eThank them for their time\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e\u003cstrong\u003eTask\u003c/strong\u003e: Now that you've conducted market research, re-evaluate your MVP and integrate your findings into your user stories. Feel free to divide your user stories into sections: \"MVP\" and \"Bonus features\". What did you get right the first time around? Did any findings surprise you? Were you making any assumptions in your product design?\u003c/p\u003e","frontPage":false},{"exportId":"wednesday-introduction-open-functions-reading-a-file","title":"Wednesday: Introduction; Open Functions; Reading a File","type":"WikiPage","content":"\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eToday we are going to learn how we can use python to manipulate files on out hard drives.\u003c/p\u003e\r\n\u003ch2\u003eFile Types\u003c/h2\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eText Files\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- A file organized in a sequence of lines, that include a sequence of characters.\u003c/li\u003e\r\n\u003cli\u003e\n\u003cstrong\u003eBinary Files\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- This is anything that is not a text file and they have a special encoding and a method to be read.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003e\u003ccode\u003eOpen()\u003c/code\u003e\u003c/h3\u003e\r\n\u003cp\u003ePython comes with a built in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eopen()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that returns a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eobject. File objects have methods and attributes used to collect information about the file.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003efile_variable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"filename\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"mode\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we call the function we pass in the filename or file path, then we pass in the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emode\u003c/strong\u003e. The Mode tells the developer and the interpreter in which way the file will be used.\u003c/p\u003e\r\n\u003ch4\u003eModes\u003c/h4\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\n\u003ccode\u003er\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e- This means the file is in Read Mode only.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003ew\u003c/code\u003e- The file is in Write Mode only.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003ea\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e-The file is in append mode where we can only add items to the bottom of the file.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003er+\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eThe file is in both read and write mode.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eThe mode parameter is optional because the default value is\u003cspan\u003e \u003c/span\u003e\u003ccode\u003er\u003c/code\u003e\u003c/p\u003e\r\n\u003ch2\u003eReading files\u003c/h2\u003e\r\n\u003cp\u003eLet's use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eopen()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to read a file.\u003c/p\u003e\r\n\u003cp\u003eCreate a new folder name it File-Handling. Inside it create a text file\u003cspan\u003e \u003c/span\u003e\u003cem\u003etest.txt\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand paste in the following.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003eWhat is Python language?\r\nPython is a widely used high-level, general-purpose, interpreted, dynamic programming language.\r\nIts design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than possible in\r\nlanguages such as C++ or Java.\r\nPython supports multiple programming paradigms, including object-oriented, imperative and functional programming or procedural styles.\r\nIt features a dynamic type system and automatic memory management and has a large and comprehensive standard library.\r\nThe best way we learn anything is by practice and exercise questions. We  have started this section for those (beginner to intermediate) who are\r\nfamiliar with Python.\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eReading a file\u003c/h3\u003e\r\n\u003cp\u003eTo read an entire file in python we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eread()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod on the file. Create a file in the same folder as test.txt file and name it\u003cspan\u003e \u003c/span\u003e\u003cem\u003ereadFile.py then\u003c/em\u003e type this in.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run it\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003ereadFile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eWhat\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e \u003cspan class=\"n\"\u003elanguage\u003c/span\u003e\u003cspan class=\"err\"\u003e?\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ePython\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003ewidely\u003c/span\u003e \u003cspan class=\"n\"\u003eused\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003elevel\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003egeneral\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003epurpose\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einterpreted\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edynamic\u003c/span\u003e \u003cspan class=\"n\"\u003eprogramming\u003c/span\u003e \u003cspan class=\"n\"\u003elanguage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIts\u003c/span\u003e \u003cspan class=\"n\"\u003edesign\u003c/span\u003e \u003cspan class=\"n\"\u003ephilosophy\u003c/span\u003e \u003cspan class=\"n\"\u003eemphasizes\u003c/span\u003e \u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"n\"\u003ereadability\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eits\u003c/span\u003e \u003cspan class=\"n\"\u003esyntax\u003c/span\u003e \u003cspan class=\"n\"\u003eallows\u003c/span\u003e \u003cspan class=\"n\"\u003eprogrammers\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexpress\u003c/span\u003e \u003cspan class=\"n\"\u003econcepts\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003efewer\u003c/span\u003e \u003cspan class=\"n\"\u003elines\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003epossible\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elanguages\u003c/span\u003e \u003cspan class=\"n\"\u003esuch\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eC\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eJava\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ePython\u003c/span\u003e \u003cspan class=\"n\"\u003esupports\u003c/span\u003e \u003cspan class=\"n\"\u003emultiple\u003c/span\u003e \u003cspan class=\"n\"\u003eprogramming\u003c/span\u003e \u003cspan class=\"n\"\u003eparadigms\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eincluding\u003c/span\u003e \u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eoriented\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eimperative\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003efunctional\u003c/span\u003e \u003cspan class=\"n\"\u003eprogramming\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eprocedural\u003c/span\u003e \u003cspan class=\"n\"\u003estyles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIt\u003c/span\u003e \u003cspan class=\"n\"\u003efeatures\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003edynamic\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003esystem\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eautomatic\u003c/span\u003e \u003cspan class=\"n\"\u003ememory\u003c/span\u003e \u003cspan class=\"n\"\u003emanagement\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003elarge\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ecomprehensive\u003c/span\u003e \u003cspan class=\"n\"\u003estandard\u003c/span\u003e \u003cspan class=\"n\"\u003elibrary\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003ebest\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003ewe\u003c/span\u003e \u003cspan class=\"n\"\u003elearn\u003c/span\u003e \u003cspan class=\"n\"\u003eanything\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eby\u003c/span\u003e \u003cspan class=\"n\"\u003epractice\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eexercise\u003c/span\u003e \u003cspan class=\"n\"\u003equestions\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"n\"\u003eWe\u003c/span\u003e  \u003cspan class=\"n\"\u003ehave\u003c/span\u003e \u003cspan class=\"n\"\u003estarted\u003c/span\u003e \u003cspan class=\"n\"\u003ethis\u003c/span\u003e \u003cspan class=\"n\"\u003esection\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ethose\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebeginner\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eintermediate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ewho\u003c/span\u003e \u003cspan class=\"n\"\u003eare\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003efamiliar\u003c/span\u003e \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we see that it returns the contents of our entire file. We use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e.close()\u003c/code\u003emethod to close the file handle because it helps us save some memory. It also it prevents getting errors in our application.\u003c/p\u003e\r\n\u003ch3\u003eReading a single line\u003c/h3\u003e\r\n\u003cp\u003eTo read only a single line we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadline()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereadline\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run it\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003ereadFile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eWhat\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e \u003cspan class=\"n\"\u003elanguage\u003c/span\u003e\u003cspan class=\"err\"\u003e?\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadline()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ereturns the first line in our file.\u003c/p\u003e\r\n\u003ch3\u003eReading multiple lines\u003c/h3\u003e\r\n\u003cp\u003eTo read many lines we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadlines()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereadlines\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run it\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003ereadFile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\r\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'What is Python language?\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Python is a widely used high-level, general-purpose, interpreted, dynamic programming langua\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ege\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003eIts\u003c/span\u003e \u003cspan class=\"n\"\u003edesign\u003c/span\u003e \u003cspan class=\"n\"\u003ephilosophy\u003c/span\u003e \u003cspan class=\"n\"\u003eemphasizes\u003c/span\u003e \u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"n\"\u003ereadability\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eits\u003c/span\u003e \u003cspan class=\"n\"\u003esyntax\u003c/span\u003e \u003cspan class=\"n\"\u003eallows\u003c/span\u003e \u003cspan class=\"n\"\u003eprogrammers\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexpress\u003c/span\u003e \u003cspan class=\"n\"\u003econcepts\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003efewer\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elines\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003epossible\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003elanguages\u003c/span\u003e \u003cspan class=\"n\"\u003esuch\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eC\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eJava\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003ePython\u003c/span\u003e \u003cspan class=\"n\"\u003esupports\u003c/span\u003e \u003cspan class=\"n\"\u003emultiple\u003c/span\u003e \u003cspan class=\"n\"\u003eprogramming\u003c/span\u003e \u003cspan class=\"n\"\u003eparadigms\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einclu\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eding\u003c/span\u003e \u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eoriented\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eimperative\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003efunctional\u003c/span\u003e \u003cspan class=\"n\"\u003eprogramming\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eprocedural\u003c/span\u003e \u003cspan class=\"n\"\u003estyles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003eIt\u003c/span\u003e \u003cspan class=\"n\"\u003efeatures\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003edynamic\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003esystem\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e\r\n \u003cspan class=\"n\"\u003eautomatic\u003c/span\u003e \u003cspan class=\"n\"\u003ememory\u003c/span\u003e \u003cspan class=\"n\"\u003emanagement\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003elarge\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ecomprehensive\u003c/span\u003e \u003cspan class=\"n\"\u003estandard\u003c/span\u003e \u003cspan class=\"n\"\u003elibrary\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003ebest\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003ewe\u003c/span\u003e \u003cspan class=\"n\"\u003elearn\u003c/span\u003e \u003cspan class=\"n\"\u003eanything\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eby\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003epractice\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eexercise\u003c/span\u003e \u003cspan class=\"n\"\u003equestions\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"n\"\u003eWe\u003c/span\u003e  \u003cspan class=\"n\"\u003ehave\u003c/span\u003e \u003cspan class=\"n\"\u003estarted\u003c/span\u003e \u003cspan class=\"n\"\u003ethis\u003c/span\u003e \u003cspan class=\"n\"\u003esection\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ethose\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebeginner\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eintermediate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ewho\u003c/span\u003e \u003cspan class=\"n\"\u003eare\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e', '\u003c/span\u003e\u003cspan class=\"n\"\u003efamiliar\u003c/span\u003e \u003cspan class=\"n\"\u003ewit\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eh\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"s1\"\u003e']\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereadlines()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ereturns a list of all the lines in our file separated\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\\n\u003c/code\u003e\u003cspan\u003e \u003c/span\u003enew line tags.\u003c/p\u003e\r\n\u003ch3\u003eLooping through a file.\u003c/h3\u003e\r\n\u003cp\u003eYou can also loop through a file. Let us take for example we want to find how many times the word\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ePython\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ehas been used in the file.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ehandle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"text.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"r\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ecounter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eword\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eword\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Python\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n       \u003cspan class=\"n\"\u003ecounter\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecounter\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we used the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esplit()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to transform data into a list of words which we loop through and search if the word matches\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"Python\"\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand adds one to the counter.\u003c/p\u003e\r\n\u003cp\u003eWhen we run this\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epython3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"n\"\u003ereadFile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e\r\n\r\n\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e","frontPage":false},{"exportId":"weekend-looping","title":"Weekend: Looping","type":"WikiPage","content":"\u003ch3\u003eLooping\u003c/h3\u003e\r\n\u003cp\u003eA loop is a way to execute some piece of code over and over again. There are 2 kinds of loops in Python;\u003c/p\u003e\r\n\u003cp dir=\"ltr\" style=\"padding-left: 120px;\"\u003e1.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop\u003c/p\u003e\r\n\u003cp style=\"padding-left: 120px;\"\u003e2.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop\u003c/p\u003e\r\n\u003ch4\u003e\n\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eLoops\u003c/h4\u003e\r\n\u003cp\u003eA\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop is used when one wants to repeat something a number of times. Just like the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatements, blocks of code in a for loop are indented, otherwise they will not run.\u003c/p\u003e\r\n\u003cp\u003eHere is an example of a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop in Python:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_example.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003enumbers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement loops through the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumbers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist, and stores each individual number in a variable called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumber\u003c/code\u003e, then prints out this new variable we have created.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\n\u003cspan class=\"m\"\u003e1\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e2\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e3\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e5\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can also use a Python function named\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloops. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange()\u003c/code\u003efunction returns a list for which we can use to loop through.\u003c/p\u003e\r\n\u003cp\u003eFirst let us see how we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction by creating a list.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere's what this code does:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e, \u003cspan class=\"m\"\u003e1\u003c/span\u003e, \u003cspan class=\"m\"\u003e2\u003c/span\u003e, \u003cspan class=\"m\"\u003e3\u003c/span\u003e, \u003cspan class=\"m\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction can take on two parameters. The first one is the number from where to start the range, and the second one is where to stop the range - this does\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003enot\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003einclude that number. In our example here, we start the range at 0 and end it at 5. Then we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to convert it to a list and print it out.\u003c/p\u003e\r\n\u003cp\u003eLet's take a look at another example using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erange()\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I would love \"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\" cookies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we created a loop that prints out the string\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eI would love cookies\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith the number of cookies incrementing with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop. We used the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estr()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to convert the number\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ei\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto a string so that we could concatenate it with the rest of the string. Here's the output:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nI would love \u003cspan class=\"m\"\u003e0\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e1\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e2\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e3\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e4\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e5\u003c/span\u003e cookies\r\nI would love \u003cspan class=\"m\"\u003e6\u003c/span\u003e cookies\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet us create another example of a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop with conditions.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003enumbers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we loop through the numbers list and check if the number inside the list is fully divisible by 2; if it is, then we print out that number.\u003c/p\u003e\r\n\u003cp\u003eHere's the output of this\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\n\u003cspan class=\"m\"\u003e2\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e\n\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eLoops\u003c/h4\u003e\r\n\u003cp\u003eUnlike\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloops,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloops run until a certain condition is met.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloops are often used as counters. Let's see one in action:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eplayers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003eplayers\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"The remaining players are\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eplayers\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eplayers\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe've created a variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eplayers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat we set as 11, and then created a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop with the condition that the value of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eplayers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eneeds to be greater than or equal to 5. If this condition is true, then a string will print and the value of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eplayers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewill decrease by 1, and the loop will execute again until the condition is no longer true (that is to say,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eplayers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis less than 5).\u003c/p\u003e\r\n\u003cp\u003eHere's what happens when we run it:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nThe remaining players are \u003cspan class=\"m\"\u003e11\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e10\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e9\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e8\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e7\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e6\u003c/span\u003e\r\nThe remaining players are \u003cspan class=\"m\"\u003e5\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSure enough, the code only executes when\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eplayers\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis greater than or equal to 5. After that, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop is exited and the code stops running.\u003c/p\u003e\r\n\u003ch3\u003eControl Flow Exercises\u003c/h3\u003e\r\n\u003ch4\u003eMagic 8 ball\u003c/h4\u003e\r\n\u003cp\u003eCreate the popular Magic 8 Ball game. If you've never played it before, it is a toy that you can ask a yes-or-no question and it will give you a random answer (feel free to read more on the\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Magic_8-Ball\"\u003eWikipedia page\u003c/a\u003e). In your program, allow a person to input a question, and then create a random number. Based on the random number, pick a response to the question using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelif\u003c/code\u003e, and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatements. You can find the responses at the\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Magic_8-Ball#Possible_answers\"\u003eWikipedia page\u003c/a\u003e.\u003c/p\u003e\r\n\u003ch2\u003e\u003ccode\u003ebreak Statement\u003c/code\u003e\u003c/h2\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebreak\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement allows code to jump out of a loop whenever a certain condition has been met.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I love candy \"\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e   \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this code, see what prints to the console:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nI love candy \u003cspan class=\"m\"\u003e0\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e1\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e2\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e3\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e5\u003c/span\u003e\r\nI love candy \u003cspan class=\"m\"\u003e6\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eEach time the loop runs, and prints out our statement, and checks if\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumber\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis equal to 7. If not, it runs again. If it is, the loop stops.\u003c/p\u003e\r\n\u003ch3\u003e\u003ccode\u003econtinue Statement\u003c/code\u003e\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtinue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement is also used in loops. It allows us to jump back up to the top of our loop. The\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtinue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ekeyword ignores all other statements under it and they are not run. Let's look at an example using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtinue\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003ein a team of members 20, some numbers are taken \u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003eand want to display the numbers that are not taken\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003eso others don't pick the picked numbers\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# taken numbers\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003enumTaken\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Available numbers\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# loop\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e21\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003enumTaken\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe want to print numbers from 1-20, but skip over the numbers in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumTaken\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist. We've written a standard\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop, with a twist. If the current number\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ei\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003enumTaken\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprint()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement directly under the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtinue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis not executed. This is because every time\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtinue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis called, Python jumps back up to the top of the loop.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nAvailable numbers\r\n\u003cspan class=\"m\"\u003e1\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e2\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e6\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e8\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e9\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e10\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e14\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e15\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e16\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e17\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e18\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e20\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe numbers 1-20 have printed, but we've skipped over the numbers in our list.\u003c/p\u003e\r\n\u003ch3\u003eLists\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003eLists\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eare another Python data type. They are the equivalent of arrays in other languages. A Python list can store any kind of value.\u003c/p\u003e\r\n\u003cp\u003eWe can create a list using square brackets\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e[]\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eor using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction, like this. We can open our Python shell and practice the following commands.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003emy_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emy_other_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let's create some lists that actually hold data.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# list of strings\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# list of numbers\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_c\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"west\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# mixed list\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAs we can see with the code above, we can create a list that holds similar types of items, such as the first two which hold only strings or only numbers; or we can mix the types of data stored in our list, as we do with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist_c\u003c/code\u003e, which holds both numbers and strings.\u003c/p\u003e\r\n\u003cp\u003eWe can even nest our lists with other lists.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_d\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e],[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e],[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"west\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# nested list\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can join two lists using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eextend()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \r\n\u003cspan class=\"n\"\u003elist_b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Joining list_b to list_a\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eextend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_b\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# this will print [\"a\",\"b\",\"c\",\"d\",1,2,3,4,5,6]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_b\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# this will print [1,2,3,4,5,6]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we have joined\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist_b\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist_a\u003c/code\u003e. This adds new values to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist_a\u003c/code\u003e. Notice that\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist_b\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eremains unchanged.\u003c/p\u003e\r\n\u003cp\u003eWe can also append values to a list using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# [\"a\",\"b\",\"c\",\"d\"]\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# [\"a\",\"b\",\"c\",\"d\",\"e\"]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we append a single value,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"e\"\u003c/code\u003e, to the list.\u003c/p\u003e\r\n\u003cp\u003eWe can also arrange list items in place using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereverse()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esort()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethods.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# ['d', 'c', 'b', 'a']\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereverse()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to reverse the list.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# [1, 2, 3, 4, 5, 6, 7, 8]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esort()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod arranges items in order.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ereverse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esort\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethods only work on the list they were called on. They have no return value.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e# converts list_a to [5,4,3,2,1]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# list_b is None\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eTuples\u003c/h3\u003e\r\n\u003cp\u003eTuples are like lists. The main difference between tuples and lists is that tuples are\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eimmutable\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- their values cannot be changed once created.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003etuple_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"b\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# tuple of strings\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003etuple_b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# tuple of numbers\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003etuple_c\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"west\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"longitude\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# mixed tuple\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003etuple_d\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etuple\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e#empty tuple\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can create a tuple using parentheses\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e(as in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etuple_a\u003c/code\u003e,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etuple_b\u003c/code\u003e, and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etuple_c\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein the above example) or we can use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etuple()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction (as in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003etuple_d\u003c/code\u003e).\u003c/p\u003e\r\n\u003ch3\u003eDictionary\u003c/h3\u003e\r\n\u003cp\u003eAnother really powerful data structure in Python is the dictionary. Like lists, dictionaries store collections of many values of different types. Unlike indexes for lists - which are integers and start from 0, dictionary indexes don't have to be integers. They can be of different data types like strings. Indexes in dictionaries are called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ekeys\u003c/strong\u003e. The value here is appropriately called the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003evalue\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eDictionaries can be created in two ways:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Creating empty dictionaries\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emy_dict\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emy_dict\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edict\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# Creating a dictionary with keys and values\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003emy_cat\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e'name'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Mr sniffles'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'age'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e18\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'color'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s1\"\u003e'black'\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn the example above, we created a new dictionary that stores details about\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emy_cat\u003c/code\u003e. We can fetch data from a dictionary by using our key as the index. Continuing from the above example, let's say that we want to print the name of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emy_cat\u003c/code\u003e,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e'Mr sniffles'\u003c/code\u003e. Here is how we would access that value from the dictionary:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ecat_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emy_cat\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'name'\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecat_name\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 'Mr sniffles'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eUnlike lists, dictionaries are unordered since the indexing does not start at [0]. We will see what that means later on.\u003c/p\u003e\r\n\u003cp\u003eWe can also add items to a dictionary by defining a new key and assigning it a value.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebirthdays\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"John\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"August 1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Marcus\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"April 8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ebirthdays\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"mary\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"September 14\"\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebirthdays\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# this prints {\"John\":\"August 1\",\"Marcus\":\"April 8\",\"Mary\":\"September 14\"}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we had a dictionary with the birthday of two people,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eJohn\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMarcus\u003c/code\u003e. Then we added\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eMary\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto our birthday dictionary.\u003c/p\u003e\r\n\u003cp\u003eWe can also get the individual keys in the dictionary using the\u003ccode\u003ekeys()\u003c/code\u003emethod.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebirthday\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"John\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"August 1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Marcus\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"April 8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mary\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"September 14\"\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebirthday\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"c1\"\u003e# this prints dict_keys(['John', 'Marcus', 'Mary'])\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ekeys()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod creates a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edict_keys\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eobject that holds a list of all the keys.\u003c/p\u003e\r\n\u003cp\u003eWe can convert them into a list using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003elist()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ebirthday\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"John\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"August 1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Marcus\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"April 8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Mary\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"September 14\"\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebirthday\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e()))\u003c/span\u003e \u003cspan class=\"c1\"\u003e# this prints ['John', 'Marcus', 'Mary']the ne\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e\n\u003ccode\u003esetdefault()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod\u003c/h4\u003e\r\n\u003cp\u003eWhen dealing with a dictionary, sometimes it can be useful to set placeholder values to keys, before we do any operation on them, to prevent unnecessary errors.\u003c/p\u003e\r\n\u003cp\u003eFor example, let's say we want to create an application that counts every character in an input string. Open up\u003cspan\u003e \u003c/span\u003e\u003cem\u003eimport_demo.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand add this code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eimport_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Enter a string\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003einput_string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe prompt the user for an input. Then we create an empty dictionary named\u003cspan\u003e \u003c/span\u003e\u003ccode\u003echaracters\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat will store each individual character and how many times it has been used. Now let's use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetdefault()\u003c/code\u003e:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eimport_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Enter a string\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003einput_string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003echaracter\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003einput_string\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetdefault\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echaracter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we use a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eloop to iterate through each individual character in the string. Then we use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esetdefault()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to create a key for each character if the character does\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003enot\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eexist in the dictionary. Then we set the default value for each as\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e0\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eimport_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Enter a string\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003einput_string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003echaracter\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003einput_string\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetdefault\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echaracter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003echaracter\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003echaracter\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLastly we target the key that matches the character and add one to the value everytime the character is encountered.\u003c/p\u003e\r\n\u003cp\u003eWhen we run this, here's what happens:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 import_demo.py\r\nEnter a string \u003cspan class=\"c1\"\u003e# I'm going to enter \"James is awesome\"\u003c/span\u003e\r\nJames is awesome\r\n\r\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e' '\u003c/span\u003e: \u003cspan class=\"m\"\u003e3\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'J'\u003c/span\u003e: \u003cspan class=\"m\"\u003e1\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'a'\u003c/span\u003e: \u003cspan class=\"m\"\u003e2\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'e'\u003c/span\u003e: \u003cspan class=\"m\"\u003e3\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'i'\u003c/span\u003e: \u003cspan class=\"m\"\u003e1\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'm'\u003c/span\u003e: \u003cspan class=\"m\"\u003e2\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'o'\u003c/span\u003e: \u003cspan class=\"m\"\u003e2\u003c/span\u003e, \u003cspan class=\"s1\"\u003e's'\u003c/span\u003e: \u003cspan class=\"m\"\u003e4\u003c/span\u003e, \u003cspan class=\"s1\"\u003e'w'\u003c/span\u003e: \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eList and Dictionary Exercises\u003c/h3\u003e\r\n\u003ch4\u003e\u003cstrong\u003eMagic 8 ball\u003c/strong\u003e\u003c/h4\u003e\r\n\u003cp\u003eRecreate the Magic 8 Ball exercise from the Control Flow lesson using lists instead of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatements.\u003c/p\u003e\r\n\u003ch4\u003e\u003cstrong\u003eFeature Phones\u003c/strong\u003e\u003c/h4\u003e\r\n\u003cp\u003eRemember the days before smartphones when text was entered in our phones using the keypad? If you need a refresher, see this image of a phone keypad:\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"https://i.stack.imgur.com/hHq4v.jpg\" alt=\"Phone Keypad\"\u003e\u003c/p\u003e\r\n\u003cp\u003eNotice the letters on each number. To type a letter, the user needs to press the button on which the letter is printed the number of times that corresponds to its order on the button.\u003c/p\u003e\r\n\u003cp\u003eFor example, to type \"E\", the user needs to press \"3\" two times. To type \"Z\", the user needs to press \"9\" four times. To type \"DOG\", they need to press \"3\" one time, \"6\" three times, and \"4\" one time. And so on.\u003c/p\u003e\r\n\u003cp\u003eCreate a program that allows a user to enter text and then it calculates how many clicks it takes for a user to input the text. Ignore uppercase and special characters.\u003c/p\u003e\r\n\u003cp\u003eFor example, if a user inputs\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003e\u003cem\u003e\"James\"\u003c/em\u003e\u003c/strong\u003e, the output should be\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003e\u003cem\u003e9\u003c/em\u003e\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ebecause...\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\"J\": press \"5\" one time\u003c/li\u003e\r\n\u003cli\u003e\"A\": press \"2\" one time\u003c/li\u003e\r\n\u003cli\u003e\"M\": press \"6\" one time\u003c/li\u003e\r\n\u003cli\u003e\"E\": press \"3\" two times\u003c/li\u003e\r\n\u003cli\u003e\"S\": press \"7\" four times\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003ePut this all together, and 1 + 1 + 1 + 2 + 4 = 9.\u003c/p\u003e","frontPage":false},{"exportId":"monday-team-week-project-pitch","title":"Monday: Team Week - Project Pitch","type":"WikiPage","content":"\u003cp\u003eIn the 5th week of this course we will be working on web applications in groups of four. In preparation, we'll take the coming week to generate ideas and sign up for teams, so we'll be organized and ready to go first thing Monday of week 5!\u003c/p\u003e\r\n\u003ch3\u003eHomework\u003c/h3\u003e\r\n\u003chr\u003e\r\n\u003cp\u003eGenerate an idea you would like to help develop into a working application. It could be a game, a new business idea, something educational, something fun, something to help others or something to change the world, an application or website a friend or family member could use, etc.\u003c/p\u003e\r\n\u003ch4\u003ePast Student Work\u003c/h4\u003e\r\n\u003cp\u003eHere are just a few examples of the types of projects past students have built during Team Week:\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eSites to plan activities.\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eVacations, camping trips, road trips, weddings, pub crawls, organizing your friends together for a weekend.\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eRide sharing\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eA car pooling site fro people using the same routes\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eApps to lend a hand.\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eLocate stolen bikes, missing pets, organize resources after natural disasters,\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eTools to connect people.\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eHelping musicians find other musicians for jam sessions, puppy play date finders, dating sites, interest-based meetups or communication tools, virtual study groups.\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eGames\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eText-oriented games like \"Choose your own adventure\"-style storytelling games, room escape, RPGs, word games, Oregon Trail.\u003c/p\u003e\r\n\u003cp\u003eDigital versions of your favorite games, such as Clue, Poker, Magic, Chess, Monopoly, Cards Against Humanity, Breakout, matching games, etc.\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eProductivity Tools\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eChecklists, organizers, note-taking, household grocery or to-do lists.\u003c/p\u003e\r\n\u003ch5\u003e\u003cstrong\u003eWebsites for real people.\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eWebsites and apps for local businesses, family friends, etc.\u003c/p\u003e\r\n\u003ch3\u003eTimeline\u003c/h3\u003e\r\n\u003chr\u003e\r\n\u003ch4\u003e\u003cstrong\u003eMonday and Tuesday\u003c/strong\u003e\u003c/h4\u003e\r\n\u003ch5\u003e\u003cstrong\u003e\u003cem\u003eBrainstorm Ideas\u003c/em\u003e\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eMonday morning, begin listing project ideas on the glass wall including:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eA Title and brief description of the project\u003c/li\u003e\r\n\u003cli\u003eYour name\u003c/li\u003e\r\n\u003cli\u003eThe language you are learning\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eOver the first two days of the week, ideas will be added and updated on the board. Students may sign up as they see projects that interest them. Talk to potential groups; ask questions; sign up for a project you feel most interested in and passionate about!\u003c/p\u003e\r\n\u003ch4\u003e\u003cstrong\u003eWednesday\u003c/strong\u003e\u003c/h4\u003e\r\n\u003ch5\u003e\u003cstrong\u003e\u003cem\u003eSign Up\u003c/em\u003e\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eEveryone is required to sign up for a team no later than Wednesday. Remember, all teams should contain 4 students. If a team already has 4 people, it is full and cannot take on additional members. Sign up by entering your full name next to a project.\u003c/p\u003e\r\n\u003ch4\u003e\u003cstrong\u003eThursday\u003c/strong\u003e\u003c/h4\u003e\r\n\u003ch5\u003e\u003cstrong\u003e\u003cem\u003eConfirmation\u003c/em\u003e\u003c/strong\u003e\u003c/h5\u003e\r\n\u003cp\u003eOn Thursday Technical Mentors will confirm all teams have 4 members and a project idea to begin working on next week. If teams are short of members we'll help facilitate connecting with additional teammates, or re-arranging teams as necessary.\u003c/p\u003e\r\n\u003cp\u003eWhile you won't begin work on your project until the following Monday, you're encouraged to trade contact information with your teammates and start any planning or brainstorming outside of class\u003c/p\u003e","frontPage":false},{"exportId":"thursday-team-week-presentation","title":"Thursday: Team Week Presentation","type":"WikiPage","content":"\u003cp\u003eTomorrow, teams will give a presentation and demonstration of their applications to staff and students. Determine how you want to present and demonstrate your work. Each team member may speak or a spokesperson may be designated for the group. Presenting technical content is something we will be doing many times throughout our time at Moringa School, and tomorrow is an opportunity to practice those skills and improve. \u003c/p\u003e\r\n\u003cp\u003eReview this lesson for a general structure for technical presentations, as well as guidelines to follow when putting presentations together.\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003ePresentation Structure\u003c/span\u003e\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan style=\"font-weight: 400;\"\u003eEach group should p\u003c/span\u003elan to spend ~5 minutes covering the following information:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eTeam Members - Who worked on the project?\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eProject Name and Objective - Why did you choose this project? What purpose does it fulfill?\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eDemonstration - Show and describe the features of your work.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eProcess - Describe how the team development process worked in your group.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003cli\u003e\r\n\u003cp\u003eChallenges - Share the biggest technical challenges you faced.\u003c/p\u003e\r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003eAlso, allow a bit of time for any questions your audience may have.\u003c/p\u003e\r\n\u003cp\u003ePlease review the next sections in preparation for presentations. \u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eSubject Knowledge\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eGive a clear explanation of the problem statement and have a deep understanding of each part of the presentation - be able to elaborate on and defend every point that you make (you never know what the audience will ask)\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThink carefully about what message you want to send. Assume that the audience knows very little and then give them all the information they need to know about your project. Give explanations that make sense to all skill levels, defining terms if necessary.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe able to justify the decisions and technicalities of your application\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe able to answer audience questions truthfully and comprehensively without hesitation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDo not refer to your work as a “project” - it sounds juvenile and unprofessional. Use “application” or “product” instead.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eOrganization and preparedness\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ePresent the information in a logical, interesting sequence that is easy to follow. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eTransition smoothly from one stage to the next. Avoid awkward pauses in between stages and group members.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBe sure to rehearse as a group to establish chemistry between team members\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eRespect the time limit set aside for the presentation and makes good use of time.\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe secret to keeping time is to time yourself while practising so that you understand how long each part of the presentation actually takes.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAll group members should speak during the presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMake sure all group members are equally prepared.\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eIf one group member speaks clearly and confidently while the others do not portray the same quality, the difference is easily noticeable by the audience.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eWhen preparing for presentations, make sure you are conversant in each part of the presentation even though you have allocated specific parts of the presentation to different team members. You never know what unexpected challenges may arise, and a group member may not be available for the presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDress the part - wear something smart and presentable on the day of the presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ePractice: build confidence and make the presentation sound effortless. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eEnsure that the equipment you will be using for example a projector or a laptop is working.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eDouble check to make sure that your project is complete and fully functioning: all links are working, and everything matches well with the information you are communicating.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eMechanics\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSlides are a must-have for presentations\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe content on the slides should support your presentation and reaffirm the message. They should contain images, graphics, and key points. \u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eThe slides should not replace the presentation. In general, they should not contain a lot of text.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eReview and revise your slides prior to the presentation and make sure they are free of grammatical errors. Even small errors can indicate carelessness and unprofessionalism.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\n\u003cspan style=\"font-weight: 400;\"\u003eGraphics should be clear and portray accurate information related to the presentation content.\u003c/span\u003e\u003cspan style=\"font-weight: 400;\"\u003e\u003c/span\u003e\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2\u003e\u003cspan style=\"font-weight: 400;\"\u003ePresentation Skills\u003c/span\u003e\u003c/h2\u003e\r\n\u003cp\u003eNo matter how your presentation is structured, your presentation skills can have just as much, if not more, of an effect on how your presentation is received by the audience. Review this section for information on how to deliver a presentation effectively.\u003c/p\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eBody Language\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMovements and gestures should be natural and not look rigid or rehearsed.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eStand or move naturally. Don’t be stiff. However, don’t move too much. Do not pace. Do not dance or stand like a statue. Repetitive movements, such as swinging your arm or pacing, are distracting to the audience and makes you seem unconfident.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eYour body language should be in sync with the presentation and help the audience understand the message.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003ePoise\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eYour demeanor should be relaxed and portray self-confidence.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAt times, no matter how prepared you are, mistakes happen - the important thing is that you recover from them effortlessly so that the audience does not take notice.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBeing confident has a lot to do with managing your stress levels. If you feel particularly nervous and anxious, then those emotions will probably show. The audience can detect if you're nervous, which can take away from the impact of your presentation. A little nervousness is useful because it can build energy, but that energy may quickly turn negative if nerves build to the point where you can't control them. If you have anxiety before a presentation, try some of these stress management tools:\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eTake a few deep breaths.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eVisualize yourself delivering a successful presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eBuild your self-confidence by:\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eRehearsing! Rehearsing! Rehearsing!\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSimplifying your speech to make it short and simple\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eActing confident even if you do not feel it, stand upright!\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eTaking slow, deep breaths through your nose, filling your belly. \u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSmile, but not too much. Not only does smiling make you look more relaxed and confident to the audience, it actually makes you more relaxed and confident.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eEye Contact\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eHold the attention of the entire audience through steady eye contact and focus.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eMake sure that you hold the attention of everyone in the audience. Shift your focus to different sections of the audience from time to time instead of looking at one section throughout the entire presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eIf you only pay attention to one part of the audience, the rest of the audience may not feel included and stop paying attention to the presentation.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAvoid referring to notes or slides - your attention should be on the audience.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eEnthusiasm\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eShow that you are excited and have positive feelings about the product you're presenting. When you love what you're doing, the audience feels excited about the subject as well.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003cspan style=\"font-weight: 400;\"\u003eElocution\u003c/span\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSpeak slowly - unnaturally slowly, even - especially if you talk fast habitually. Listeners are absorbing a huge amount of information, and need extra time to process what you are saying.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003ePause from time to time. A pause is powerful, it forces the audience to pay attention, forces you to slow down, and gives you time to gather your thoughts.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eSpeak clearly. With practise, even a memorized script can become more natural and interesting. \u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eProject your voice and use precise language with clear and correct pronunciation.\u003c/span\u003e\u003c/li\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eUse appropriate tonal variation and speed while talking to make sure your message is heard.\u003c/span\u003e\u003c/li\u003e\r\n\u003cul\u003e\r\n\u003cli style=\"font-weight: 400;\"\u003e\u003cspan style=\"font-weight: 400;\"\u003eAvoid using a defensive tone when answering questions from the audience. Assume that the audience is genuinely curious and has valuable feedback to offer.\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003c/ul\u003e","frontPage":false},{"exportId":"tuesday-user-profile","title":"Tuesday: User Profile","type":"WikiPage","content":"\u003ch2\u003eCreating a Profile page\u003c/h2\u003e\r\n\u003cp\u003eWe can now create a profile for our new user. But first we need to update\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eso we can store more properties.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUserMixin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'users'\u003c/span\u003e\r\n\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"n\"\u003eunique\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003erole_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForeignKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'roles.id'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eprofile_pic_path\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003epassword_secure\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe add two new columns; one for the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebio\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich is the users biography and\u003cspan\u003e  the other for \u003c/span\u003e\u003ccode\u003eprofile_pic_path\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto store the path of the profile photo. We can update our database by creating an updated migration file and upgrade the database.\u003c/p\u003e\r\n\u003cp\u003eNow let's create a profile view function.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eabort\u003cbr\u003efrom ..models import Reviews, User\u003cbr\u003e\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#.....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/user/\u0026lt;uname\u0026gt;'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eprofile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eabort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"profile/profile.html\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#.....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eabort\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction, that stops a request, and returns a response according to the status code passed in. We then create a dynamic route that is handled by the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprofile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function.\u003c/p\u003e\r\n\u003cp\u003eWe then query the database to find the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eaccording to the username passed. If no user is found the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eabort\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis called and a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e404\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatus code is returned as a response. If a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis found we render a template and pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas a variable.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/profile/profile.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;div class=\"container\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;div class=\"row\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;!-- displaying  Username--\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e  \u0026lt;div class=\"col-md-4\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;h3\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003euser.username\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"nf\"\u003ecapitalize\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e \u0026lt;/h3\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u0026lt;!--Displaying user bio--\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003euser.bio\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e      \u0026lt;p\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003euser.bio\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e      \u0026lt;p\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003euser.username\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"nf\"\u003ecapitalize\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e has no bio \u0026lt;/p\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendif\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e  \u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e  \u0026lt;!--Display profile photo--\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e  \u0026lt;div class=\"col-md-4\"\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003euser.profile_pic_path\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;img src=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'static'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003efilename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003euser.profile_pic_path\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\" alt=\"\" class=\"img-thumbnail\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u0026lt;p\u0026gt;No profile picture\u0026lt;/p\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendif\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e  \u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a template file for our profile where we display our username, bio and profile picture of the User.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/navbar.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"x\"\u003e....\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;ul class=\"nav navbar-nav navbar-right\"\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003ecurrent_user.is_authenticated\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u0026lt;li\u0026gt;\u0026lt;a href=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'main.profile'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003euname\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003ecurrent_user.username\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt;Profile\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u0026lt;li\u0026gt;\u0026lt;a href=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth.logout'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt;Sign out\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u0026lt;li\u0026gt;\u0026lt;a href=\"\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'auth.login'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\"\u0026gt;Sign in\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                  \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e\u003cspan class=\"k\"\u003eendif\u003c/span\u003e\u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"x\"\u003e                \u0026lt;/ul\u0026gt;\u003c/span\u003e\r\n\r\n\u003cspan class=\"x\"\u003e....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then create a link on our navigation bar to direct us to the profile page. This link will be visible only if a user is authenticated.\u003c/p\u003e\r\n\u003ch2\u003eEdit Profile\u003c/h2\u003e\r\n\u003cp\u003eWe want to update our bio to say something interesting about us.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/forms.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUpdateProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlaskForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003ebio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTextAreaField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Tell us about you.'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evalidators\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e()])\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003esubmit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSubmitField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'Submit'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a new form class\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUpdateProfile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat has only the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ebio\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eTextarea form field.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.forms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eReviewForm\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eUpdateProfile\u003cbr\u003efrom .. import db\u003cbr\u003e\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe import the new form class into our _views.py_ module in our main blueprint. Also, we import db from our app since we will need it when saving profile information changes to the database.\u003c/p\u003e\r\n\u003cp\u003eWe can now create a view function that will handle an update request\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/main/views.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@main.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/user/\u0026lt;uname\u0026gt;/update'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003emethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e'GET'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'POST'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@login_required\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate_profile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eabort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e404\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUpdateProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate_on_submit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebio\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'.profile'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003euname\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'profile/update.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eupdate_profile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function that takes in a username, and instantiates the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUpdateProfile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eform class.\u003c/p\u003e\r\n\u003cp\u003eWe query the database to find a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewith the same\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eusername\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eIf the form is validated we update the content of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003euser.bio\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eproperty to fill in what the user has submitted and redirect the user back to the profile page where he can see the new bio.\u003c/p\u003e\r\n\u003cp\u003eIf not we render the _update.html_ template and pass in the form instance.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/profile/profile.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e{% if user == current_user %}\r\n    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{{url_for('main.update_profile',uname=user.username)}}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eEdit profile\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\r\n{% endif %}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a link to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eupdate_profile\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eview function inside our _profile.html_ file.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003eapp/templates/profile/update.html\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eextends\u003c/span\u003e \u003cspan class=\"s1\"\u003e'base.html'\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e'bootstrap/wtf.html'\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nv\"\u003ewtf\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003cbr\u003e\u003c/span\u003e\u0026lt;div class=\"container\"\u0026gt;\r\n\u003cspan class=\"x\"\u003e  \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e\u003cspan class=\"nv\"\u003ewtf.quick_form\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"cp\"\u003e}}\u003cbr\u003e\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\u0026lt;/div\u0026gt;\r\n\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eInside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eupdate.html\u003c/em\u003e\u003cspan\u003e \u003c/span\u003etemplate we call the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ewtf.quick_form()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction and pass in the form instance. This will display our update bio form with bootstrap styling.\u003c/p\u003e\r\n\u003cp\u003eYou can find the application at this point from here https://github.com/mbuthiya/watchlist/tree/26-Creating-a-user-profile\u003c/p\u003e","frontPage":false},{"exportId":"tuesday-introduction-assertrue-python-modules","title":"Tuesday: Introduction, asserTrue(); Python Modules","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eSo yesterday we introduced Object Oriented Programing, and wrote some unit tests to verify that our code works. Today we will be seeing how to handle user input. We will cover some error handling and we will finish up by working with some python modules.\u003c/p\u003e\r\n\u003ch2\u003eWarm Up\u003c/h2\u003e\r\n\u003col\u003e\r\n\u003cli\u003eHow do you create a class in Python?\u003c/li\u003e\r\n\u003cli\u003eYou are building a website for handling train ticketing . Using BDD list all the behaviors you expect to have in your application.\u003c/li\u003e\r\n\u003cli\u003eWhat is a test case, in Python and how is it created ?\u003c/li\u003e\r\n\u003cli\u003eDescribe the testing process used in TDD.\u003c/li\u003e\r\n\u003cli\u003eWrite a test method for a function that returns\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e\"Hello World!\"\u003c/code\u003e\n\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003e\n\u003ccode\u003eassertTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod\u003c/h2\u003e\r\n\u003cp\u003eNow we want to check if a contact object actually exists.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_contact_exists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        test to check if we can return a Boolean  if we cannot find the contact.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Test\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0711223344\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"test@user.com\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# new contact\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003etest_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n        \u003cspan class=\"n\"\u003econtact_exists\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_exist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0711223344\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_exists\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCreated a test case to test the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_exist\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod that takes in a phone number. We then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eassertTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod provided by the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eTestCase\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eclass to check if the return value is\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eRun the test and confirm it fails then. Let us write the code to pass the test\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e    \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003econtact_exist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Method that checks if a contact exists from the contact list.\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Args:\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            number: Phone number to search if it exists\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Returns :\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e            Boolean: True or false depending if the contact exists\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ephone_number\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\r\n\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we created the class method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_exist\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat loops through all the saved contacts and checks if any matches the number passed in. Then it returns a boolean value.\u003c/p\u003e\r\n\u003ch3\u003eDisplay all contacts\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact_test.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_display_all_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        method that returns a list of all contacts saved\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a test case that test to check if we receive the list of the saved contacts. Run the test and confirm that it fails. Now lets create the code to make the test pass.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003econtact.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e    @classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        method that returns the contact list\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_list\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create another class method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edisplay_contacts\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat returns the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_list\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elist.\u003c/p\u003e\r\n\u003ch2\u003ePyperclip module\u003c/h2\u003e\r\n\u003cp\u003eThe next feature we would like to implement, is that we would like to copy a contacts email address. We will copy that number to the machine's clipboard and paste it wherever we want.\u003c/p\u003e\r\n\u003cp\u003eWe will use a third party module called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003epyperclip\u003c/strong\u003e. Pyperclip will allow us to copy and paste items to our clipboard.\u003c/p\u003e\r\n\u003cp\u003eWe first need to install it. Remember we use a tool called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003epip\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat installs third party modules from the\u003cspan\u003e \u003c/span\u003e\u003cem\u003epython package index\u003c/em\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 -m pip install pyperclip\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe command illustrates how to download a third party module.\u003c/p\u003e\r\n\u003cp\u003eLet us write a test for this behavior\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003epyperclip\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e...............\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_copy_email\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        Test to confirm that we are copying the email address from a found contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e        '''\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecopy_email\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"0712345678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003epyperclip\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epaste\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst at the top of our test module we import our new pyperclip module.\u003c/p\u003e\r\n\u003cp\u003eIn the test method we first confirm that the contact exists then we call on the class method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact.copy_email()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the contact number.\u003c/p\u003e\r\n\u003ch4\u003epyperclip.paste()\u003c/h4\u003e\r\n\u003cp\u003eIn our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eassertEqual\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod we use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epyperclip.paste()\u003c/code\u003e, and compare it with the contact object email.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003epyperclip.paste()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod returns whatever is copied on the machine's clipboard at that time.\u003c/p\u003e\r\n\u003cp\u003eRun the test to confirm that it fails.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003epyperclip\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e......................\u003c/span\u003e\r\n\r\n\u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecopy_email\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003econtact_found\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_by_number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n        \u003cspan class=\"n\"\u003epyperclip\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecopy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_found\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we first import pyperclip at the top of the document.\u003c/p\u003e\r\n\u003cp\u003eThen we get the email of the contact by first getting the contact object by using our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efind_by_number\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod. We then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epyperclip.copy()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand pass in the contact email address.\u003c/p\u003e\r\n\u003ch4\u003epyperclip.copy()\u003c/h4\u003e\r\n\u003cp\u003e\u003ccode\u003epyperclip.copy()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod allows us to copy passed in items to the machines clipboard\u003c/p\u003e\r\n\u003cp\u003eWe use it here to copy the email to the clipboard.\u003c/p\u003e\r\n\u003ch2\u003eContact-list\u003c/h2\u003e\r\n\u003cp\u003eNow let us implement the class we created to develop our contact-list application.\u003c/p\u003e\r\n\u003cp\u003eCreate a new file in the Contact-List Folder and name it\u003cspan\u003e \u003c/span\u003e\u003cem\u003erun.py\u003c/em\u003e.\u003c/p\u003e\r\n\u003ch3\u003e#! shebang\u003c/h3\u003e\r\n\u003cp\u003eThe shebang line in any script determines the script's ability to be executed like an standalone executable without typing python3.6 beforehand in the terminal. It is always the first line in any runnable python script.\u003c/p\u003e\r\n\u003cp\u003eIt also helps anyone looking at your application to know what version of python the application uses.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003erun.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"ch\"\u003e#!/usr/bin/env python3.6\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe shebang starts with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e#!\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand points to the python Interpreter the application is using.\u003c/p\u003e\r\n\u003cp\u003eTo make the program now executable we go to the terminal\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ chmod +x run.py\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow we can open the program with\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ ./run.py\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eIn our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erun.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewe want to implement the features we have just have been testing.\u003c/p\u003e\r\n\u003cp\u003eAfter our shebang line let us import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003econtact\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eOnce we import the contact class let's now create functions that implement the behaviours we have just created.\u003c/p\u003e\r\n\u003ch4\u003e1. Creating a Contact\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efname\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elname\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ephone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function to create a new contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efname\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elname\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ephone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003enew_contact\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we create a function called\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_contact()\u003c/code\u003e, that takes in four arguments. We then create a new contact object and return it.\u003c/p\u003e\r\n\u003ch4\u003e2. Save contacts\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esave_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function to save contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_contacts\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in a contact object and then calls the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esave_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod to save the contact.\u003c/p\u003e\r\n\u003ch4\u003e3. Delete contact\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edel_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function to delete a contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003econtact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edel_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction that takes in a contact object and then calls the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edelete_contact()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emethod on the contact object deleting it from the contact list.\u003c/p\u003e\r\n\u003ch4\u003e4. Finding a contact\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efind_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that finds a contact by number and returns the contact\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_by_number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a function\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efind_contact\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat takes in a number and calls the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eContact\u003c/code\u003eclass method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efind_by_number\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ethat returns the contact.\u003c/p\u003e\r\n\u003ch4\u003e5. Check if a contact exists\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003echeck_existing_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that check if a contact exists with that number and return a Boolean\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtact_exist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe function\u003cspan\u003e \u003c/span\u003e\u003ccode\u003echeck_existing_contacts\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etakes in a number as an argument and calls the class method\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econtact_exist\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewhich returns a boolean.\u003c/p\u003e\r\n\u003ch4\u003e6. Displaying all contacts\u003c/h4\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"sd\"\u003e'''\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    Function that returns all the saved contacts\u003c/span\u003e\r\n\u003cspan class=\"sd\"\u003e    '''\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eContact\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eTask\u003c/h3\u003e\r\n\u003cp\u003eCreate a function that handles the behavior of copy the email to the clipboard for the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecopy_email\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass method\u003c/p\u003e\r\n\u003ch3\u003eMain function\u003c/h3\u003e\r\n\u003cp\u003eWe have defined the functions that implement the behaviors. Now let us call them.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Hello Welcome to your contact list. What is your name?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"n\"\u003euser_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Hello {user_name}. what would you like to do?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n            \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Use these short codes : cc - create a new contact, dc - display contacts, fc -find a contact, ex -exit the contact list \"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                    \u003cspan class=\"n\"\u003eshort_code\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elower\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n                    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eshort_code\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'cc'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"New Contact\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"-\"\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"First name ....\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"n\"\u003ef_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Last name ...\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"n\"\u003el_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Phone number ...\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"n\"\u003ep_number\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Email address ...\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"n\"\u003ee_address\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\r\n                            \u003cspan class=\"n\"\u003esave_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003el_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ep_number\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ee_address\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"c1\"\u003e# create and save new contact.\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"New Contact {f_name} {l_name} created\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eshort_code\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'dc'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Here is a list of all your contacts\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                                    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003econtact\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003edisplay_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n                                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"{contact.first_name} {contact.last_name} .....{contact.phone_number}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You dont seem to have any contacts saved yet\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eshort_code\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'fc'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Enter the number you want to search for\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                            \u003cspan class=\"n\"\u003esearch_number\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003echeck_existing_contacts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_number\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n                                    \u003cspan class=\"n\"\u003esearch_contact\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_contact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esearch_number\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"{search_contact.first_name} {search_contact.last_name}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'-'\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Phone number.......{search_contact.phone_number}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Email address.......{search_contact.email}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                                    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"That contact does not exist\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n                    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eshort_code\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"ex\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Bye .......\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\r\n                    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n                            \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I really didn't get that. Please use the short codes\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we created a main function that calls all the other function. It has a while loop, where we offered users a shortcut of commands, they could use in our application.\u003c/p\u003e\r\n\u003cp\u003eWe then prompt the user for input which we transform to\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003elowercase\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand strip any extra spaces.\u003c/p\u003e\r\n\u003cp\u003eWe then use a series of\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e-\u003ccode\u003eelif\u003c/code\u003e-\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatements to check user input and call the functions we have just defined depending on the user's choice.\u003c/p\u003e\r\n\u003ch3\u003eTask\u003c/h3\u003e\r\n\u003cp\u003eWith your pair implement the remaining behaviors : 1. Deleting a contact. 2. Copying a contact email.\u003c/p\u003e\r\n\u003ch3\u003eCalling the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emain\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction\u003c/h3\u003e\r\n\u003cp\u003eNow we want the main function to run only if it was run from this module. To do this we use at the bottom of our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003erun.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n\r\n    \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow we can run our script using\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e./run.py\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand interact with our program from the command line.\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"thursday-deploying-to-heroku-2","title":"Thursday:  Deploying to Heroku","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eDeploy Database apps to Heroku\u003c/h2\u003e\r\n\u003ch3\u003eDeploy Configuration Variables\u003c/h3\u003e\r\n\u003cp\u003eWe need to now configure our Heroku server for deployment.We have made a lot of changes since we last deployed. First we need to set configuration variables for our email username and password.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku config:set \u003cspan class=\"nv\"\u003eMAIL_USERNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;YOUR EMAIL ADDRESS\u0026gt;\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku config:set \u003cspan class=\"nv\"\u003eMAIL_PASSWORD\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;YOUR EMAIL PASSWORD\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eSet up Postgres on Heroku\u003c/h3\u003e\r\n\u003cp\u003eNext we want to set up a Postgres database on our Heroku server.\u003c/p\u003e\r\n\u003cpre\u003e\u003ccode\u003eheroku addons:create heroku-postgresql\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003cp\u003eThis database's URI will be stored in Heroku in the configuration variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDATABASE_URL\u003c/code\u003e. We then need to define this new Database URI inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003econfig.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003econfig.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProdConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eSQLALCHEMY_DATABASE_URI\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"DATABASE_URL\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe update the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eProdConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass by placing the production\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eSQLALCHEMY_DATABASE_URI\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand setting it to the environment variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eDATABASE_URL\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe then need to update the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecreate_app\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction inside our\u003cspan\u003e \u003c/span\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile to access the new database URI.\u003c/p\u003e\r\n\u003ch3\u003eUpdating application for production\u003c/h3\u003e\r\n\u003cp\u003e\u003cstrong\u003emanage.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e..........\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'production'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e..........\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eproduction\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eoption from our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003econfig_options\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edictionary. This will change our app's configurations to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eProdConfig\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003eNext we need to update our requirements.txt file to pick the new extensions and modules we have used.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ pip freeze \u0026gt; requirements.txt\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRemember to remove the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003epkg-resources==0.0.0\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eline to prevent throwing an error when deploying.\u003c/p\u003e\r\n\u003ch3\u003ePushing To Heroku\u003c/h3\u003e\r\n\u003cp\u003eWe can now add and commit our changes and push the application to Heroku.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ git push heroku master\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe now need to define our database schema on our Heroku database.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ heroku run python3.6 manage.py db upgrade\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis will create a database schema on Heroku. We can now visit the website to make sure everything works.\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2017 Moringa School.\u003c/p\u003e","frontPage":false},{"exportId":"monday-user-model","title":"Monday: User Model","type":"WikiPage","content":"\u003ch2\u003eCreating The User model.\u003c/h2\u003e\r\n\u003cp\u003eModels are a way of abstracting and giving a common interface to data. We can now start creating a model to define our user data.\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emodels.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e#...\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003e__tablename__\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'users'\u003c/span\u003e\r\n    \u003cspan class=\"nb\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eprimary_key\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColumn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\r\n\r\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__repr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"s1\"\u003e'User {self.username}'\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass that will help us create new users. We pass in\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.Model\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eas an argument. This will connect our class to our database and allow communication.\u003c/p\u003e\r\n\u003cp\u003e\u003ccode\u003e__tablename__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003evariable allows us to give the tables in our database proper names. If not used SQLAlchemy will assume that the tablename is the lowercase of the class name.\u003c/p\u003e\r\n\u003cp\u003eSince a single user will represent a row in our table. We create columns using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.Column\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass which will represent a single column. We pass in the type of the data to be stored as the first argument.\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.Integer\u003c/code\u003e\u003cspan\u003e \u003c/span\u003especifies the data in that column should be an Integer. Every row must have a primary key set to it. By default the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eColumn\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass has\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprimary_key\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eset to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e. We want to set it to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eon the id column to set it as the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprimary_key\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecolumn.\u003c/p\u003e\r\n\u003cp\u003eThe\u003ccode\u003edb.String\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass specifies the data in that column should be a string with a maximum of 255 characters.\u003c/p\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e__repr__\u003c/code\u003emethod is not really important. It makes it easier to debug our applications.\u003c/p\u003e\r\n\u003ch3\u003eFlask-script shell\u003c/h3\u003e\r\n\u003cp\u003eFlask script allows us to create a Python shell inside our application. It will be useful to test features in our app and for debugging. We create this shell inside the _manage.py_ script\u003c/p\u003e\r\n\u003cp\u003e\u003cem\u003emanage.py\u003c/em\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_app\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# .....\u003c/span\u003e\r\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\r\n\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe first import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance from the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp/__init__\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efile. We then import the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003eclass from the\u003cspan\u003e \u003c/span\u003e\u003cem\u003eapp/models.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#....\u003c/span\u003e\r\n\u003cspan class=\"nd\"\u003e@manager.shell\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emake_shell_context\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003edict\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003edb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e'__main__'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"n\"\u003emanager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e@manage.shell\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edecorator to create a shell context and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003emake_shell_context\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction allows us to pass in some properties into our shell. We return the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eapp\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eapplication instance,\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb\u003c/code\u003e\u003cspan\u003e \u003c/span\u003edatabase instance and the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eclass.\u003c/p\u003e\r\n\u003cp\u003eWe can access the shell by running this command on the terminal:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003evirtual\u003cspan class=\"o\"\u003e)\u003c/span\u003e$ python3.6 manage.py shell\r\n\u0026gt;\u0026gt;\u0026gt; db\r\n\u0026lt;SQLAlchemy \u003cspan class=\"nv\"\u003eengine\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003epostgresql+psycopg2://james:***@localhost/watchlist\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe can confirm that our items have been passed into the shell by just typing them in and pressing enter. When we type\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ewe get the database URI.\u003c/p\u003e\r\n\u003ch3\u003eCreating and Destroying Tables\u003c/h3\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.create_all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eFirst we need to create the table in our database. We run the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003edb.create_all\u003c/code\u003ecommand to create tables and columns in our database.\u003c/p\u003e\r\n\u003cp\u003eUnfortunately SQLAlchemy does not have a way to automatically update when we have changed the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eschema\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eof our database. We have to drop everything and start again. To do this we run the command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.drop_all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch3\u003eCRUD using SQLAlchemy\u003c/h3\u003e\r\n\u003cp\u003eEvery database follows the CRUD principles. 1. Create 2. Read 3. Update 4. Delete\u003c/p\u003e\r\n\u003ch4\u003e1) Create\u003c/h4\u003e\r\n\u003cp\u003eWe can now create users and insert them into our database. But first, we need to create the table in our database again since we dropped it.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.create_all()\u003cbr\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_james\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'James'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_christine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Christine'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe define two user models now we are ready to save them to our database. Notice we do not pass in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eparameter. This is because this is a\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eprimary_key\u003c/code\u003evalue that will auto increment as we keep adding users.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.session.add\u003cspan class=\"o\"\u003e(\u003c/span\u003euser_james\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.add\u003cspan class=\"o\"\u003e(\u003c/span\u003euser_christine\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSQLAlchemy uses sessions as a storage location for our database changes. They mark changes as ready for saving and committing.\u003c/p\u003e\r\n\u003cp\u003eWe then need to commit the data and save the changes to our database\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; db.session.commit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the session commit method to save our changes to the database. We can confirm all the changes have been saved when we go to the PostgreSQL server\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e#watchlist \u003cbr\u003eselect * from users;\u003c/span\u003e\r\n id \u003cspan class=\"p\"\u003e|\u003c/span\u003e username  \r\n----+----------\r\n\u003cspan class=\"m\"\u003e1\u003c/span\u003e   \u003cspan class=\"p\"\u003e|\u003c/span\u003e  James\r\n\u003cspan class=\"m\"\u003e2\u003c/span\u003e   \u003cspan class=\"p\"\u003e|\u003c/span\u003e  Christine\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAdding users one at a time to our sessions can be tedious. Luckily there is an easier way to do it.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_lisa\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'lisa'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser_victor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'victor'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.add_all\u003cspan class=\"o\"\u003e([\u003c/span\u003euser_lisa,user_victor\u003cspan class=\"o\"\u003e])\u003cbr\u003e\u0026gt;\u0026gt;\u0026gt; db.session.commit()\u003cbr\u003e\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e2) Read\u003c/h4\u003e\r\n\u003cp\u003eWe can now start querying our database to retrieve saved data.\u003c/p\u003e\r\n\u003ch5\u003ea) all() query.\u003c/h5\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eall()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003equery function to get all the items in the model.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003eusers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; users\r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eUser James, User Christine, User lisa, User victor\u003cspan class=\"o\"\u003e]\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe \u003ccode\u003e.all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\u003c/code\u003e function returns a list of all the entries listed with that model.\u003c/p\u003e\r\n\u003ch5\u003eb) first query.\u003c/h5\u003e\r\n\u003cp\u003eWe can also get the a single entry from our model.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003esingle_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.first\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; single_user\r\nUser James\r\n\u0026gt;\u0026gt;\u0026gt; \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efirst()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003equery function to get the first entry of our model.\u003c/p\u003e\r\n\u003ch5\u003ec) filter_by query\u003c/h5\u003e\r\n\u003cp\u003eWe can also filter out data we are receiving using the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efilter_by\u003c/code\u003e\u003cspan\u003e \u003c/span\u003equery function.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.filter_by\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e'James'\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e.first\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; user\r\nUser James\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe pass in what we want to filter as an argument then we can choose whether to get all the items or just the first item.\u003c/p\u003e\r\n\u003ch5\u003ed) filter query\u003c/h5\u003e\r\n\u003cp\u003eThis is used as an alternative to the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003efilter_by\u003c/code\u003e\u003cspan\u003e \u003c/span\u003equery.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003eusers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.filter\u003cspan class=\"o\"\u003e(\u003c/span\u003eUser.id \u0026gt; \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e.all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; users\r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eUser Christine, User lisa, User victor\u003cspan class=\"o\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNotice how the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eUser James\u003c/code\u003e\u003cspan\u003e \u003c/span\u003einstance is not displayed. This is because we started filtering our data from ids' that are greater than one.\u003c/p\u003e\r\n\u003ch5\u003ee) limit query\u003c/h5\u003e\r\n\u003cp\u003eWe can also limit the amount of responses we get.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e \u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003eusers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.limit\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e.all\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; users\r\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eUser James, User Christine\u003cspan class=\"o\"\u003e]\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the limit query and pass in how many queries we need.\u003c/p\u003e\r\n\u003ch4\u003e3) Update\u003c/h4\u003e\r\n\u003cp\u003eWe can also use SQLAlchemy to update entries from our database.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003esingle_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.filter_by\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e.update\u003cspan class=\"o\"\u003e({\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"username\"\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\"James Muriuki\"\u003c/span\u003e\u003cspan class=\"o\"\u003e})\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.commit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we filter a query by getting the entry with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eof 1 and we call in the update function. We then pass in the property we want to update with the new value.\u003c/p\u003e\r\n\u003cp\u003eFinally we have to commit any changes we have in our database. We can confirm that the entry has been changed from the PostgreSQL server.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# select * from users;\u003c/span\u003e\r\n id \u003cspan class=\"p\"\u003e|\u003c/span\u003e   username    \r\n----+---------------\r\n  \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e Christine\r\n  \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e lisa\r\n  \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e victor\r\n  \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e James Muriuki\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e4\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e4) Delete\u003c/h4\u003e\r\n\u003cp\u003eWe can also remove entries from the database.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"nv\"\u003esingle_user\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e User.query.filter_by\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e.first\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; single_user\r\nUser James Muriuki\r\n\u0026gt;\u0026gt;\u0026gt; db.session.delete\u003cspan class=\"o\"\u003e(\u003c/span\u003esingle_user\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; db.session.commit\u003cspan class=\"o\"\u003e()\u003c/span\u003e\r\n\u0026gt;\u0026gt;\u0026gt; \r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe use the session delete function that we pass in the entry to delete. We finally commit the changes to the database. We can confirm that the entry has been removed from the PostgreSQL server.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003ewatchlist\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"c1\"\u003e# select * from users;\u003c/span\u003e\r\n id \u003cspan class=\"p\"\u003e|\u003c/span\u003e username  \r\n----+-----------\r\n  \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e Christine\r\n  \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e lisa\r\n  \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e victor\r\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e rows\u003cspan class=\"o\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eYou can find our application at this point from here https://github.com/mbuthiya/watchlist/tree/18-creating-first-model\u003c/p\u003e","frontPage":false},{"exportId":"weekend-introduction-to-databases-database-relationships","title":"Weekend: Introduction to Databases; Database Relationships","type":"WikiPage","content":"\u003ch2\u003eIntroduction To Databases\u003c/h2\u003e\r\n\u003cp\u003eSo far our applications have been storing data inside the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eRAM\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eRandom access memory of our computers. This is quick and easy but also temporary because every time we restart the application the data has disappeared.\u003c/p\u003e\r\n\u003cp\u003eThis week we will learn how to persist our data inside databases, create a database, insert and query data from it. We will also learn about a handy tool called\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eSQLAlchemy\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ethat allows us to interact with our database at a higher level.\u003c/p\u003e\r\n\u003cp\u003eThere are many types of databases. But most fall under 2 categories\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eSQL\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e- Structured Query Language databases and\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eNoSQL\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e-Non Structured Query Language databases.\u003c/p\u003e\r\n\u003ch3\u003eTask\u003c/h3\u003e\r\n\u003cp\u003eGo online and do research on these different kinds of databases. 1. Get the definition of both. 2. How they are structured. 3. The different types of databases for each category. 4. The Benefits of using each. 5. Disadvantages of using each.\u003c/p\u003e\r\n\u003cp\u003eYou will present what you have learned the following day during stand up.\u003c/p\u003e\r\n\u003ch2\u003ePostgres\u003c/h2\u003e\r\n\u003cp\u003eWe will be using\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ePostgreSQL\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003edatabase for our application. This is a type of SQL database.\u003c/p\u003e\r\n\u003cp\u003eSQL Databases store data in tables which are different items in an application. Tables have a fixed number of columns and a variable number of rows.\u003c/p\u003e\r\n\u003cp\u003eThey have a special column called a primary key which is a unique identifier for each row stored in the table.\u003c/p\u003e\r\n\u003cp\u003eThey might also have foreign keys which are a reference to the primary key of another table. This defines the relationship between those two tables.\u003c/p\u003e\r\n\u003ch3\u003eInstallation\u003c/h3\u003e\r\n\u003ch4\u003e1. Ubuntu\u003c/h4\u003e\r\n\u003cp\u003eTo Install Postgres on Ubuntu we need to run the following commands in our terminal.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo apt-get update\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo install Postgres\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo apt-get install postgresql postgresql-contrib libpq-dev\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eEnter\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ey\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003ewhen prompted “Do you want to continue?\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003e[Y/n]\u003c/strong\u003e” and wait as the installation completes.\u003c/p\u003e\r\n\u003ch4\u003eDefining a user role\u003c/h4\u003e\r\n\u003cp\u003ePostgres uses \"roles\" to aid in authentication and authorization. By default, Postgres creates a Postgres user and is the only user who can connect to the server.\u003c/p\u003e\r\n\u003cp\u003eWe want to create our own superuser role to connect to the server. \u003c/p\u003e\r\n\u003cp\u003eFor those running on elementary or parrot, run the following command first; \u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo service postgresql start\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003cbr\u003e\u003c/span\u003e\u003ccode\u003e$ sudo -u postgres createuser --superuser \u003cspan class=\"nv\"\u003e$USER\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eEnter your desired password when prompted.\u003c/p\u003e\r\n\u003cp\u003eWe then have to create a database with that\u003cspan\u003e \u003c/span\u003e\u003ccode\u003e$USER\u003c/code\u003e\u003cspan\u003e \u003c/span\u003elogin name, this is what Postgres expects as default.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ sudo -u postgres createdb \u003cspan class=\"nv\"\u003e$USER\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNavigate to your home directory and enter the following command to create the .psql_history in order to save your history:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ touch .psql_history\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eYou can now connect to the postgres server by typing :\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ psql\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch4\u003e2. Mac\u003c/h4\u003e\r\n\u003cp\u003eHomebrew makes it really easy to install Postgres. Just run:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e $ brew install postgres\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAfter it finishes installing, you'll need to configure your computer a bit. First, you need to tell Postgres where to find the database cluster where your databases will be stored:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e $ \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"export PGDATA=/usr/local/var/postgres\"\u003c/span\u003e \u0026gt;\u0026gt; ~/.bash_profile\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis command will help some programs find Postgres more easily:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"export PGHOST=/tmp\"\u003c/span\u003e \u0026gt;\u0026gt; ~/.bash_profile\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo load these configuration changes, run:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ \u003cspan class=\"nb\"\u003esource\u003c/span\u003e ~/.bash_profile\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo start the Postgres server, simply run:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ postgres\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eYou'll have to leave that window open while you need the server. To stop the server, press Ctrl + C (_not_ Cmd + C). If you want Postgres to boot at startup and run in the background, run:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e $ ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAnd to start it now (since it won't boot automatically until you restart your computer), run:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ pg_ctl start\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo prepare for the next lesson, create a default database with your computer's username:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ createdb \u003cspan class=\"nv\"\u003e$USER\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAnd you're done.\u003c/p\u003e\r\n\u003ch2\u003eDatabase Relationships\u003c/h2\u003e\r\n\u003cp\u003eDatabases are like linked spreadsheets. Each spreadsheet being like single\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003etable\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003eShopping list\r\n------------------\r\n\r\n id |    item         | quantity\r\n ---+-----------------+------------\r\n 1  |  milk(packets)  | 7\r\n 2  |  shoe polish    | 4\r\n 3  | jewelry         | 5\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere is an example of a table displaying a shopping list.\u003c/p\u003e\r\n\u003ch3\u003eOne to many Relationships\u003c/h3\u003e\r\n\u003cp\u003eLet us assume we are running a school and want to manage the students and what courses they were taking. We would create two tables to hold the data for the courses and for the students\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003ecourses\r\n---------\r\n id |    course     \r\n ---+-----------------\r\n 1  |  Advanced Mathematics \r\n 2  |  Literature    \r\n 3  |  Visual art\r\n 4  |  Computer Science\r\n\r\n students\r\n ---------\r\n  id |    student        | course_id\r\n ---+--------------------+-----\r\n 1  |  James Muriuki     | 2\r\n 2  |  Christine Wasike  | 1\r\n 3  |  Moses Okemwa      | 3\r\n 4  |  Audrey Cheng      | 1\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe course_id in the students table references the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eid\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ecolumn in the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecourse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etable. Since a single course can be taken by multiple students we say the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ecourse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etable has a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eone-to-many\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003erelationship with the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estudent\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etable.\u003c/p\u003e\r\n\u003ch3\u003eMany to Many Relationships\u003c/h3\u003e\r\n\u003cp\u003eIt is very rare to find a school where all the students take on one course. Let us enable our students to take more than one course.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003ecourses\r\n---------\r\n id |    course     \r\n ---+-----------------\r\n 1  |  Advanced Mathematics \r\n 2  |  Literature    \r\n 3  |  Visual art\r\n 4  |  Computer Science\r\n\r\n students\r\n ---------\r\n id |    student        | course_id\r\n ---+--------------------+-----\r\n 1  |  James Muriuki     | 2\r\n 2  |  Christine Wasike  | 1\r\n 3  |  Moses Okemwa      | 3\r\n 4  |  Audrey Cheng      | 1\r\n 5  |  Moses Okemwa      | 2\r\n 6  |  Audrey Cheng      | 3\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we added more entries to our\u003cspan\u003e \u003c/span\u003e\u003ccode\u003estudents\u003c/code\u003e\u003cspan\u003e \u003c/span\u003etable to allow the students to take on more courses. This is\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eNOT\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eadvisable because we do not want duplicate entries inside our tables.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003ecourses\r\n---------\r\n id |    course     \r\n ---+-----------------\r\n 1  |  Advanced Mathematics \r\n 2  |  Literature    \r\n 3  |  Visual art\r\n 4  |  Computer Science\r\n\r\n students\r\n ---------\r\n  id |    student        \r\n ---+--------------------\r\n 1  |  James Muriuki    \r\n 2  |  Christine Wasike \r\n 3  |  Moses Okemwa     \r\n 4  |  Audrey Cheng     \r\n\r\n\r\n enrollments\r\n ----------------\r\n   id | student_id | course_id\r\n ---+--------------+-----\r\n 1  |      1       | 2\r\n 2  |      2       | 1\r\n 3  |      3       | 3\r\n 4  |      4       | 1\r\n 5  |      3       | 2\r\n 6  |      4       | 3\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe Instead create a new table called a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ejoin\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003etable. This table will reference the Items on the other table using the\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eid\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eattribute. When naming joining tables it is advisable to name them using the names of the tables that are being joined separated by underscores. If there is another name that could accurately describe the table it can be used instead.\u003c/p\u003e","frontPage":false},{"exportId":"weekend-input-sys-dot-argv-and-control-flow","title":"Weekend: Input, sys.argv and Control Flow","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003ePython Variables\u003c/h2\u003e\r\n\u003cp\u003eVariables are named references to \u003cstrong\u003eobjects\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eHere is an example of how we create a variable in Python in the Python shell:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe create variables by using the assignment operator \u003ccode\u003e=\u003c/code\u003e . Variables do not store any value, but point to where the value is created in the computer's memory.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/ygY7Chc.jpg\" alt=\"Variable referencing\"\u003e\u003c/p\u003e\r\n\u003cp\u003eWhen we equate two variables we are referencing the variables to the same value.\u003c/p\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/zb1EfxK.jpg\" alt=\"double variable referencing\"\u003e\u003c/p\u003e\r\n\u003cp\u003ePython variables can store values from any data type. Since Python is dynamic in nature we do not have to specify what type of data we are storing.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Hello\"\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eHello\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003epie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.1423\u003c/span\u003e\r\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003epie\u003c/span\u003e\r\n\u003cspan class=\"mf\"\u003e3.1423\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003ch2\u003ePython Modules\u003c/h2\u003e\r\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/LxjZpFD.jpg\" alt=\"Python Modules\"\u003e\u003c/p\u003e\r\n\u003cp\u003eA Python module is a single executable (can be run or launched) Python file.It contains code to do a particular task and has a \u003ccode\u003e.py\u003c/code\u003e extension.\u003c/p\u003e\r\n\u003cp\u003eLet us create this on our desktops. Create a folder and name it \u003cem\u003eMS-Python-Pre-work\u003c/em\u003e. Create a new file and name it \u003cem\u003emodule_test.py\u003c/em\u003e. Open Atom and type in the following:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003emodule_test.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003egreeting\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Hello\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eschool\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Moringa\"\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egreeting\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eschool\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eTo execute this code, navigate to the project folder in the console (where \u003cem\u003emodule_test.py\u003c/em\u003e is located) and run the following command:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 module_test.py\r\nHello, Moringa!\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe type in \u003ccode\u003epython3.6\u003c/code\u003e then the name of the file \u003ccode\u003emodule_test.py\u003c/code\u003e. The code is immediately executed and we get our output as \u003ccode\u003eHello, Moringa!\u003c/code\u003e\u003c/p\u003e\r\n\u003cp\u003eA Python program is a collection of modules that are linked to perform a particular function.\u003c/p\u003e\r\n\u003ch2\u003eImport\u003c/h2\u003e\r\n\u003cp\u003ePython comes with a lot of pre-written code in for of \u003cstrong\u003emodules\u003c/strong\u003e and \u003cstrong\u003epackages\u003c/strong\u003e.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eA module is a single Python file that contains code to do a particular task.\u003c/li\u003e\r\n\u003cli\u003eA package is made up of one or more modules that are joined to perform a particular task.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003eModules and packages belong to Python's standard library. They extend Python's functionality, and it is important to learn how to use them.\u003c/p\u003e\r\n\u003cp\u003eTo use these packages or modules we use the \u003ccode\u003eimport\u003c/code\u003e keyword. Let us create a new Python file and name it \u003cem\u003eexample.py\u003c/em\u003e.\u003c/p\u003e\r\n\u003cp\u003eAdd the following line to the file:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ethis\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let's run the file from the terminal:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eAnd this will print to the console:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003eZen\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003ePython\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eby\u003c/span\u003e \u003cspan class=\"n\"\u003eTim\u003c/span\u003e \u003cspan class=\"n\"\u003ePeters\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003eBeautiful\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003eugly\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eExplicit\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003eimplicit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSimple\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"nb\"\u003ecomplex\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eComplex\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003ecomplicated\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eFlat\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003enested\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSparse\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003edense\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eReadability\u003c/span\u003e \u003cspan class=\"n\"\u003ecounts\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eSpecial\u003c/span\u003e \u003cspan class=\"n\"\u003ecases\u003c/span\u003e \u003cspan class=\"n\"\u003earen\u003c/span\u003e\u003cspan class=\"s1\"\u003e't special enough to break the rules.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003epracticality\u003c/span\u003e \u003cspan class=\"n\"\u003ebeats\u003c/span\u003e \u003cspan class=\"n\"\u003epurity\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eErrors\u003c/span\u003e \u003cspan class=\"n\"\u003eshould\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e \u003cspan class=\"k\"\u003epass\u003c/span\u003e \u003cspan class=\"n\"\u003esilently\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eUnless\u003c/span\u003e \u003cspan class=\"n\"\u003eexplicitly\u003c/span\u003e \u003cspan class=\"n\"\u003esilenced\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eface\u003c/span\u003e \u003cspan class=\"n\"\u003eof\u003c/span\u003e \u003cspan class=\"n\"\u003eambiguity\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erefuse\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003etemptation\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eguess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eThere\u003c/span\u003e \u003cspan class=\"n\"\u003eshould\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003epreferably\u003c/span\u003e \u003cspan class=\"n\"\u003eonly\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003eobvious\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003edo\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003ethat\u003c/span\u003e \u003cspan class=\"n\"\u003eway\u003c/span\u003e \u003cspan class=\"n\"\u003emay\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003eobvious\u003c/span\u003e \u003cspan class=\"n\"\u003eat\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"n\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003eyou\u003c/span\u003e\u003cspan class=\"s1\"\u003e're Dutch.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eNow\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eAlthough\u003c/span\u003e \u003cspan class=\"n\"\u003enever\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eoften\u003c/span\u003e \u003cspan class=\"n\"\u003ebetter\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eright\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIf\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003ehard\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexplain\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"s1\"\u003e's a bad idea.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eIf\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eeasy\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eexplain\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"n\"\u003emay\u003c/span\u003e \u003cspan class=\"n\"\u003ebe\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003egood\u003c/span\u003e \u003cspan class=\"n\"\u003eidea\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eNamespaces\u003c/span\u003e \u003cspan class=\"n\"\u003eare\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"n\"\u003ehonking\u003c/span\u003e \u003cspan class=\"n\"\u003egreat\u003c/span\u003e \u003cspan class=\"n\"\u003eidea\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"n\"\u003elet\u003c/span\u003e\u003cspan class=\"s1\"\u003e's do more of those!\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis is known as the \u003ccode\u003eZen of Python\u003c/code\u003e. t doesn't do much, but it is a nice way to show you how to import modules.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003emath\u003c/code\u003e Module\u003c/h3\u003e\r\n\u003cp\u003eLet us look at a more useful module, named \u003ccode\u003emath\u003c/code\u003e. Replace the contents of \u003cem\u003eexample.py\u003c/em\u003e with the following code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003emath\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eceil\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eLet's run it:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e3\u003c/span\u003e.0\r\n\u003cspan class=\"m\"\u003e3\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere, we import the \u003ccode\u003emath\u003c/code\u003e module. The \u003ccode\u003emath\u003c/code\u003e module comes with a lot of built-in methods, and we've used a couple of them here: the \u003ccode\u003esqrt()\u003c/code\u003e method to find the square root of 9 (3.0), which we represent with the variable \u003ccode\u003ex\u003c/code\u003e; and the \u003ccode\u003eceil()\u003c/code\u003e method to round up \u003ccode\u003ex\u003c/code\u003e (3).\u003c/p\u003e\r\n\u003cp\u003eThe syntax to use when we use module methods is \u003ccode\u003emodule_name.method_name(arguments)\u003c/code\u003e, where \u003ccode\u003emodule_name\u003c/code\u003e is the name of the module (\u003ccode\u003emath\u003c/code\u003e in this case) and \u003ccode\u003emethod_name\u003c/code\u003e is the name of the method (we've used \u003ccode\u003esqrt()\u003c/code\u003e and \u003ccode\u003eciel()\u003c/code\u003e).\u003c/p\u003e\r\n\u003ch4\u003e\n\u003ccode\u003efrom\u003c/code\u003e Keyword\u003c/h4\u003e\r\n\u003cp\u003eYou can also import a module method directly using the keyword \u003ccode\u003efrom\u003c/code\u003e. Try this out in \u003cem\u003eexample.py\u003c/em\u003e:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003emath\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eceil\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eceil\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"mf\"\u003e3.0\u003c/span\u003e\r\n\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNotice here that the syntax changes: we were able to use \u003ccode\u003esqrt()\u003c/code\u003e and \u003ccode\u003eciel()\u003c/code\u003e without typing \u003ccode\u003emath\u003c/code\u003e first. When we use the \u003ccode\u003efrom\u003c/code\u003e keyword, we can use the method name directly without referencing the module.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003erandom\u003c/code\u003e Module\u003c/h3\u003e\r\n\u003cp\u003eLet us use another fun module called \u003cstrong\u003erandom\u003c/strong\u003e. Replace the contents of \u003cem\u003eexample.py\u003c/em\u003e with the following code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003eexample.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erandom\u003c/span\u003e\r\n\r\n\u003cspan class=\"c1\"\u003e# We can generate a random number using the randint method\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003erandom_number\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erandint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erandom_number\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere used the \u003ccode\u003eimport\u003c/code\u003e keyword, to get the random module. From the module we used its \u003ccode\u003erandint()\u003c/code\u003e method and passed in two parameters to define the range of values from which Python will choose a random number (in our example, 0 is the low end of the range and 10 is the high end). When we run the file, it returns a random number, from the range provided by the parameters.\u003c/p\u003e\r\n\u003cp\u003eNow let's run it a few times:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e4\u003c/span\u003e\r\n$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e0\u003c/span\u003e\r\n$ python3.6 example.py\r\n\u003cspan class=\"m\"\u003e7\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe output on your console may look different, but the thing to note here is that it's generating a different value each time we run \u003cem\u003eexample.py\u003c/em\u003e. We have the \u003ccode\u003erandom\u003c/code\u003e module to thank for that.\u003c/p\u003e\r\n\u003ch3\u003eInput Exercise\u003c/h3\u003e\r\n\u003ch4\u003eCircumference Calculation\u003c/h4\u003e\r\n\u003cp\u003eWrite a program that calculates the circumference of a wheel. The formula is C=2πr, where π is the value 3.14 and \u003ccode\u003er\u003c/code\u003e is the radius of the circle.\u003c/p\u003e\r\n\u003cp\u003eTo take this a step further, let the radius of the circle be a random integer generated by the \u003ccode\u003erandom\u003c/code\u003e module.\u003c/p\u003e\r\n\u003ch2\u003eInput and\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv\u003c/code\u003e\n\u003c/h2\u003e\r\n\u003cp\u003eIn our applications, we have basically been typing out values to everything in our code. Now let us explore a different way to obtain data into our application by configuring user input.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003einput()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einput()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction is called inside our Python application and prompts the user to pass in an input, which is stored as a string.\u003c/p\u003e\r\n\u003cp\u003eLet us create a new folder in our\u003cspan\u003e \u003c/span\u003e\u003cem\u003eMS-Python-Pre-work\u003c/em\u003e\u003cspan\u003e \u003c/span\u003edirectory called\u003cspan\u003e \u003c/span\u003e\u003cem\u003eInput\u003c/em\u003e, and create a new file\u003cspan\u003e \u003c/span\u003e\u003cem\u003einput_demo.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand type in this:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"What is your name?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"How old are you?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then run the file:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\n\u003cspan class=\"s2\"\u003e\"What is your name?\"\u003c/span\u003e\r\nJames\r\n\u003cspan class=\"s2\"\u003e\"How old are you?\"\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\r\nJames\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we are prompting the user for their name and age, and storing them in variables. Since\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis a number, we used the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eint()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efunction to convert it to an integer.\u003c/p\u003e\r\n\u003ch3\u003eUsing the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eModule\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule provides variables used or maintained by the interpreter. It has the list\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv\u003c/code\u003e, which contains the arguments passed into the command line when running the command to execute the program. Let's see how to use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto take input from the command line. Open up\u003cspan\u003e \u003c/span\u003e\u003cem\u003einput_demo.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eand replace the contents this code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003esys\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargv\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"How old are you?\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let's run the file:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py James\r\n\u003cspan class=\"s2\"\u003e\"How old are you?\"\u003c/span\u003e\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\r\nJames\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we have first imported the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys\u003c/code\u003e\u003cspan\u003e \u003c/span\u003emodule so that we could use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto store user input from the console and store it in a list. This is different from the previous example, where we used prompts along with\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einput()\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eto get the name of our user. Notice that we entered our name as the second argument of the command where we executed the program (the first argument was\u003cspan\u003e \u003c/span\u003e\u003ccode\u003einput_demo.py\u003c/code\u003e):\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py James\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSince\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ereturns a list, we used\u003cspan\u003e \u003c/span\u003e\u003ccode\u003esys.argv[1]\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ein\u003cspan\u003e \u003c/span\u003e\u003cem\u003einput_demo.py\u003c/em\u003e\u003cspan\u003e \u003c/span\u003eto retrieve this value - this simply tells our application to pick the argument at index 1 when our application is run and store it as variable\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ename\u003c/code\u003e.\u003c/p\u003e\r\n\u003cp\u003eWe can pass multiple arguments when we run our application:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003esys\u003c/span\u003e\r\n\r\n\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargv\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eargv\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWe then run the file with the necessary arguments:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py James \u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\nJames\r\n\u003cspan class=\"m\"\u003e19\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eHere we pick both the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003ename\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eage\u003c/code\u003e\u003cspan\u003e \u003c/span\u003efrom the command line arguments passed.\u003c/p\u003e\r\n\u003ch3\u003eInput and Type Casting Exercises\u003c/h3\u003e\r\n\u003ch4\u003eBirthday dates\u003c/h4\u003e\r\n\u003cp\u003eCreate a program where you prompt a user for their age and return the year they were born.\u003c/p\u003e\r\n\u003cp\u003eAfter that, return the year they will turn 80.\u003c/p\u003e\r\n\u003ch4\u003eTip Calculator\u003c/h4\u003e\r\n\u003cp\u003eCreate a program that lets the user input their total bill at a restaurant, and returns the total cost of the bill including a tip. Use 15% of the total bill as the tip calculation.\u003c/p\u003e\r\n\u003cp\u003eFor example, if the total bill is KSh 1000, the tip is 0.15 * 1000 = KSh 150, so the total cost of the bill returned to the user is 1000 + 150 = KSh 1150.\u003c/p\u003e\r\n\u003cp\u003eOnce you're finished, take this a step further and let the user enter their level of satisfaction with their service and factor that value into the tip percentage. For example, if they received good service, the tip is 15%; great service is 20%; terrible service is 0%.\u003c/p\u003e\r\n\u003ch2\u003eControl Flow\u003c/h2\u003e\r\n\u003cp\u003eUp to now our applications haven't been that interesting. Let us add some logic to our applications.\u003c/p\u003e\r\n\u003ch3\u003e\n\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatements\u003c/h3\u003e\r\n\u003cp\u003eAn\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement runs only when the condition passed to it evaluates to true. Let's experiment with this in\u003cspan\u003e \u003c/span\u003e\u003cem\u003einput_demo.py\u003c/em\u003e.\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_demo.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e74\u003c/span\u003e \u003cspan class=\"c1\"\u003e# The unit is inches\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e70\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really tall\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eRun the file in the console:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nYou are really tall\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSince\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eheight\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eis above 70, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement will be called and it will print out the statement. This syntax differs from other programming languages like JavaScript which use curly braces (\u003ccode\u003e{}\u003c/code\u003e\u003cspan\u003e \u003c/span\u003e)to hold blocks of code, such as this example:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e74\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e70\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\r\n  \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really tall\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003ePython uses\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eindents\u003c/strong\u003e. Indents are just four spaces we give to our application to define blocks of code. If we don't indent blocks of our code, we get an\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eIndentationError\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand our program won't run.\u003c/p\u003e\r\n\u003ch4\u003eComparison Operators\u003c/h4\u003e\r\n\u003cp\u003eLet us look at some of the comparison operators we will be using in Python\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003e\n\u003ccode\u003e\u0026gt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eGreater than\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003e\u0026lt;\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eLess than\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003e==\u003c/code\u003eEqual to\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003e!=\u003c/code\u003enot equal to\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003e\u0026gt;=\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eGreater than or equal to\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003e\u0026lt;=\u003c/code\u003eLess than or Equal to\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003eand\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eChecks if both conditions evaluate to true\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003eor\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eChecks if at least one condition is true\u003c/li\u003e\r\n\u003cli\u003e\n\u003ccode\u003enot\u003c/code\u003e\u003cspan\u003e \u003c/span\u003ereturns the opposite of the condition given\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003ccode\u003eelse\u003c/code\u003e\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement comes right at the end of the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement. It is run only when the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement evaluates to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e. Let's add an\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement to our example program:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_example.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e54\u003c/span\u003e \u003cspan class=\"c1\"\u003e# inches\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e70\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really tall\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really short\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow when we run the file, we get a different message:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nYou are really short\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThe height is not greater than 70 so the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement evaluates to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003eand the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement is called.\u003c/p\u003e\r\n\u003ch3\u003e\u003ccode\u003eelif\u003c/code\u003e\u003c/h3\u003e\r\n\u003cp\u003eWhat if we have more than one condition to check for? We can use\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelif\u003c/code\u003e, which will allow us to check for multiple conditions. Looking at our example:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e68\u003c/span\u003e \u003cspan class=\"c1\"\u003e# inches\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e70\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really tall\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e60\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are of average height\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"You are really short\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eNow let's run it:\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nYou are of average height\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eSince the height is greater than 60, the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement will be executed first and Python never reaches the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eelse\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement.\u003c/p\u003e\r\n\u003ch3\u003eChecking for nothing\u003c/h3\u003e\r\n\u003cp\u003eIn Python an empty value is automatically considered to be\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e. Consider this code:\u003c/p\u003e\r\n\u003cp\u003e\u003cstrong\u003einput_example.py\u003c/strong\u003e\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\"\u003c/span\u003e\r\n\u003cspan class=\"n\"\u003elist_a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\r\n\r\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elist_a\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n    \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I will not run\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\r\n        \u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"I am Empty\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eWhen we run this code, nothing prints to the console.\u003c/p\u003e\r\n\u003cdiv class=\"codehilite\"\u003e\r\n\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003ccode\u003e$ python3.6 input_demo.py\r\nI am Empty\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eThis is because the\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eif\u003c/code\u003e\u003cspan\u003e \u003c/span\u003estatement only runs if the output evaluates to be\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eTrue\u003c/code\u003e, and since our list is empty the condition evaluates to\u003cspan\u003e \u003c/span\u003e\u003ccode\u003eFalse\u003c/code\u003e\u003c/p\u003e\r\n\u003c/div\u003e","frontPage":false},{"exportId":"monday-python-week-1-objectives","title":"Monday: Python Week 1 Objectives","type":"WikiPage","content":"\u003ch2\u003eWorking with Python\u003c/h2\u003e\r\n\u003cp\u003eWorking through the Pre-course work, we have familiarized ourselves with basic Python concepts, and the Python syntax. We want to leverage on that knowledge to start creating really amazing applications.\u003c/p\u003e\r\n\u003cp\u003eThis week, we will consider the following:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eObject oriented programming with Python\u003c/li\u003e\r\n\u003cli\u003eUnit testing\u003c/li\u003e\r\n\u003cli\u003eMaking our projects executable\u003c/li\u003e\r\n\u003cli\u003eProject design\u003c/li\u003e\r\n\u003cli\u003eCreating and working with modules\u003c/li\u003e\r\n\u003cli\u003eFile and resource management\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eFeature Project: Contact-list App\u003c/h3\u003e\r\n\u003cp\u003eWe will learn how to implement most of these concepts by building a feature project. The Project we will be building will be a\u003cspan\u003e \u003c/span\u003e\u003cem\u003eContact list application\u003c/em\u003e. The application will:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eAllow us to Create new contacts with properties.\u003c/li\u003e\r\n\u003cli\u003eSave contacts.\u003c/li\u003e\r\n\u003cli\u003eDisplay contacts.\u003c/li\u003e\r\n\u003cli\u003eDelete contacts.\u003c/li\u003e\r\n\u003cli\u003eDisplay contact information.\u003c/li\u003e\r\n\u003cli\u003eCategorize contacts to favorite contacts.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eIndependent Project Objectives \u003c/h3\u003e\r\n\u003cp\u003eAt the end of the week, your project will be reviewed based on the following objectives:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eDoes your project have two classes?\u003c/li\u003e\r\n\u003cli\u003eYour project must have a way to authenticate users.\u003c/li\u003e\r\n\u003cli\u003eHave docstrings to document your methods and functions.\u003c/li\u003e\r\n\u003cli\u003eYour project must have a test class \u003c/li\u003e\r\n\u003cli\u003eThe project must have a well-documented README file which contains well-outlined application behaviours.\u003c/li\u003e\r\n\u003cli\u003eWell laid out commit messages.\u003c/li\u003e\r\n\u003c/ol\u003e","frontPage":false},{"exportId":"monday-project-week-objectives","title":"Monday: Project Week Objectives","type":"WikiPage","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003eIntroduction\u003c/h2\u003e\r\n\u003cp\u003eThe past few weeks we have learnt a lot. We have learnt on: 1. Proper application structure. 2. Creating a virtual environment. 3. Working with views and templates. 4. Creating and working with models. 5. Unittesting. 6. Object Oriented programming in python. 7. Working with databases. 8. Using extensions to customize our application\u003c/p\u003e\r\n\u003cp\u003eWe can now test that knowledge by creating a series of projects that you and your pair can tackle. Take each project as if it was given by a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003ereal client\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003eand work with your pair to complete it in a\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eprofessional\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003emanner.\u003c/p\u003e\r\n\u003cp\u003eYou will be given a set of two optional Projects. You and your pair can pick one that you can complete. Every Morning You and your pair will have to present the project to your class during standup\u003c/p\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eCopyright 2018 Moringa School.\u003c/p\u003e","frontPage":false}],"assignments":[{"exportId":"i0f55083b1c9bd6c2a9600d25fe879ecf","title":"Friday: Independent Project","type":"Assignment","content":"\u003ch3\u003eGoal\u003c/h3\u003e\r\n\u003cp\u003eThe purpose of this independent project is to demonstrate your understanding of the content you covered throughout the week. \u003c/p\u003e\r\n\u003ch3\u003eOverall Project Description\u003c/h3\u003e\r\n\u003cp\u003eIn life, you only have 60 seconds to impress someone. 1 minute can make or break you. How do we make sure that you use your 1 minute to actually say something meaningful?\u003c/p\u003e\r\n\u003cp\u003eYour task this week is to create an application that allows users to use that one minute wisely. The users will submit their one minute pitches and other users will vote on them and leave comments to give their feedback on them.\u003c/p\u003e\r\n\u003cp\u003eThe pitches are organized by category. You can have different categories like pickup lines, interview pitch, product pitch, promotion pitch.(You don't have to use these categories, you can come up with your own creative categories) \u003c/p\u003e\r\n\u003cp\u003eThe pitches should be arranged by category and the new posts should be displayed first.\u003c/p\u003e\r\n\u003ch3\u003eUser Story\u003c/h3\u003e\r\n\u003cp\u003eHere are some user stories to help you get started:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eAs a user, I would like to see the pitches other people have posted.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to vote on the pitch they liked and give it a downvote or upvote.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to be signed in for me to leave a comment\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to receive a welcoming email once I sign up.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to view the pitches I have created in my profile page.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to comment on the different pitches and leave feedback.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to submit a pitch in any category.\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to view the different categories.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003eUI Design\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan\u003eYour application should have a clean, simple, well-organized user interface. Ensure you choose a consistent colour scheme and use appropriate fonts for your application. Also, you\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eMUST\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecreate a mockup design for your application before you begin development.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003eYou can use the following resources to design your application:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003ePen and Paper - For Mockup design.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"http://getbootstrap.com/\" target=\"_blank\"\u003e\u003cspan\u003eBootstrap\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For simple responsive UI elements\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"https://coolors.co/\" target=\"_blank\"\u003e\u003cspan\u003eCoolors\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For Color scheme generation.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"https://dillinger.io/fonts.google.com\" target=\"_blank\"\u003e\u003cspan\u003eGoogle fonts\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For beautiful fonts\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e \u003c/p\u003e\r\n\u003ch3\u003eProject Objectives\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eYour project must have a user model.\u003c/li\u003e\r\n\u003cli\u003eIn your models, implement at least 1 one-to-many relationship.\u003c/li\u003e\r\n\u003cli\u003eYour project should have a comment model.\u003c/li\u003e\r\n\u003cli\u003eYour project should have a profile page.\u003c/li\u003e\r\n\u003cli\u003eYour project should follow the proper folder structure.\u003c/li\u003e\r\n\u003cli\u003eYour project should have a functioning authentication system.\u003c/li\u003e\r\n\u003cli\u003eYour project should contain migration files for the different model structure.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eTechnical Requirements\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eCreate a specs markdown file that lists down all the projects specifications.\u003c/li\u003e\r\n\u003cli\u003eAll your models should contain unittests to test the different behaviours. All your test should pass.\u003c/li\u003e\r\n\u003cli\u003eYour project should be deployed to Heroku.\u003c/li\u003e\r\n\u003cli\u003eYour project should contain proper commit messages.\u003c/li\u003e\r\n\u003cli\u003eProject is polished and in portfolio-quality state\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eFurther exploration\u003c/h3\u003e\r\n\u003cp\u003eYou can create a favourite pitch section where you list all the favourite pitches\u003c/p\u003e","submissionTypes":"a text entry box or a website url","graded":true,"pointsPossible":23.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"iaa6f6db92ef0a3b7ee11a636858b691e","title":"Friday: Independent Project ","type":"Assignment","content":"\u003ch3\u003eGoal\u003c/h3\u003e\r\n\u003cp\u003eThe purpose of this independent project is to demonstrate your understanding of the content you covered throughout the week\u003c/p\u003e\r\n\u003ch3\u003eOverall Project Description\u003c/h3\u003e\r\n\u003cp\u003eThe past few weeks have proven that you can learn anything. And a great way to solidify your knowledge is to teach it to other people. There is no better way to express your ideas and opinions than with a personal blog.\u003c/p\u003e\r\n\u003cp\u003eYour task for this week is to create a personal blogging website where you can create and share your opinions and other users can read and comment on them.\u003c/p\u003e\r\n\u003ch3\u003eUser story\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eAs a user, I would like to view the blog posts submitted\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to comment on blog posts\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to view the most recent posts\u003c/li\u003e\r\n\u003cli\u003eAs a user, I would like to alerted when a new post is made by joining a subscription.\u003c/li\u003e\r\n\u003cli\u003eAs a writer, I would like to sign in to the blog.\u003c/li\u003e\r\n\u003cli\u003eAs a writer, I would also like to create a blog from the application.\u003c/li\u003e\r\n\u003cli\u003eAs a writer, I would like to delete comments that I find insulting or degrading.\u003c/li\u003e\r\n\u003cli\u003eAs a writer, I would like to update or delete blogs I have created.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eUI Design\u003c/h3\u003e\r\n\u003cp\u003e\u003cspan\u003eYour application should have a clean, simple, well-organized user interface. Ensure you choose a consistent colour scheme and use appropriate fonts for your application. Also, you\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eMUST\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecreate a mockup design for your application before you begin development.\u003c/span\u003e\u003c/p\u003e\r\n\u003cp\u003eYou can use the following resources to design your application:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003ePen and Paper - For Mockup design.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"http://getbootstrap.com/\" target=\"_blank\"\u003e\u003cspan\u003eBootstrap\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For simple responsive UI elements\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"https://coolors.co/\" target=\"_blank\"\u003e\u003cspan\u003eCoolors\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For Color scheme generation.\u003c/li\u003e\r\n\u003cli\u003e\n\u003ca class=\"external\" href=\"https://dillinger.io/fonts.google.com\" target=\"_blank\"\u003e\u003cspan\u003eGoogle fonts\u003cspan class=\"screenreader-only\"\u003e (Links to an external site.)\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"ui-icon ui-icon-extlink ui-icon-inline\" title=\"Links to an external site.\"\u003e\u003cspan class=\"screenreader-only\"\u003eLinks to an external site.\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e \u003c/span\u003e- For beautiful fonts\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eProject Objectives\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eYour project should have a functioning authentication system.\u003c/li\u003e\r\n\u003cli\u003eYour project should contain migration files for the different model structure.\u003c/li\u003e\r\n\u003cli\u003eYour project must have a user model.\u003c/li\u003e\r\n\u003cli\u003eYour project should have a comment model.\u003c/li\u003e\r\n\u003cli\u003eYour project should have a profile page.\u003c/li\u003e\r\n\u003cli\u003eYour project should implement Ajax functionality.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eTechnical Requirements\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eCreate a specs markdown file that lists down all the projects specifications.\u003c/li\u003e\r\n\u003cli\u003eAll your models should contain unit tests to test the different behaviours. All your test should pass.\u003c/li\u003e\r\n\u003cli\u003eYour project should follow the proper folder structure.\u003c/li\u003e\r\n\u003cli\u003eYour project should be deployed to Heroku.\u003c/li\u003e\r\n\u003cli\u003eYour project should contain proper commit messages.\u003c/li\u003e\r\n\u003c/ol\u003e","submissionTypes":"a text entry box or a website url","graded":true,"pointsPossible":22.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ibcaa5bd754e036330c2ac47f036ade78","title":"Friday: IP review","type":"Assignment","content":"\u003cp\u003eThe following scale will be used to grade your Independent Project based on the criteria, please submit your links to your TM.\u003c/p\u003e","submissionTypes":null,"graded":true,"pointsPossible":18.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"i2278193d105bd704546af6caed73d09c","title":"Friday: News Highlight","type":"Assignment","content":"\u003cdiv id=\"content\"\u003e\r\n\u003cp\u003eYour Parents are hard workers and get home really late. They always seem to miss the news and are frustrated that they do not have the time to catch up on current affairs. Your task is to create an application that will help them list and preview news articles from various sources.\u003c/p\u003e\r\n\u003ch3\u003eNews API\u003c/h3\u003e\r\n\u003cp\u003eThe\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://newsapi.org/\"\u003eNews API\u003c/a\u003e\u003cspan\u003e \u003c/span\u003eprovides a wonderful api that will allow you to complete your task. Read the documentation to fully access the features and how to use it.\u003c/p\u003e\r\n\u003ch3\u003eUser Story\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eYour users should be able to see various news sources on the homepage and select the ones they prefer\u003c/li\u003e\r\n\u003cli\u003eYour users should be able to click on a news source and see all the news articles from that news source \u003c/li\u003e\r\n\u003cli\u003eThe user should see the image description and time the news article was created.\u003c/li\u003e\r\n\u003cli\u003eThe user should also be able to click on an article and read it fully from the news source.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eTechnical Requirements\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eYour project must have a specification markdown file called \u003cem\u003especs.\u003c/em\u003emd that lists down all the projects specifications.\u003c/li\u003e\r\n\u003cli\u003eYour project should contain two models for the news source and for the news article.\u003c/li\u003e\r\n\u003cli\u003eYour project's models should contain unit tests to test the different behaviors.\u003c/li\u003e\r\n\u003cli\u003eYour project must follow the proper folder structure.\u003c/li\u003e\r\n\u003cli\u003eYour project must be deployed to Heroku.\u003c/li\u003e\r\n\u003cli\u003eYour project must contain proper commit messages with a minimum of 35 commit messages.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eFurther Exploration\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eOrganize the news into different categories and display news sources from the various categories. \u003c/li\u003e\r\n\u003cli\u003eLearn how to use flask sessions and allow users not to lose the news article snippet on relaunch of the applications\u003c/li\u003e\r\n\u003cli\u003eCreate a favorite sources section where a user can add their favorite news sources and store them in a browser cookie.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003c/div\u003e","submissionTypes":"a text entry box or a website url","graded":true,"pointsPossible":21.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"id899e6bc12071b5828048a52cc4119f7","title":"Friday: Password Locker","type":"Assignment","content":"\u003cdiv id=\"content\"\u003e\r\n\u003ch2\u003ePassword locker\u003c/h2\u003e\r\n\u003cp\u003eOn average a person has at least 7 different accounts he or she has signed into. Be it email,social media, entertainment accounts or job portals. It might become really hard to remember all those passwords or even creating new ones.\u003c/p\u003e\r\n\u003cp\u003eLet us create an application that allows us to generate and store passwords for various accounts.\u003c/p\u003e\r\n\u003ch2\u003eRequirements - User Stories\u003c/h2\u003e\r\n\u003cp\u003eAs a user I would like:\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eTo create a password locker account with my details - log in and password\u003c/li\u003e\r\n\u003cli\u003eStore my existing login credentials. For example, I would want to store my twitter account credentials.\u003c/li\u003e\r\n\u003cli\u003eGenerate a password for a new credential/account. For example, let's assume that I have not yet signed up for an Instagram account, I can generate a password that I will use when I sign up for an Instagram account.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch2\u003eFurther Exploration\u003c/h2\u003e\r\n\u003cp\u003eIf you have completed the objectives below. You can try working on the following features.\u003c/p\u003e\r\n\u003col\u003e\r\n\u003cli\u003eAs a user I would like to be able to copy my credentials to the clipboard .\u003c/li\u003e\r\n\u003cli\u003eAs a user I would also like to dictate the length of the password I generate.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eTechnical Requirements\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eYour Project must contain two classes for the User data and the credential data.\u003c/li\u003e\r\n\u003cli\u003eYour project must have a way to authenticate users to see their credentials.\u003c/li\u003e\r\n\u003cli\u003eYour project must have docstrings to document your methods and functions.\u003c/li\u003e\r\n\u003cli\u003eYour project must have a test class for all your classes testing each individual method in your class.\u003c/li\u003e\r\n\u003cli\u003eYour project must have a well-detailed\u003cspan\u003e \u003c/span\u003e\u003cem\u003eREADME\u003c/em\u003e\u003cspan\u003e \u003c/span\u003efile where you\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003emust\u003c/strong\u003e\u003cspan\u003e \u003c/span\u003edocument the behavior of your app.\u003c/li\u003e\r\n\u003cli\u003eYour project must have well laid out commit messages with a minimum of 25 commits.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003c/div\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":16.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"idcec1da368fda355cc3d6cce42ceeccd","title":"Monday: Pomodoro","type":"Assignment","content":"\u003cp\u003eYour office is full of workaholics. No one takes breaks, No one goes for lunch, and the only interesting thing that you can ever talk about with your workmates, are the new cool updates on\u003cspan\u003e \u003c/span\u003e\u003cstrong\u003eSlack\u003c/strong\u003e.\u003c/p\u003e\r\n\u003cp\u003eYour team lead is afraid at this pace people will start burning out soon. He contracts you to build an application that will remind your coworkers to take a break.\u003c/p\u003e\r\n\u003ch4\u003e\u003cstrong\u003eSpecifications\u003c/strong\u003e\u003c/h4\u003e\r\n\u003col\u003e\r\n\u003cli\u003eA user should be able to log into the application.\u003c/li\u003e\r\n\u003cli\u003eA user should be able to set the amount of time he/she wants to work. It should not be more than an hour.\u003c/li\u003e\r\n\u003cli\u003eA user should be able to set the amount of time he/she wants to be on break. It should not be more than 10 min and not less than 5 min.\u003c/li\u003e\r\n\u003cli\u003eA user should specify what he/she wants to do with their break time before they start working.\u003c/li\u003e\r\n\u003cli\u003eA user should see how much time they are have left for working or taking a break. (A countdown clock).\u003c/li\u003e\r\n\u003cli\u003eA user should see how many work sessions he/she has completed.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003e\u003cstrong\u003eProject specs\u003c/strong\u003e\u003c/h3\u003e\r\n\u003col\u003e\r\n\u003cli\u003eShould be presented in a high quality manner.\u003c/li\u003e\r\n\u003cli\u003eShould be well documented with comments and have a detailed README.\u003c/li\u003e\r\n\u003cli\u003eIt should have a detailed specs file with what your project can actually do.\u003c/li\u003e\r\n\u003cli\u003eIt should be published to heroku.\u003c/li\u003e\r\n\u003cli\u003eYou and your pair should be listed as contributors to the project.\u003c/li\u003e\r\n\u003cli\u003eThe project should have a requirements.txt file with all the projects dependencies.\u003c/li\u003e\r\n\u003cli\u003eThe project should be deployed and hosted.\u003c/li\u003e\r\n\u003c/ol\u003e","submissionTypes":"a text entry box or a website url","graded":true,"pointsPossible":14.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"i5addc7af94b8258c44cbb2e77f150e54","title":"Roll Call Attendance","type":"Assignment","content":null,"submissionTypes":"an external tool","graded":true,"pointsPossible":100.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"idf1cbee6d0f78a5a52f596bb7f3f4a0a","title":"Team week project submission","type":"Assignment","content":"\u003cp\u003e\u003cspan\u003eThis rubric is a technical retrospective of the technical group dynamics and application of concepts that were gone through the module. Submit the link of your github repo and deployed site to your TM, and review the scores in your groups.\u003c/span\u003e\u003c/p\u003e","submissionTypes":"a website url","graded":true,"pointsPossible":9.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"i706262b6671945df951c974c3ad224a6","title":"Team Week Retrospective","type":"Assignment","content":"\u003cp\u003eThis rubric describes different parts of being a team member. Review the categories and score descriptions, and fill one out for each of your teammates. The review is anonymous and does not count for any final grade, so that you can give candid and honest feedback to help each other grow.\u003c/p\u003e","submissionTypes":"a text entry box","graded":true,"pointsPossible":25.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"ie088c19c90e7bb4cbc1a1ad1fd5945a0","title":"Thursday: Team Week Code Review","type":"Assignment","content":"\u003ch3\u003eCode Review\u003c/h3\u003e\r\n\u003cp\u003eGroup projects count as one of your required code reviews, and must be submitted on time. Remember, successful completion of each code review is required to pass the course.\u003c/p\u003e\r\n\u003cp\u003eYour presentation on at the end of the project will take the place of a one-on-one code review with your instructor. You will receive feedback directly.\u003c/p\u003e\r\n\u003ch3\u003eObjectives\u003c/h3\u003e\r\n\u003cp\u003eYour code will be reviewed for the following objective:\u003c/p\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eParticipation in creating and presenting a project; including collaborating effectively with teammates.\u003c/li\u003e\r\n\u003c/ul\u003e","submissionTypes":"a text entry box or a website url","graded":true,"pointsPossible":10.0,"dueAt":null,"lockAt":null,"unlockAt":null},{"exportId":"i33647bfd10feec0165b0648d8317f719","title":"Wednesday: White Board Interview Practice","type":"Assignment","content":"\u003cdiv class=\"description user_content teacher-version enhanced\"\u003e\r\n\u003cp\u003e\u003cspan\u003eTake time this morning and split into groups of 5. You will be practicing for white board interviews that will be touched on more during your project period. Pick one of you to take the mock white board interview, set a toy problem for them to go through, and at the end use the rubric below to grade and give feedback.\u003c/span\u003e\u003c/p\u003e\r\n\u003c/div\u003e","submissionTypes":"a text entry box","graded":true,"pointsPossible":12.0,"dueAt":null,"lockAt":null,"unlockAt":null}],"discussion_topics":[{"exportId":"ia1d293e63163fc9906eb4471ff53c7b5","title":"Introduction to Flask","type":"DiscussionTopic","content":"","lockAt":null,"unlockAt":null,"graded":false}],"quizzes":[],"files":[{"type":"file","name":"news_source.gif","size":4617490,"files":null},{"type":"file","name":"watchlist json.png","size":79886,"files":null},{"type":"file","name":"sources.png","size":124226,"files":null},{"type":"file","name":"new_articles.png","size":315873,"files":null}]}